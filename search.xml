<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Hello World</title>
      <link href="/2025/08/27/hello-world/"/>
      <url>/2025/08/27/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Ongwu作品示例</title>
      <link href="/2025/01/12/1/"/>
      <url>/2025/01/12/1/</url>
      
        <content type="html"><![CDATA[<p>📋 项目概述<br>智能待办事项管理系统是一个现代化的Web应用程序，旨在帮助用户高效地规划、跟踪和管理他们的日常任务与长期目标。它不仅仅是一个简单的清单工具，还集成了智能提醒、任务分类、数据分析等功能，让任务管理变得轻松而直观。</p><p>项目类型：个人全栈项目 &#x2F; 团队课程设计 &#x2F; 商业产品（请根据实际情况修改）</p><p>我的角色：全栈开发者 &#x2F; 前端负责人 &#x2F; 项目经理（请根据实际情况修改）</p><p>开发周期：2023年10月 - 2024年1月（共3个月）</p><p>项目状态：✅ 已完成 &#x2F; 🚧 持续迭代中</p><p>✨ 核心功能与特色<br>本项目具有以下主要功能和亮点：</p><p>智能任务创建与管理</p><p>支持富文本编辑的任务描述，支持添加标签和优先级。</p><p>灵活的拖拽排序，轻松调整任务计划。</p><p>智能提醒与通知</p><p>基于时间的邮件和浏览器通知，确保重要事务不被遗漏。</p><p>支持“稍后提醒”功能。</p><p>数据可视化看板</p><p>通过直观的图表（如折线图、饼图）展示任务完成情况、 productivity 趋势。</p><p>帮助用户复盘自己的工作效率。</p><p>多平台同步</p><p>基于 RESTful API 构建，支持 Web、移动端（未来规划）数据实时同步。</p><p>技术亮点</p><p>前端采用组件化开发，保障了良好的用户体验和可维护性。</p><p>后端架构清晰，接口设计规范，易于扩展。</p><p>🛠️ 技术栈<br>本项目涉及的技术和工具如下：</p><p>领域技术选型<br>前端React 18, TypeScript, Ant Design, Redux Toolkit, ECharts, Vite<br>后端Node.js, Express.js, JWT, PostgreSQL<br>数据库PostgreSQL（关系型数据库存储核心数据）<br>部署与DevOpsDocker, Nginx, GitHub Actions（CI&#x2F;CD）<br>第三方服务SendGrid（邮件服务）, Day.js（日期处理）</p>]]></content>
      
      
      <categories>
          
          <category> projects </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 扁平设计 </tag>
            
            <tag> 主题 </tag>
            
            <tag> 现代UI </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Ongwu作品示例</title>
      <link href="/2025/01/12/2/"/>
      <url>/2025/01/12/2/</url>
      
        <content type="html"><![CDATA[<p>📋 项目概述<br>智能待办事项管理系统是一个现代化的Web应用程序，旨在帮助用户高效地规划、跟踪和管理他们的日常任务与长期目标。它不仅仅是一个简单的清单工具，还集成了智能提醒、任务分类、数据分析等功能，让任务管理变得轻松而直观。</p><p>项目类型：个人全栈项目 &#x2F; 团队课程设计 &#x2F; 商业产品（请根据实际情况修改）</p><p>我的角色：全栈开发者 &#x2F; 前端负责人 &#x2F; 项目经理（请根据实际情况修改）</p><p>开发周期：2023年10月 - 2024年1月（共3个月）</p><p>项目状态：✅ 已完成 &#x2F; 🚧 持续迭代中</p><p>✨ 核心功能与特色<br>本项目具有以下主要功能和亮点：</p><p>智能任务创建与管理</p><p>支持富文本编辑的任务描述，支持添加标签和优先级。</p><p>灵活的拖拽排序，轻松调整任务计划。</p><p>智能提醒与通知</p><p>基于时间的邮件和浏览器通知，确保重要事务不被遗漏。</p><p>支持“稍后提醒”功能。</p><p>数据可视化看板</p><p>通过直观的图表（如折线图、饼图）展示任务完成情况、 productivity 趋势。</p><p>帮助用户复盘自己的工作效率。</p><p>多平台同步</p><p>基于 RESTful API 构建，支持 Web、移动端（未来规划）数据实时同步。</p><p>技术亮点</p><p>前端采用组件化开发，保障了良好的用户体验和可维护性。</p><p>后端架构清晰，接口设计规范，易于扩展。</p><p>🛠️ 技术栈<br>本项目涉及的技术和工具如下：</p><p>领域技术选型<br>前端React 18, TypeScript, Ant Design, Redux Toolkit, ECharts, Vite<br>后端Node.js, Express.js, JWT, PostgreSQL<br>数据库PostgreSQL（关系型数据库存储核心数据）<br>部署与DevOpsDocker, Nginx, GitHub Actions（CI&#x2F;CD）<br>第三方服务SendGrid（邮件服务）, Day.js（日期处理）</p>]]></content>
      
      
      <categories>
          
          <category> projects </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 扁平设计 </tag>
            
            <tag> 主题 </tag>
            
            <tag> 现代UI </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Ongwu作品示例</title>
      <link href="/2025/01/12/3%20-%20%E5%89%AF%E6%9C%AC%20(10)/"/>
      <url>/2025/01/12/3%20-%20%E5%89%AF%E6%9C%AC%20(10)/</url>
      
        <content type="html"><![CDATA[<p>📋 项目概述<br>智能待办事项管理系统是一个现代化的Web应用程序，旨在帮助用户高效地规划、跟踪和管理他们的日常任务与长期目标。它不仅仅是一个简单的清单工具，还集成了智能提醒、任务分类、数据分析等功能，让任务管理变得轻松而直观。</p><p>项目类型：个人全栈项目 &#x2F; 团队课程设计 &#x2F; 商业产品（请根据实际情况修改）</p><p>我的角色：全栈开发者 &#x2F; 前端负责人 &#x2F; 项目经理（请根据实际情况修改）</p><p>开发周期：2023年10月 - 2024年1月（共3个月）</p><p>项目状态：✅ 已完成 &#x2F; 🚧 持续迭代中</p><p>✨ 核心功能与特色<br>本项目具有以下主要功能和亮点：</p><p>智能任务创建与管理</p><p>支持富文本编辑的任务描述，支持添加标签和优先级。</p><p>灵活的拖拽排序，轻松调整任务计划。</p><p>智能提醒与通知</p><p>基于时间的邮件和浏览器通知，确保重要事务不被遗漏。</p><p>支持“稍后提醒”功能。</p><p>数据可视化看板</p><p>通过直观的图表（如折线图、饼图）展示任务完成情况、 productivity 趋势。</p><p>帮助用户复盘自己的工作效率。</p><p>多平台同步</p><p>基于 RESTful API 构建，支持 Web、移动端（未来规划）数据实时同步。</p><p>技术亮点</p><p>前端采用组件化开发，保障了良好的用户体验和可维护性。</p><p>后端架构清晰，接口设计规范，易于扩展。</p><p>🛠️ 技术栈<br>本项目涉及的技术和工具如下：</p><p>领域技术选型<br>前端React 18, TypeScript, Ant Design, Redux Toolkit, ECharts, Vite<br>后端Node.js, Express.js, JWT, PostgreSQL<br>数据库PostgreSQL（关系型数据库存储核心数据）<br>部署与DevOpsDocker, Nginx, GitHub Actions（CI&#x2F;CD）<br>第三方服务SendGrid（邮件服务）, Day.js（日期处理）</p>]]></content>
      
      
      <categories>
          
          <category> projects </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 扁平设计 </tag>
            
            <tag> 主题 </tag>
            
            <tag> 现代UI </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Ongwu作品示例</title>
      <link href="/2025/01/12/3%20-%20%E5%89%AF%E6%9C%AC%20(11)/"/>
      <url>/2025/01/12/3%20-%20%E5%89%AF%E6%9C%AC%20(11)/</url>
      
        <content type="html"><![CDATA[<p>📋 项目概述<br>智能待办事项管理系统是一个现代化的Web应用程序，旨在帮助用户高效地规划、跟踪和管理他们的日常任务与长期目标。它不仅仅是一个简单的清单工具，还集成了智能提醒、任务分类、数据分析等功能，让任务管理变得轻松而直观。</p><p>项目类型：个人全栈项目 &#x2F; 团队课程设计 &#x2F; 商业产品（请根据实际情况修改）</p><p>我的角色：全栈开发者 &#x2F; 前端负责人 &#x2F; 项目经理（请根据实际情况修改）</p><p>开发周期：2023年10月 - 2024年1月（共3个月）</p><p>项目状态：✅ 已完成 &#x2F; 🚧 持续迭代中</p><p>✨ 核心功能与特色<br>本项目具有以下主要功能和亮点：</p><p>智能任务创建与管理</p><p>支持富文本编辑的任务描述，支持添加标签和优先级。</p><p>灵活的拖拽排序，轻松调整任务计划。</p><p>智能提醒与通知</p><p>基于时间的邮件和浏览器通知，确保重要事务不被遗漏。</p><p>支持“稍后提醒”功能。</p><p>数据可视化看板</p><p>通过直观的图表（如折线图、饼图）展示任务完成情况、 productivity 趋势。</p><p>帮助用户复盘自己的工作效率。</p><p>多平台同步</p><p>基于 RESTful API 构建，支持 Web、移动端（未来规划）数据实时同步。</p><p>技术亮点</p><p>前端采用组件化开发，保障了良好的用户体验和可维护性。</p><p>后端架构清晰，接口设计规范，易于扩展。</p><p>🛠️ 技术栈<br>本项目涉及的技术和工具如下：</p><p>领域技术选型<br>前端React 18, TypeScript, Ant Design, Redux Toolkit, ECharts, Vite<br>后端Node.js, Express.js, JWT, PostgreSQL<br>数据库PostgreSQL（关系型数据库存储核心数据）<br>部署与DevOpsDocker, Nginx, GitHub Actions（CI&#x2F;CD）<br>第三方服务SendGrid（邮件服务）, Day.js（日期处理）</p>]]></content>
      
      
      <categories>
          
          <category> projects </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 扁平设计 </tag>
            
            <tag> 主题 </tag>
            
            <tag> 现代UI </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Ongwu作品示例</title>
      <link href="/2025/01/12/3%20-%20%E5%89%AF%E6%9C%AC%20(12)/"/>
      <url>/2025/01/12/3%20-%20%E5%89%AF%E6%9C%AC%20(12)/</url>
      
        <content type="html"><![CDATA[<p>📋 项目概述<br>智能待办事项管理系统是一个现代化的Web应用程序，旨在帮助用户高效地规划、跟踪和管理他们的日常任务与长期目标。它不仅仅是一个简单的清单工具，还集成了智能提醒、任务分类、数据分析等功能，让任务管理变得轻松而直观。</p><p>项目类型：个人全栈项目 &#x2F; 团队课程设计 &#x2F; 商业产品（请根据实际情况修改）</p><p>我的角色：全栈开发者 &#x2F; 前端负责人 &#x2F; 项目经理（请根据实际情况修改）</p><p>开发周期：2023年10月 - 2024年1月（共3个月）</p><p>项目状态：✅ 已完成 &#x2F; 🚧 持续迭代中</p><p>✨ 核心功能与特色<br>本项目具有以下主要功能和亮点：</p><p>智能任务创建与管理</p><p>支持富文本编辑的任务描述，支持添加标签和优先级。</p><p>灵活的拖拽排序，轻松调整任务计划。</p><p>智能提醒与通知</p><p>基于时间的邮件和浏览器通知，确保重要事务不被遗漏。</p><p>支持“稍后提醒”功能。</p><p>数据可视化看板</p><p>通过直观的图表（如折线图、饼图）展示任务完成情况、 productivity 趋势。</p><p>帮助用户复盘自己的工作效率。</p><p>多平台同步</p><p>基于 RESTful API 构建，支持 Web、移动端（未来规划）数据实时同步。</p><p>技术亮点</p><p>前端采用组件化开发，保障了良好的用户体验和可维护性。</p><p>后端架构清晰，接口设计规范，易于扩展。</p><p>🛠️ 技术栈<br>本项目涉及的技术和工具如下：</p><p>领域技术选型<br>前端React 18, TypeScript, Ant Design, Redux Toolkit, ECharts, Vite<br>后端Node.js, Express.js, JWT, PostgreSQL<br>数据库PostgreSQL（关系型数据库存储核心数据）<br>部署与DevOpsDocker, Nginx, GitHub Actions（CI&#x2F;CD）<br>第三方服务SendGrid（邮件服务）, Day.js（日期处理）</p>]]></content>
      
      
      <categories>
          
          <category> projects </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 扁平设计 </tag>
            
            <tag> 主题 </tag>
            
            <tag> 现代UI </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Ongwu作品示例</title>
      <link href="/2025/01/12/3%20-%20%E5%89%AF%E6%9C%AC%20(13)/"/>
      <url>/2025/01/12/3%20-%20%E5%89%AF%E6%9C%AC%20(13)/</url>
      
        <content type="html"><![CDATA[<p>📋 项目概述<br>智能待办事项管理系统是一个现代化的Web应用程序，旨在帮助用户高效地规划、跟踪和管理他们的日常任务与长期目标。它不仅仅是一个简单的清单工具，还集成了智能提醒、任务分类、数据分析等功能，让任务管理变得轻松而直观。</p><p>项目类型：个人全栈项目 &#x2F; 团队课程设计 &#x2F; 商业产品（请根据实际情况修改）</p><p>我的角色：全栈开发者 &#x2F; 前端负责人 &#x2F; 项目经理（请根据实际情况修改）</p><p>开发周期：2023年10月 - 2024年1月（共3个月）</p><p>项目状态：✅ 已完成 &#x2F; 🚧 持续迭代中</p><p>✨ 核心功能与特色<br>本项目具有以下主要功能和亮点：</p><p>智能任务创建与管理</p><p>支持富文本编辑的任务描述，支持添加标签和优先级。</p><p>灵活的拖拽排序，轻松调整任务计划。</p><p>智能提醒与通知</p><p>基于时间的邮件和浏览器通知，确保重要事务不被遗漏。</p><p>支持“稍后提醒”功能。</p><p>数据可视化看板</p><p>通过直观的图表（如折线图、饼图）展示任务完成情况、 productivity 趋势。</p><p>帮助用户复盘自己的工作效率。</p><p>多平台同步</p><p>基于 RESTful API 构建，支持 Web、移动端（未来规划）数据实时同步。</p><p>技术亮点</p><p>前端采用组件化开发，保障了良好的用户体验和可维护性。</p><p>后端架构清晰，接口设计规范，易于扩展。</p><p>🛠️ 技术栈<br>本项目涉及的技术和工具如下：</p><p>领域技术选型<br>前端React 18, TypeScript, Ant Design, Redux Toolkit, ECharts, Vite<br>后端Node.js, Express.js, JWT, PostgreSQL<br>数据库PostgreSQL（关系型数据库存储核心数据）<br>部署与DevOpsDocker, Nginx, GitHub Actions（CI&#x2F;CD）<br>第三方服务SendGrid（邮件服务）, Day.js（日期处理）</p>]]></content>
      
      
      <categories>
          
          <category> projects </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 扁平设计 </tag>
            
            <tag> 主题 </tag>
            
            <tag> 现代UI </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Ongwu作品示例</title>
      <link href="/2025/01/12/3%20-%20%E5%89%AF%E6%9C%AC%20(15)/"/>
      <url>/2025/01/12/3%20-%20%E5%89%AF%E6%9C%AC%20(15)/</url>
      
        <content type="html"><![CDATA[<p>📋 项目概述<br>智能待办事项管理系统是一个现代化的Web应用程序，旨在帮助用户高效地规划、跟踪和管理他们的日常任务与长期目标。它不仅仅是一个简单的清单工具，还集成了智能提醒、任务分类、数据分析等功能，让任务管理变得轻松而直观。</p><p>项目类型：个人全栈项目 &#x2F; 团队课程设计 &#x2F; 商业产品（请根据实际情况修改）</p><p>我的角色：全栈开发者 &#x2F; 前端负责人 &#x2F; 项目经理（请根据实际情况修改）</p><p>开发周期：2023年10月 - 2024年1月（共3个月）</p><p>项目状态：✅ 已完成 &#x2F; 🚧 持续迭代中</p><p>✨ 核心功能与特色<br>本项目具有以下主要功能和亮点：</p><p>智能任务创建与管理</p><p>支持富文本编辑的任务描述，支持添加标签和优先级。</p><p>灵活的拖拽排序，轻松调整任务计划。</p><p>智能提醒与通知</p><p>基于时间的邮件和浏览器通知，确保重要事务不被遗漏。</p><p>支持“稍后提醒”功能。</p><p>数据可视化看板</p><p>通过直观的图表（如折线图、饼图）展示任务完成情况、 productivity 趋势。</p><p>帮助用户复盘自己的工作效率。</p><p>多平台同步</p><p>基于 RESTful API 构建，支持 Web、移动端（未来规划）数据实时同步。</p><p>技术亮点</p><p>前端采用组件化开发，保障了良好的用户体验和可维护性。</p><p>后端架构清晰，接口设计规范，易于扩展。</p><p>🛠️ 技术栈<br>本项目涉及的技术和工具如下：</p><p>领域技术选型<br>前端React 18, TypeScript, Ant Design, Redux Toolkit, ECharts, Vite<br>后端Node.js, Express.js, JWT, PostgreSQL<br>数据库PostgreSQL（关系型数据库存储核心数据）<br>部署与DevOpsDocker, Nginx, GitHub Actions（CI&#x2F;CD）<br>第三方服务SendGrid（邮件服务）, Day.js（日期处理）</p>]]></content>
      
      
      <categories>
          
          <category> projects </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 扁平设计 </tag>
            
            <tag> 主题 </tag>
            
            <tag> 现代UI </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Ongwu作品示例</title>
      <link href="/2025/01/12/3%20-%20%E5%89%AF%E6%9C%AC%20(14)/"/>
      <url>/2025/01/12/3%20-%20%E5%89%AF%E6%9C%AC%20(14)/</url>
      
        <content type="html"><![CDATA[<p>📋 项目概述<br>智能待办事项管理系统是一个现代化的Web应用程序，旨在帮助用户高效地规划、跟踪和管理他们的日常任务与长期目标。它不仅仅是一个简单的清单工具，还集成了智能提醒、任务分类、数据分析等功能，让任务管理变得轻松而直观。</p><p>项目类型：个人全栈项目 &#x2F; 团队课程设计 &#x2F; 商业产品（请根据实际情况修改）</p><p>我的角色：全栈开发者 &#x2F; 前端负责人 &#x2F; 项目经理（请根据实际情况修改）</p><p>开发周期：2023年10月 - 2024年1月（共3个月）</p><p>项目状态：✅ 已完成 &#x2F; 🚧 持续迭代中</p><p>✨ 核心功能与特色<br>本项目具有以下主要功能和亮点：</p><p>智能任务创建与管理</p><p>支持富文本编辑的任务描述，支持添加标签和优先级。</p><p>灵活的拖拽排序，轻松调整任务计划。</p><p>智能提醒与通知</p><p>基于时间的邮件和浏览器通知，确保重要事务不被遗漏。</p><p>支持“稍后提醒”功能。</p><p>数据可视化看板</p><p>通过直观的图表（如折线图、饼图）展示任务完成情况、 productivity 趋势。</p><p>帮助用户复盘自己的工作效率。</p><p>多平台同步</p><p>基于 RESTful API 构建，支持 Web、移动端（未来规划）数据实时同步。</p><p>技术亮点</p><p>前端采用组件化开发，保障了良好的用户体验和可维护性。</p><p>后端架构清晰，接口设计规范，易于扩展。</p><p>🛠️ 技术栈<br>本项目涉及的技术和工具如下：</p><p>领域技术选型<br>前端React 18, TypeScript, Ant Design, Redux Toolkit, ECharts, Vite<br>后端Node.js, Express.js, JWT, PostgreSQL<br>数据库PostgreSQL（关系型数据库存储核心数据）<br>部署与DevOpsDocker, Nginx, GitHub Actions（CI&#x2F;CD）<br>第三方服务SendGrid（邮件服务）, Day.js（日期处理）</p>]]></content>
      
      
      <categories>
          
          <category> projects </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 扁平设计 </tag>
            
            <tag> 主题 </tag>
            
            <tag> 现代UI </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Ongwu作品示例</title>
      <link href="/2025/01/12/3%20-%20%E5%89%AF%E6%9C%AC%20(16)/"/>
      <url>/2025/01/12/3%20-%20%E5%89%AF%E6%9C%AC%20(16)/</url>
      
        <content type="html"><![CDATA[<p>📋 项目概述<br>智能待办事项管理系统是一个现代化的Web应用程序，旨在帮助用户高效地规划、跟踪和管理他们的日常任务与长期目标。它不仅仅是一个简单的清单工具，还集成了智能提醒、任务分类、数据分析等功能，让任务管理变得轻松而直观。</p><p>项目类型：个人全栈项目 &#x2F; 团队课程设计 &#x2F; 商业产品（请根据实际情况修改）</p><p>我的角色：全栈开发者 &#x2F; 前端负责人 &#x2F; 项目经理（请根据实际情况修改）</p><p>开发周期：2023年10月 - 2024年1月（共3个月）</p><p>项目状态：✅ 已完成 &#x2F; 🚧 持续迭代中</p><p>✨ 核心功能与特色<br>本项目具有以下主要功能和亮点：</p><p>智能任务创建与管理</p><p>支持富文本编辑的任务描述，支持添加标签和优先级。</p><p>灵活的拖拽排序，轻松调整任务计划。</p><p>智能提醒与通知</p><p>基于时间的邮件和浏览器通知，确保重要事务不被遗漏。</p><p>支持“稍后提醒”功能。</p><p>数据可视化看板</p><p>通过直观的图表（如折线图、饼图）展示任务完成情况、 productivity 趋势。</p><p>帮助用户复盘自己的工作效率。</p><p>多平台同步</p><p>基于 RESTful API 构建，支持 Web、移动端（未来规划）数据实时同步。</p><p>技术亮点</p><p>前端采用组件化开发，保障了良好的用户体验和可维护性。</p><p>后端架构清晰，接口设计规范，易于扩展。</p><p>🛠️ 技术栈<br>本项目涉及的技术和工具如下：</p><p>领域技术选型<br>前端React 18, TypeScript, Ant Design, Redux Toolkit, ECharts, Vite<br>后端Node.js, Express.js, JWT, PostgreSQL<br>数据库PostgreSQL（关系型数据库存储核心数据）<br>部署与DevOpsDocker, Nginx, GitHub Actions（CI&#x2F;CD）<br>第三方服务SendGrid（邮件服务）, Day.js（日期处理）</p>]]></content>
      
      
      <categories>
          
          <category> projects </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 扁平设计 </tag>
            
            <tag> 主题 </tag>
            
            <tag> 现代UI </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Ongwu作品示例</title>
      <link href="/2025/01/12/3%20-%20%E5%89%AF%E6%9C%AC%20(17)/"/>
      <url>/2025/01/12/3%20-%20%E5%89%AF%E6%9C%AC%20(17)/</url>
      
        <content type="html"><![CDATA[<p>📋 项目概述<br>智能待办事项管理系统是一个现代化的Web应用程序，旨在帮助用户高效地规划、跟踪和管理他们的日常任务与长期目标。它不仅仅是一个简单的清单工具，还集成了智能提醒、任务分类、数据分析等功能，让任务管理变得轻松而直观。</p><p>项目类型：个人全栈项目 &#x2F; 团队课程设计 &#x2F; 商业产品（请根据实际情况修改）</p><p>我的角色：全栈开发者 &#x2F; 前端负责人 &#x2F; 项目经理（请根据实际情况修改）</p><p>开发周期：2023年10月 - 2024年1月（共3个月）</p><p>项目状态：✅ 已完成 &#x2F; 🚧 持续迭代中</p><p>✨ 核心功能与特色<br>本项目具有以下主要功能和亮点：</p><p>智能任务创建与管理</p><p>支持富文本编辑的任务描述，支持添加标签和优先级。</p><p>灵活的拖拽排序，轻松调整任务计划。</p><p>智能提醒与通知</p><p>基于时间的邮件和浏览器通知，确保重要事务不被遗漏。</p><p>支持“稍后提醒”功能。</p><p>数据可视化看板</p><p>通过直观的图表（如折线图、饼图）展示任务完成情况、 productivity 趋势。</p><p>帮助用户复盘自己的工作效率。</p><p>多平台同步</p><p>基于 RESTful API 构建，支持 Web、移动端（未来规划）数据实时同步。</p><p>技术亮点</p><p>前端采用组件化开发，保障了良好的用户体验和可维护性。</p><p>后端架构清晰，接口设计规范，易于扩展。</p><p>🛠️ 技术栈<br>本项目涉及的技术和工具如下：</p><p>领域技术选型<br>前端React 18, TypeScript, Ant Design, Redux Toolkit, ECharts, Vite<br>后端Node.js, Express.js, JWT, PostgreSQL<br>数据库PostgreSQL（关系型数据库存储核心数据）<br>部署与DevOpsDocker, Nginx, GitHub Actions（CI&#x2F;CD）<br>第三方服务SendGrid（邮件服务）, Day.js（日期处理）</p>]]></content>
      
      
      <categories>
          
          <category> projects </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 扁平设计 </tag>
            
            <tag> 主题 </tag>
            
            <tag> 现代UI </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Ongwu作品示例</title>
      <link href="/2025/01/12/3%20-%20%E5%89%AF%E6%9C%AC%20(18)/"/>
      <url>/2025/01/12/3%20-%20%E5%89%AF%E6%9C%AC%20(18)/</url>
      
        <content type="html"><![CDATA[<p>📋 项目概述<br>智能待办事项管理系统是一个现代化的Web应用程序，旨在帮助用户高效地规划、跟踪和管理他们的日常任务与长期目标。它不仅仅是一个简单的清单工具，还集成了智能提醒、任务分类、数据分析等功能，让任务管理变得轻松而直观。</p><p>项目类型：个人全栈项目 &#x2F; 团队课程设计 &#x2F; 商业产品（请根据实际情况修改）</p><p>我的角色：全栈开发者 &#x2F; 前端负责人 &#x2F; 项目经理（请根据实际情况修改）</p><p>开发周期：2023年10月 - 2024年1月（共3个月）</p><p>项目状态：✅ 已完成 &#x2F; 🚧 持续迭代中</p><p>✨ 核心功能与特色<br>本项目具有以下主要功能和亮点：</p><p>智能任务创建与管理</p><p>支持富文本编辑的任务描述，支持添加标签和优先级。</p><p>灵活的拖拽排序，轻松调整任务计划。</p><p>智能提醒与通知</p><p>基于时间的邮件和浏览器通知，确保重要事务不被遗漏。</p><p>支持“稍后提醒”功能。</p><p>数据可视化看板</p><p>通过直观的图表（如折线图、饼图）展示任务完成情况、 productivity 趋势。</p><p>帮助用户复盘自己的工作效率。</p><p>多平台同步</p><p>基于 RESTful API 构建，支持 Web、移动端（未来规划）数据实时同步。</p><p>技术亮点</p><p>前端采用组件化开发，保障了良好的用户体验和可维护性。</p><p>后端架构清晰，接口设计规范，易于扩展。</p><p>🛠️ 技术栈<br>本项目涉及的技术和工具如下：</p><p>领域技术选型<br>前端React 18, TypeScript, Ant Design, Redux Toolkit, ECharts, Vite<br>后端Node.js, Express.js, JWT, PostgreSQL<br>数据库PostgreSQL（关系型数据库存储核心数据）<br>部署与DevOpsDocker, Nginx, GitHub Actions（CI&#x2F;CD）<br>第三方服务SendGrid（邮件服务）, Day.js（日期处理）</p>]]></content>
      
      
      <categories>
          
          <category> projects </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 扁平设计 </tag>
            
            <tag> 主题 </tag>
            
            <tag> 现代UI </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Ongwu作品示例</title>
      <link href="/2025/01/12/3%20-%20%E5%89%AF%E6%9C%AC%20(19)/"/>
      <url>/2025/01/12/3%20-%20%E5%89%AF%E6%9C%AC%20(19)/</url>
      
        <content type="html"><![CDATA[<p>📋 项目概述<br>智能待办事项管理系统是一个现代化的Web应用程序，旨在帮助用户高效地规划、跟踪和管理他们的日常任务与长期目标。它不仅仅是一个简单的清单工具，还集成了智能提醒、任务分类、数据分析等功能，让任务管理变得轻松而直观。</p><p>项目类型：个人全栈项目 &#x2F; 团队课程设计 &#x2F; 商业产品（请根据实际情况修改）</p><p>我的角色：全栈开发者 &#x2F; 前端负责人 &#x2F; 项目经理（请根据实际情况修改）</p><p>开发周期：2023年10月 - 2024年1月（共3个月）</p><p>项目状态：✅ 已完成 &#x2F; 🚧 持续迭代中</p><p>✨ 核心功能与特色<br>本项目具有以下主要功能和亮点：</p><p>智能任务创建与管理</p><p>支持富文本编辑的任务描述，支持添加标签和优先级。</p><p>灵活的拖拽排序，轻松调整任务计划。</p><p>智能提醒与通知</p><p>基于时间的邮件和浏览器通知，确保重要事务不被遗漏。</p><p>支持“稍后提醒”功能。</p><p>数据可视化看板</p><p>通过直观的图表（如折线图、饼图）展示任务完成情况、 productivity 趋势。</p><p>帮助用户复盘自己的工作效率。</p><p>多平台同步</p><p>基于 RESTful API 构建，支持 Web、移动端（未来规划）数据实时同步。</p><p>技术亮点</p><p>前端采用组件化开发，保障了良好的用户体验和可维护性。</p><p>后端架构清晰，接口设计规范，易于扩展。</p><p>🛠️ 技术栈<br>本项目涉及的技术和工具如下：</p><p>领域技术选型<br>前端React 18, TypeScript, Ant Design, Redux Toolkit, ECharts, Vite<br>后端Node.js, Express.js, JWT, PostgreSQL<br>数据库PostgreSQL（关系型数据库存储核心数据）<br>部署与DevOpsDocker, Nginx, GitHub Actions（CI&#x2F;CD）<br>第三方服务SendGrid（邮件服务）, Day.js（日期处理）</p>]]></content>
      
      
      <categories>
          
          <category> projects </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 扁平设计 </tag>
            
            <tag> 主题 </tag>
            
            <tag> 现代UI </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Ongwu作品示例</title>
      <link href="/2025/01/12/3%20-%20%E5%89%AF%E6%9C%AC%20(2)/"/>
      <url>/2025/01/12/3%20-%20%E5%89%AF%E6%9C%AC%20(2)/</url>
      
        <content type="html"><![CDATA[<p>📋 项目概述<br>智能待办事项管理系统是一个现代化的Web应用程序，旨在帮助用户高效地规划、跟踪和管理他们的日常任务与长期目标。它不仅仅是一个简单的清单工具，还集成了智能提醒、任务分类、数据分析等功能，让任务管理变得轻松而直观。</p><p>项目类型：个人全栈项目 &#x2F; 团队课程设计 &#x2F; 商业产品（请根据实际情况修改）</p><p>我的角色：全栈开发者 &#x2F; 前端负责人 &#x2F; 项目经理（请根据实际情况修改）</p><p>开发周期：2023年10月 - 2024年1月（共3个月）</p><p>项目状态：✅ 已完成 &#x2F; 🚧 持续迭代中</p><p>✨ 核心功能与特色<br>本项目具有以下主要功能和亮点：</p><p>智能任务创建与管理</p><p>支持富文本编辑的任务描述，支持添加标签和优先级。</p><p>灵活的拖拽排序，轻松调整任务计划。</p><p>智能提醒与通知</p><p>基于时间的邮件和浏览器通知，确保重要事务不被遗漏。</p><p>支持“稍后提醒”功能。</p><p>数据可视化看板</p><p>通过直观的图表（如折线图、饼图）展示任务完成情况、 productivity 趋势。</p><p>帮助用户复盘自己的工作效率。</p><p>多平台同步</p><p>基于 RESTful API 构建，支持 Web、移动端（未来规划）数据实时同步。</p><p>技术亮点</p><p>前端采用组件化开发，保障了良好的用户体验和可维护性。</p><p>后端架构清晰，接口设计规范，易于扩展。</p><p>🛠️ 技术栈<br>本项目涉及的技术和工具如下：</p><p>领域技术选型<br>前端React 18, TypeScript, Ant Design, Redux Toolkit, ECharts, Vite<br>后端Node.js, Express.js, JWT, PostgreSQL<br>数据库PostgreSQL（关系型数据库存储核心数据）<br>部署与DevOpsDocker, Nginx, GitHub Actions（CI&#x2F;CD）<br>第三方服务SendGrid（邮件服务）, Day.js（日期处理）</p>]]></content>
      
      
      <categories>
          
          <category> projects </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 扁平设计 </tag>
            
            <tag> 主题 </tag>
            
            <tag> 现代UI </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Ongwu作品示例</title>
      <link href="/2025/01/12/3%20-%20%E5%89%AF%E6%9C%AC%20(20)/"/>
      <url>/2025/01/12/3%20-%20%E5%89%AF%E6%9C%AC%20(20)/</url>
      
        <content type="html"><![CDATA[<p>📋 项目概述<br>智能待办事项管理系统是一个现代化的Web应用程序，旨在帮助用户高效地规划、跟踪和管理他们的日常任务与长期目标。它不仅仅是一个简单的清单工具，还集成了智能提醒、任务分类、数据分析等功能，让任务管理变得轻松而直观。</p><p>项目类型：个人全栈项目 &#x2F; 团队课程设计 &#x2F; 商业产品（请根据实际情况修改）</p><p>我的角色：全栈开发者 &#x2F; 前端负责人 &#x2F; 项目经理（请根据实际情况修改）</p><p>开发周期：2023年10月 - 2024年1月（共3个月）</p><p>项目状态：✅ 已完成 &#x2F; 🚧 持续迭代中</p><p>✨ 核心功能与特色<br>本项目具有以下主要功能和亮点：</p><p>智能任务创建与管理</p><p>支持富文本编辑的任务描述，支持添加标签和优先级。</p><p>灵活的拖拽排序，轻松调整任务计划。</p><p>智能提醒与通知</p><p>基于时间的邮件和浏览器通知，确保重要事务不被遗漏。</p><p>支持“稍后提醒”功能。</p><p>数据可视化看板</p><p>通过直观的图表（如折线图、饼图）展示任务完成情况、 productivity 趋势。</p><p>帮助用户复盘自己的工作效率。</p><p>多平台同步</p><p>基于 RESTful API 构建，支持 Web、移动端（未来规划）数据实时同步。</p><p>技术亮点</p><p>前端采用组件化开发，保障了良好的用户体验和可维护性。</p><p>后端架构清晰，接口设计规范，易于扩展。</p><p>🛠️ 技术栈<br>本项目涉及的技术和工具如下：</p><p>领域技术选型<br>前端React 18, TypeScript, Ant Design, Redux Toolkit, ECharts, Vite<br>后端Node.js, Express.js, JWT, PostgreSQL<br>数据库PostgreSQL（关系型数据库存储核心数据）<br>部署与DevOpsDocker, Nginx, GitHub Actions（CI&#x2F;CD）<br>第三方服务SendGrid（邮件服务）, Day.js（日期处理）</p>]]></content>
      
      
      <categories>
          
          <category> projects </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 扁平设计 </tag>
            
            <tag> 主题 </tag>
            
            <tag> 现代UI </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Ongwu作品示例</title>
      <link href="/2025/01/12/3%20-%20%E5%89%AF%E6%9C%AC%20(21)/"/>
      <url>/2025/01/12/3%20-%20%E5%89%AF%E6%9C%AC%20(21)/</url>
      
        <content type="html"><![CDATA[<p>📋 项目概述<br>智能待办事项管理系统是一个现代化的Web应用程序，旨在帮助用户高效地规划、跟踪和管理他们的日常任务与长期目标。它不仅仅是一个简单的清单工具，还集成了智能提醒、任务分类、数据分析等功能，让任务管理变得轻松而直观。</p><p>项目类型：个人全栈项目 &#x2F; 团队课程设计 &#x2F; 商业产品（请根据实际情况修改）</p><p>我的角色：全栈开发者 &#x2F; 前端负责人 &#x2F; 项目经理（请根据实际情况修改）</p><p>开发周期：2023年10月 - 2024年1月（共3个月）</p><p>项目状态：✅ 已完成 &#x2F; 🚧 持续迭代中</p><p>✨ 核心功能与特色<br>本项目具有以下主要功能和亮点：</p><p>智能任务创建与管理</p><p>支持富文本编辑的任务描述，支持添加标签和优先级。</p><p>灵活的拖拽排序，轻松调整任务计划。</p><p>智能提醒与通知</p><p>基于时间的邮件和浏览器通知，确保重要事务不被遗漏。</p><p>支持“稍后提醒”功能。</p><p>数据可视化看板</p><p>通过直观的图表（如折线图、饼图）展示任务完成情况、 productivity 趋势。</p><p>帮助用户复盘自己的工作效率。</p><p>多平台同步</p><p>基于 RESTful API 构建，支持 Web、移动端（未来规划）数据实时同步。</p><p>技术亮点</p><p>前端采用组件化开发，保障了良好的用户体验和可维护性。</p><p>后端架构清晰，接口设计规范，易于扩展。</p><p>🛠️ 技术栈<br>本项目涉及的技术和工具如下：</p><p>领域技术选型<br>前端React 18, TypeScript, Ant Design, Redux Toolkit, ECharts, Vite<br>后端Node.js, Express.js, JWT, PostgreSQL<br>数据库PostgreSQL（关系型数据库存储核心数据）<br>部署与DevOpsDocker, Nginx, GitHub Actions（CI&#x2F;CD）<br>第三方服务SendGrid（邮件服务）, Day.js（日期处理）</p>]]></content>
      
      
      <categories>
          
          <category> projects </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 扁平设计 </tag>
            
            <tag> 主题 </tag>
            
            <tag> 现代UI </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Ongwu作品示例</title>
      <link href="/2025/01/12/3%20-%20%E5%89%AF%E6%9C%AC%20(22)/"/>
      <url>/2025/01/12/3%20-%20%E5%89%AF%E6%9C%AC%20(22)/</url>
      
        <content type="html"><![CDATA[<p>📋 项目概述<br>智能待办事项管理系统是一个现代化的Web应用程序，旨在帮助用户高效地规划、跟踪和管理他们的日常任务与长期目标。它不仅仅是一个简单的清单工具，还集成了智能提醒、任务分类、数据分析等功能，让任务管理变得轻松而直观。</p><p>项目类型：个人全栈项目 &#x2F; 团队课程设计 &#x2F; 商业产品（请根据实际情况修改）</p><p>我的角色：全栈开发者 &#x2F; 前端负责人 &#x2F; 项目经理（请根据实际情况修改）</p><p>开发周期：2023年10月 - 2024年1月（共3个月）</p><p>项目状态：✅ 已完成 &#x2F; 🚧 持续迭代中</p><p>✨ 核心功能与特色<br>本项目具有以下主要功能和亮点：</p><p>智能任务创建与管理</p><p>支持富文本编辑的任务描述，支持添加标签和优先级。</p><p>灵活的拖拽排序，轻松调整任务计划。</p><p>智能提醒与通知</p><p>基于时间的邮件和浏览器通知，确保重要事务不被遗漏。</p><p>支持“稍后提醒”功能。</p><p>数据可视化看板</p><p>通过直观的图表（如折线图、饼图）展示任务完成情况、 productivity 趋势。</p><p>帮助用户复盘自己的工作效率。</p><p>多平台同步</p><p>基于 RESTful API 构建，支持 Web、移动端（未来规划）数据实时同步。</p><p>技术亮点</p><p>前端采用组件化开发，保障了良好的用户体验和可维护性。</p><p>后端架构清晰，接口设计规范，易于扩展。</p><p>🛠️ 技术栈<br>本项目涉及的技术和工具如下：</p><p>领域技术选型<br>前端React 18, TypeScript, Ant Design, Redux Toolkit, ECharts, Vite<br>后端Node.js, Express.js, JWT, PostgreSQL<br>数据库PostgreSQL（关系型数据库存储核心数据）<br>部署与DevOpsDocker, Nginx, GitHub Actions（CI&#x2F;CD）<br>第三方服务SendGrid（邮件服务）, Day.js（日期处理）</p>]]></content>
      
      
      <categories>
          
          <category> projects </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 扁平设计 </tag>
            
            <tag> 主题 </tag>
            
            <tag> 现代UI </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Ongwu作品示例</title>
      <link href="/2025/01/12/3%20-%20%E5%89%AF%E6%9C%AC%20(24)/"/>
      <url>/2025/01/12/3%20-%20%E5%89%AF%E6%9C%AC%20(24)/</url>
      
        <content type="html"><![CDATA[<p>📋 项目概述<br>智能待办事项管理系统是一个现代化的Web应用程序，旨在帮助用户高效地规划、跟踪和管理他们的日常任务与长期目标。它不仅仅是一个简单的清单工具，还集成了智能提醒、任务分类、数据分析等功能，让任务管理变得轻松而直观。</p><p>项目类型：个人全栈项目 &#x2F; 团队课程设计 &#x2F; 商业产品（请根据实际情况修改）</p><p>我的角色：全栈开发者 &#x2F; 前端负责人 &#x2F; 项目经理（请根据实际情况修改）</p><p>开发周期：2023年10月 - 2024年1月（共3个月）</p><p>项目状态：✅ 已完成 &#x2F; 🚧 持续迭代中</p><p>✨ 核心功能与特色<br>本项目具有以下主要功能和亮点：</p><p>智能任务创建与管理</p><p>支持富文本编辑的任务描述，支持添加标签和优先级。</p><p>灵活的拖拽排序，轻松调整任务计划。</p><p>智能提醒与通知</p><p>基于时间的邮件和浏览器通知，确保重要事务不被遗漏。</p><p>支持“稍后提醒”功能。</p><p>数据可视化看板</p><p>通过直观的图表（如折线图、饼图）展示任务完成情况、 productivity 趋势。</p><p>帮助用户复盘自己的工作效率。</p><p>多平台同步</p><p>基于 RESTful API 构建，支持 Web、移动端（未来规划）数据实时同步。</p><p>技术亮点</p><p>前端采用组件化开发，保障了良好的用户体验和可维护性。</p><p>后端架构清晰，接口设计规范，易于扩展。</p><p>🛠️ 技术栈<br>本项目涉及的技术和工具如下：</p><p>领域技术选型<br>前端React 18, TypeScript, Ant Design, Redux Toolkit, ECharts, Vite<br>后端Node.js, Express.js, JWT, PostgreSQL<br>数据库PostgreSQL（关系型数据库存储核心数据）<br>部署与DevOpsDocker, Nginx, GitHub Actions（CI&#x2F;CD）<br>第三方服务SendGrid（邮件服务）, Day.js（日期处理）</p>]]></content>
      
      
      <categories>
          
          <category> projects </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 扁平设计 </tag>
            
            <tag> 主题 </tag>
            
            <tag> 现代UI </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Ongwu作品示例</title>
      <link href="/2025/01/12/3%20-%20%E5%89%AF%E6%9C%AC%20(23)/"/>
      <url>/2025/01/12/3%20-%20%E5%89%AF%E6%9C%AC%20(23)/</url>
      
        <content type="html"><![CDATA[<p>📋 项目概述<br>智能待办事项管理系统是一个现代化的Web应用程序，旨在帮助用户高效地规划、跟踪和管理他们的日常任务与长期目标。它不仅仅是一个简单的清单工具，还集成了智能提醒、任务分类、数据分析等功能，让任务管理变得轻松而直观。</p><p>项目类型：个人全栈项目 &#x2F; 团队课程设计 &#x2F; 商业产品（请根据实际情况修改）</p><p>我的角色：全栈开发者 &#x2F; 前端负责人 &#x2F; 项目经理（请根据实际情况修改）</p><p>开发周期：2023年10月 - 2024年1月（共3个月）</p><p>项目状态：✅ 已完成 &#x2F; 🚧 持续迭代中</p><p>✨ 核心功能与特色<br>本项目具有以下主要功能和亮点：</p><p>智能任务创建与管理</p><p>支持富文本编辑的任务描述，支持添加标签和优先级。</p><p>灵活的拖拽排序，轻松调整任务计划。</p><p>智能提醒与通知</p><p>基于时间的邮件和浏览器通知，确保重要事务不被遗漏。</p><p>支持“稍后提醒”功能。</p><p>数据可视化看板</p><p>通过直观的图表（如折线图、饼图）展示任务完成情况、 productivity 趋势。</p><p>帮助用户复盘自己的工作效率。</p><p>多平台同步</p><p>基于 RESTful API 构建，支持 Web、移动端（未来规划）数据实时同步。</p><p>技术亮点</p><p>前端采用组件化开发，保障了良好的用户体验和可维护性。</p><p>后端架构清晰，接口设计规范，易于扩展。</p><p>🛠️ 技术栈<br>本项目涉及的技术和工具如下：</p><p>领域技术选型<br>前端React 18, TypeScript, Ant Design, Redux Toolkit, ECharts, Vite<br>后端Node.js, Express.js, JWT, PostgreSQL<br>数据库PostgreSQL（关系型数据库存储核心数据）<br>部署与DevOpsDocker, Nginx, GitHub Actions（CI&#x2F;CD）<br>第三方服务SendGrid（邮件服务）, Day.js（日期处理）</p>]]></content>
      
      
      <categories>
          
          <category> projects </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 扁平设计 </tag>
            
            <tag> 主题 </tag>
            
            <tag> 现代UI </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Ongwu作品示例</title>
      <link href="/2025/01/12/3%20-%20%E5%89%AF%E6%9C%AC%20(25)/"/>
      <url>/2025/01/12/3%20-%20%E5%89%AF%E6%9C%AC%20(25)/</url>
      
        <content type="html"><![CDATA[<p>📋 项目概述<br>智能待办事项管理系统是一个现代化的Web应用程序，旨在帮助用户高效地规划、跟踪和管理他们的日常任务与长期目标。它不仅仅是一个简单的清单工具，还集成了智能提醒、任务分类、数据分析等功能，让任务管理变得轻松而直观。</p><p>项目类型：个人全栈项目 &#x2F; 团队课程设计 &#x2F; 商业产品（请根据实际情况修改）</p><p>我的角色：全栈开发者 &#x2F; 前端负责人 &#x2F; 项目经理（请根据实际情况修改）</p><p>开发周期：2023年10月 - 2024年1月（共3个月）</p><p>项目状态：✅ 已完成 &#x2F; 🚧 持续迭代中</p><p>✨ 核心功能与特色<br>本项目具有以下主要功能和亮点：</p><p>智能任务创建与管理</p><p>支持富文本编辑的任务描述，支持添加标签和优先级。</p><p>灵活的拖拽排序，轻松调整任务计划。</p><p>智能提醒与通知</p><p>基于时间的邮件和浏览器通知，确保重要事务不被遗漏。</p><p>支持“稍后提醒”功能。</p><p>数据可视化看板</p><p>通过直观的图表（如折线图、饼图）展示任务完成情况、 productivity 趋势。</p><p>帮助用户复盘自己的工作效率。</p><p>多平台同步</p><p>基于 RESTful API 构建，支持 Web、移动端（未来规划）数据实时同步。</p><p>技术亮点</p><p>前端采用组件化开发，保障了良好的用户体验和可维护性。</p><p>后端架构清晰，接口设计规范，易于扩展。</p><p>🛠️ 技术栈<br>本项目涉及的技术和工具如下：</p><p>领域技术选型<br>前端React 18, TypeScript, Ant Design, Redux Toolkit, ECharts, Vite<br>后端Node.js, Express.js, JWT, PostgreSQL<br>数据库PostgreSQL（关系型数据库存储核心数据）<br>部署与DevOpsDocker, Nginx, GitHub Actions（CI&#x2F;CD）<br>第三方服务SendGrid（邮件服务）, Day.js（日期处理）</p>]]></content>
      
      
      <categories>
          
          <category> projects </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 扁平设计 </tag>
            
            <tag> 主题 </tag>
            
            <tag> 现代UI </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Ongwu作品示例</title>
      <link href="/2025/01/12/3%20-%20%E5%89%AF%E6%9C%AC%20(26)/"/>
      <url>/2025/01/12/3%20-%20%E5%89%AF%E6%9C%AC%20(26)/</url>
      
        <content type="html"><![CDATA[<p>📋 项目概述<br>智能待办事项管理系统是一个现代化的Web应用程序，旨在帮助用户高效地规划、跟踪和管理他们的日常任务与长期目标。它不仅仅是一个简单的清单工具，还集成了智能提醒、任务分类、数据分析等功能，让任务管理变得轻松而直观。</p><p>项目类型：个人全栈项目 &#x2F; 团队课程设计 &#x2F; 商业产品（请根据实际情况修改）</p><p>我的角色：全栈开发者 &#x2F; 前端负责人 &#x2F; 项目经理（请根据实际情况修改）</p><p>开发周期：2023年10月 - 2024年1月（共3个月）</p><p>项目状态：✅ 已完成 &#x2F; 🚧 持续迭代中</p><p>✨ 核心功能与特色<br>本项目具有以下主要功能和亮点：</p><p>智能任务创建与管理</p><p>支持富文本编辑的任务描述，支持添加标签和优先级。</p><p>灵活的拖拽排序，轻松调整任务计划。</p><p>智能提醒与通知</p><p>基于时间的邮件和浏览器通知，确保重要事务不被遗漏。</p><p>支持“稍后提醒”功能。</p><p>数据可视化看板</p><p>通过直观的图表（如折线图、饼图）展示任务完成情况、 productivity 趋势。</p><p>帮助用户复盘自己的工作效率。</p><p>多平台同步</p><p>基于 RESTful API 构建，支持 Web、移动端（未来规划）数据实时同步。</p><p>技术亮点</p><p>前端采用组件化开发，保障了良好的用户体验和可维护性。</p><p>后端架构清晰，接口设计规范，易于扩展。</p><p>🛠️ 技术栈<br>本项目涉及的技术和工具如下：</p><p>领域技术选型<br>前端React 18, TypeScript, Ant Design, Redux Toolkit, ECharts, Vite<br>后端Node.js, Express.js, JWT, PostgreSQL<br>数据库PostgreSQL（关系型数据库存储核心数据）<br>部署与DevOpsDocker, Nginx, GitHub Actions（CI&#x2F;CD）<br>第三方服务SendGrid（邮件服务）, Day.js（日期处理）</p>]]></content>
      
      
      <categories>
          
          <category> projects </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 扁平设计 </tag>
            
            <tag> 主题 </tag>
            
            <tag> 现代UI </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Ongwu作品示例</title>
      <link href="/2025/01/12/3%20-%20%E5%89%AF%E6%9C%AC%20(27)/"/>
      <url>/2025/01/12/3%20-%20%E5%89%AF%E6%9C%AC%20(27)/</url>
      
        <content type="html"><![CDATA[<p>📋 项目概述<br>智能待办事项管理系统是一个现代化的Web应用程序，旨在帮助用户高效地规划、跟踪和管理他们的日常任务与长期目标。它不仅仅是一个简单的清单工具，还集成了智能提醒、任务分类、数据分析等功能，让任务管理变得轻松而直观。</p><p>项目类型：个人全栈项目 &#x2F; 团队课程设计 &#x2F; 商业产品（请根据实际情况修改）</p><p>我的角色：全栈开发者 &#x2F; 前端负责人 &#x2F; 项目经理（请根据实际情况修改）</p><p>开发周期：2023年10月 - 2024年1月（共3个月）</p><p>项目状态：✅ 已完成 &#x2F; 🚧 持续迭代中</p><p>✨ 核心功能与特色<br>本项目具有以下主要功能和亮点：</p><p>智能任务创建与管理</p><p>支持富文本编辑的任务描述，支持添加标签和优先级。</p><p>灵活的拖拽排序，轻松调整任务计划。</p><p>智能提醒与通知</p><p>基于时间的邮件和浏览器通知，确保重要事务不被遗漏。</p><p>支持“稍后提醒”功能。</p><p>数据可视化看板</p><p>通过直观的图表（如折线图、饼图）展示任务完成情况、 productivity 趋势。</p><p>帮助用户复盘自己的工作效率。</p><p>多平台同步</p><p>基于 RESTful API 构建，支持 Web、移动端（未来规划）数据实时同步。</p><p>技术亮点</p><p>前端采用组件化开发，保障了良好的用户体验和可维护性。</p><p>后端架构清晰，接口设计规范，易于扩展。</p><p>🛠️ 技术栈<br>本项目涉及的技术和工具如下：</p><p>领域技术选型<br>前端React 18, TypeScript, Ant Design, Redux Toolkit, ECharts, Vite<br>后端Node.js, Express.js, JWT, PostgreSQL<br>数据库PostgreSQL（关系型数据库存储核心数据）<br>部署与DevOpsDocker, Nginx, GitHub Actions（CI&#x2F;CD）<br>第三方服务SendGrid（邮件服务）, Day.js（日期处理）</p>]]></content>
      
      
      <categories>
          
          <category> projects </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 扁平设计 </tag>
            
            <tag> 主题 </tag>
            
            <tag> 现代UI </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Ongwu作品示例</title>
      <link href="/2025/01/12/3%20-%20%E5%89%AF%E6%9C%AC%20(28)/"/>
      <url>/2025/01/12/3%20-%20%E5%89%AF%E6%9C%AC%20(28)/</url>
      
        <content type="html"><![CDATA[<p>📋 项目概述<br>智能待办事项管理系统是一个现代化的Web应用程序，旨在帮助用户高效地规划、跟踪和管理他们的日常任务与长期目标。它不仅仅是一个简单的清单工具，还集成了智能提醒、任务分类、数据分析等功能，让任务管理变得轻松而直观。</p><p>项目类型：个人全栈项目 &#x2F; 团队课程设计 &#x2F; 商业产品（请根据实际情况修改）</p><p>我的角色：全栈开发者 &#x2F; 前端负责人 &#x2F; 项目经理（请根据实际情况修改）</p><p>开发周期：2023年10月 - 2024年1月（共3个月）</p><p>项目状态：✅ 已完成 &#x2F; 🚧 持续迭代中</p><p>✨ 核心功能与特色<br>本项目具有以下主要功能和亮点：</p><p>智能任务创建与管理</p><p>支持富文本编辑的任务描述，支持添加标签和优先级。</p><p>灵活的拖拽排序，轻松调整任务计划。</p><p>智能提醒与通知</p><p>基于时间的邮件和浏览器通知，确保重要事务不被遗漏。</p><p>支持“稍后提醒”功能。</p><p>数据可视化看板</p><p>通过直观的图表（如折线图、饼图）展示任务完成情况、 productivity 趋势。</p><p>帮助用户复盘自己的工作效率。</p><p>多平台同步</p><p>基于 RESTful API 构建，支持 Web、移动端（未来规划）数据实时同步。</p><p>技术亮点</p><p>前端采用组件化开发，保障了良好的用户体验和可维护性。</p><p>后端架构清晰，接口设计规范，易于扩展。</p><p>🛠️ 技术栈<br>本项目涉及的技术和工具如下：</p><p>领域技术选型<br>前端React 18, TypeScript, Ant Design, Redux Toolkit, ECharts, Vite<br>后端Node.js, Express.js, JWT, PostgreSQL<br>数据库PostgreSQL（关系型数据库存储核心数据）<br>部署与DevOpsDocker, Nginx, GitHub Actions（CI&#x2F;CD）<br>第三方服务SendGrid（邮件服务）, Day.js（日期处理）</p>]]></content>
      
      
      <categories>
          
          <category> projects </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 扁平设计 </tag>
            
            <tag> 主题 </tag>
            
            <tag> 现代UI </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Ongwu作品示例</title>
      <link href="/2025/01/12/3%20-%20%E5%89%AF%E6%9C%AC%20(29)/"/>
      <url>/2025/01/12/3%20-%20%E5%89%AF%E6%9C%AC%20(29)/</url>
      
        <content type="html"><![CDATA[<p>📋 项目概述<br>智能待办事项管理系统是一个现代化的Web应用程序，旨在帮助用户高效地规划、跟踪和管理他们的日常任务与长期目标。它不仅仅是一个简单的清单工具，还集成了智能提醒、任务分类、数据分析等功能，让任务管理变得轻松而直观。</p><p>项目类型：个人全栈项目 &#x2F; 团队课程设计 &#x2F; 商业产品（请根据实际情况修改）</p><p>我的角色：全栈开发者 &#x2F; 前端负责人 &#x2F; 项目经理（请根据实际情况修改）</p><p>开发周期：2023年10月 - 2024年1月（共3个月）</p><p>项目状态：✅ 已完成 &#x2F; 🚧 持续迭代中</p><p>✨ 核心功能与特色<br>本项目具有以下主要功能和亮点：</p><p>智能任务创建与管理</p><p>支持富文本编辑的任务描述，支持添加标签和优先级。</p><p>灵活的拖拽排序，轻松调整任务计划。</p><p>智能提醒与通知</p><p>基于时间的邮件和浏览器通知，确保重要事务不被遗漏。</p><p>支持“稍后提醒”功能。</p><p>数据可视化看板</p><p>通过直观的图表（如折线图、饼图）展示任务完成情况、 productivity 趋势。</p><p>帮助用户复盘自己的工作效率。</p><p>多平台同步</p><p>基于 RESTful API 构建，支持 Web、移动端（未来规划）数据实时同步。</p><p>技术亮点</p><p>前端采用组件化开发，保障了良好的用户体验和可维护性。</p><p>后端架构清晰，接口设计规范，易于扩展。</p><p>🛠️ 技术栈<br>本项目涉及的技术和工具如下：</p><p>领域技术选型<br>前端React 18, TypeScript, Ant Design, Redux Toolkit, ECharts, Vite<br>后端Node.js, Express.js, JWT, PostgreSQL<br>数据库PostgreSQL（关系型数据库存储核心数据）<br>部署与DevOpsDocker, Nginx, GitHub Actions（CI&#x2F;CD）<br>第三方服务SendGrid（邮件服务）, Day.js（日期处理）</p>]]></content>
      
      
      <categories>
          
          <category> projects </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 扁平设计 </tag>
            
            <tag> 主题 </tag>
            
            <tag> 现代UI </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Ongwu作品示例</title>
      <link href="/2025/01/12/3%20-%20%E5%89%AF%E6%9C%AC%20(3)/"/>
      <url>/2025/01/12/3%20-%20%E5%89%AF%E6%9C%AC%20(3)/</url>
      
        <content type="html"><![CDATA[<p>📋 项目概述<br>智能待办事项管理系统是一个现代化的Web应用程序，旨在帮助用户高效地规划、跟踪和管理他们的日常任务与长期目标。它不仅仅是一个简单的清单工具，还集成了智能提醒、任务分类、数据分析等功能，让任务管理变得轻松而直观。</p><p>项目类型：个人全栈项目 &#x2F; 团队课程设计 &#x2F; 商业产品（请根据实际情况修改）</p><p>我的角色：全栈开发者 &#x2F; 前端负责人 &#x2F; 项目经理（请根据实际情况修改）</p><p>开发周期：2023年10月 - 2024年1月（共3个月）</p><p>项目状态：✅ 已完成 &#x2F; 🚧 持续迭代中</p><p>✨ 核心功能与特色<br>本项目具有以下主要功能和亮点：</p><p>智能任务创建与管理</p><p>支持富文本编辑的任务描述，支持添加标签和优先级。</p><p>灵活的拖拽排序，轻松调整任务计划。</p><p>智能提醒与通知</p><p>基于时间的邮件和浏览器通知，确保重要事务不被遗漏。</p><p>支持“稍后提醒”功能。</p><p>数据可视化看板</p><p>通过直观的图表（如折线图、饼图）展示任务完成情况、 productivity 趋势。</p><p>帮助用户复盘自己的工作效率。</p><p>多平台同步</p><p>基于 RESTful API 构建，支持 Web、移动端（未来规划）数据实时同步。</p><p>技术亮点</p><p>前端采用组件化开发，保障了良好的用户体验和可维护性。</p><p>后端架构清晰，接口设计规范，易于扩展。</p><p>🛠️ 技术栈<br>本项目涉及的技术和工具如下：</p><p>领域技术选型<br>前端React 18, TypeScript, Ant Design, Redux Toolkit, ECharts, Vite<br>后端Node.js, Express.js, JWT, PostgreSQL<br>数据库PostgreSQL（关系型数据库存储核心数据）<br>部署与DevOpsDocker, Nginx, GitHub Actions（CI&#x2F;CD）<br>第三方服务SendGrid（邮件服务）, Day.js（日期处理）</p>]]></content>
      
      
      <categories>
          
          <category> projects </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 扁平设计 </tag>
            
            <tag> 主题 </tag>
            
            <tag> 现代UI </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Ongwu作品示例</title>
      <link href="/2025/01/12/3%20-%20%E5%89%AF%E6%9C%AC%20(30)/"/>
      <url>/2025/01/12/3%20-%20%E5%89%AF%E6%9C%AC%20(30)/</url>
      
        <content type="html"><![CDATA[<p>📋 项目概述<br>智能待办事项管理系统是一个现代化的Web应用程序，旨在帮助用户高效地规划、跟踪和管理他们的日常任务与长期目标。它不仅仅是一个简单的清单工具，还集成了智能提醒、任务分类、数据分析等功能，让任务管理变得轻松而直观。</p><p>项目类型：个人全栈项目 &#x2F; 团队课程设计 &#x2F; 商业产品（请根据实际情况修改）</p><p>我的角色：全栈开发者 &#x2F; 前端负责人 &#x2F; 项目经理（请根据实际情况修改）</p><p>开发周期：2023年10月 - 2024年1月（共3个月）</p><p>项目状态：✅ 已完成 &#x2F; 🚧 持续迭代中</p><p>✨ 核心功能与特色<br>本项目具有以下主要功能和亮点：</p><p>智能任务创建与管理</p><p>支持富文本编辑的任务描述，支持添加标签和优先级。</p><p>灵活的拖拽排序，轻松调整任务计划。</p><p>智能提醒与通知</p><p>基于时间的邮件和浏览器通知，确保重要事务不被遗漏。</p><p>支持“稍后提醒”功能。</p><p>数据可视化看板</p><p>通过直观的图表（如折线图、饼图）展示任务完成情况、 productivity 趋势。</p><p>帮助用户复盘自己的工作效率。</p><p>多平台同步</p><p>基于 RESTful API 构建，支持 Web、移动端（未来规划）数据实时同步。</p><p>技术亮点</p><p>前端采用组件化开发，保障了良好的用户体验和可维护性。</p><p>后端架构清晰，接口设计规范，易于扩展。</p><p>🛠️ 技术栈<br>本项目涉及的技术和工具如下：</p><p>领域技术选型<br>前端React 18, TypeScript, Ant Design, Redux Toolkit, ECharts, Vite<br>后端Node.js, Express.js, JWT, PostgreSQL<br>数据库PostgreSQL（关系型数据库存储核心数据）<br>部署与DevOpsDocker, Nginx, GitHub Actions（CI&#x2F;CD）<br>第三方服务SendGrid（邮件服务）, Day.js（日期处理）</p>]]></content>
      
      
      <categories>
          
          <category> projects </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 扁平设计 </tag>
            
            <tag> 主题 </tag>
            
            <tag> 现代UI </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Ongwu作品示例</title>
      <link href="/2025/01/12/3%20-%20%E5%89%AF%E6%9C%AC%20(31)/"/>
      <url>/2025/01/12/3%20-%20%E5%89%AF%E6%9C%AC%20(31)/</url>
      
        <content type="html"><![CDATA[<p>📋 项目概述<br>智能待办事项管理系统是一个现代化的Web应用程序，旨在帮助用户高效地规划、跟踪和管理他们的日常任务与长期目标。它不仅仅是一个简单的清单工具，还集成了智能提醒、任务分类、数据分析等功能，让任务管理变得轻松而直观。</p><p>项目类型：个人全栈项目 &#x2F; 团队课程设计 &#x2F; 商业产品（请根据实际情况修改）</p><p>我的角色：全栈开发者 &#x2F; 前端负责人 &#x2F; 项目经理（请根据实际情况修改）</p><p>开发周期：2023年10月 - 2024年1月（共3个月）</p><p>项目状态：✅ 已完成 &#x2F; 🚧 持续迭代中</p><p>✨ 核心功能与特色<br>本项目具有以下主要功能和亮点：</p><p>智能任务创建与管理</p><p>支持富文本编辑的任务描述，支持添加标签和优先级。</p><p>灵活的拖拽排序，轻松调整任务计划。</p><p>智能提醒与通知</p><p>基于时间的邮件和浏览器通知，确保重要事务不被遗漏。</p><p>支持“稍后提醒”功能。</p><p>数据可视化看板</p><p>通过直观的图表（如折线图、饼图）展示任务完成情况、 productivity 趋势。</p><p>帮助用户复盘自己的工作效率。</p><p>多平台同步</p><p>基于 RESTful API 构建，支持 Web、移动端（未来规划）数据实时同步。</p><p>技术亮点</p><p>前端采用组件化开发，保障了良好的用户体验和可维护性。</p><p>后端架构清晰，接口设计规范，易于扩展。</p><p>🛠️ 技术栈<br>本项目涉及的技术和工具如下：</p><p>领域技术选型<br>前端React 18, TypeScript, Ant Design, Redux Toolkit, ECharts, Vite<br>后端Node.js, Express.js, JWT, PostgreSQL<br>数据库PostgreSQL（关系型数据库存储核心数据）<br>部署与DevOpsDocker, Nginx, GitHub Actions（CI&#x2F;CD）<br>第三方服务SendGrid（邮件服务）, Day.js（日期处理）</p>]]></content>
      
      
      <categories>
          
          <category> projects </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 扁平设计 </tag>
            
            <tag> 主题 </tag>
            
            <tag> 现代UI </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Ongwu作品示例</title>
      <link href="/2025/01/12/3%20-%20%E5%89%AF%E6%9C%AC%20(4)/"/>
      <url>/2025/01/12/3%20-%20%E5%89%AF%E6%9C%AC%20(4)/</url>
      
        <content type="html"><![CDATA[<p>📋 项目概述<br>智能待办事项管理系统是一个现代化的Web应用程序，旨在帮助用户高效地规划、跟踪和管理他们的日常任务与长期目标。它不仅仅是一个简单的清单工具，还集成了智能提醒、任务分类、数据分析等功能，让任务管理变得轻松而直观。</p><p>项目类型：个人全栈项目 &#x2F; 团队课程设计 &#x2F; 商业产品（请根据实际情况修改）</p><p>我的角色：全栈开发者 &#x2F; 前端负责人 &#x2F; 项目经理（请根据实际情况修改）</p><p>开发周期：2023年10月 - 2024年1月（共3个月）</p><p>项目状态：✅ 已完成 &#x2F; 🚧 持续迭代中</p><p>✨ 核心功能与特色<br>本项目具有以下主要功能和亮点：</p><p>智能任务创建与管理</p><p>支持富文本编辑的任务描述，支持添加标签和优先级。</p><p>灵活的拖拽排序，轻松调整任务计划。</p><p>智能提醒与通知</p><p>基于时间的邮件和浏览器通知，确保重要事务不被遗漏。</p><p>支持“稍后提醒”功能。</p><p>数据可视化看板</p><p>通过直观的图表（如折线图、饼图）展示任务完成情况、 productivity 趋势。</p><p>帮助用户复盘自己的工作效率。</p><p>多平台同步</p><p>基于 RESTful API 构建，支持 Web、移动端（未来规划）数据实时同步。</p><p>技术亮点</p><p>前端采用组件化开发，保障了良好的用户体验和可维护性。</p><p>后端架构清晰，接口设计规范，易于扩展。</p><p>🛠️ 技术栈<br>本项目涉及的技术和工具如下：</p><p>领域技术选型<br>前端React 18, TypeScript, Ant Design, Redux Toolkit, ECharts, Vite<br>后端Node.js, Express.js, JWT, PostgreSQL<br>数据库PostgreSQL（关系型数据库存储核心数据）<br>部署与DevOpsDocker, Nginx, GitHub Actions（CI&#x2F;CD）<br>第三方服务SendGrid（邮件服务）, Day.js（日期处理）</p>]]></content>
      
      
      <categories>
          
          <category> projects </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 扁平设计 </tag>
            
            <tag> 主题 </tag>
            
            <tag> 现代UI </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Ongwu作品示例</title>
      <link href="/2025/01/12/3%20-%20%E5%89%AF%E6%9C%AC%20(5)/"/>
      <url>/2025/01/12/3%20-%20%E5%89%AF%E6%9C%AC%20(5)/</url>
      
        <content type="html"><![CDATA[<p>📋 项目概述<br>智能待办事项管理系统是一个现代化的Web应用程序，旨在帮助用户高效地规划、跟踪和管理他们的日常任务与长期目标。它不仅仅是一个简单的清单工具，还集成了智能提醒、任务分类、数据分析等功能，让任务管理变得轻松而直观。</p><p>项目类型：个人全栈项目 &#x2F; 团队课程设计 &#x2F; 商业产品（请根据实际情况修改）</p><p>我的角色：全栈开发者 &#x2F; 前端负责人 &#x2F; 项目经理（请根据实际情况修改）</p><p>开发周期：2023年10月 - 2024年1月（共3个月）</p><p>项目状态：✅ 已完成 &#x2F; 🚧 持续迭代中</p><p>✨ 核心功能与特色<br>本项目具有以下主要功能和亮点：</p><p>智能任务创建与管理</p><p>支持富文本编辑的任务描述，支持添加标签和优先级。</p><p>灵活的拖拽排序，轻松调整任务计划。</p><p>智能提醒与通知</p><p>基于时间的邮件和浏览器通知，确保重要事务不被遗漏。</p><p>支持“稍后提醒”功能。</p><p>数据可视化看板</p><p>通过直观的图表（如折线图、饼图）展示任务完成情况、 productivity 趋势。</p><p>帮助用户复盘自己的工作效率。</p><p>多平台同步</p><p>基于 RESTful API 构建，支持 Web、移动端（未来规划）数据实时同步。</p><p>技术亮点</p><p>前端采用组件化开发，保障了良好的用户体验和可维护性。</p><p>后端架构清晰，接口设计规范，易于扩展。</p><p>🛠️ 技术栈<br>本项目涉及的技术和工具如下：</p><p>领域技术选型<br>前端React 18, TypeScript, Ant Design, Redux Toolkit, ECharts, Vite<br>后端Node.js, Express.js, JWT, PostgreSQL<br>数据库PostgreSQL（关系型数据库存储核心数据）<br>部署与DevOpsDocker, Nginx, GitHub Actions（CI&#x2F;CD）<br>第三方服务SendGrid（邮件服务）, Day.js（日期处理）</p>]]></content>
      
      
      <categories>
          
          <category> projects </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 扁平设计 </tag>
            
            <tag> 主题 </tag>
            
            <tag> 现代UI </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Ongwu作品示例</title>
      <link href="/2025/01/12/3%20-%20%E5%89%AF%E6%9C%AC%20(6)/"/>
      <url>/2025/01/12/3%20-%20%E5%89%AF%E6%9C%AC%20(6)/</url>
      
        <content type="html"><![CDATA[<p>📋 项目概述<br>智能待办事项管理系统是一个现代化的Web应用程序，旨在帮助用户高效地规划、跟踪和管理他们的日常任务与长期目标。它不仅仅是一个简单的清单工具，还集成了智能提醒、任务分类、数据分析等功能，让任务管理变得轻松而直观。</p><p>项目类型：个人全栈项目 &#x2F; 团队课程设计 &#x2F; 商业产品（请根据实际情况修改）</p><p>我的角色：全栈开发者 &#x2F; 前端负责人 &#x2F; 项目经理（请根据实际情况修改）</p><p>开发周期：2023年10月 - 2024年1月（共3个月）</p><p>项目状态：✅ 已完成 &#x2F; 🚧 持续迭代中</p><p>✨ 核心功能与特色<br>本项目具有以下主要功能和亮点：</p><p>智能任务创建与管理</p><p>支持富文本编辑的任务描述，支持添加标签和优先级。</p><p>灵活的拖拽排序，轻松调整任务计划。</p><p>智能提醒与通知</p><p>基于时间的邮件和浏览器通知，确保重要事务不被遗漏。</p><p>支持“稍后提醒”功能。</p><p>数据可视化看板</p><p>通过直观的图表（如折线图、饼图）展示任务完成情况、 productivity 趋势。</p><p>帮助用户复盘自己的工作效率。</p><p>多平台同步</p><p>基于 RESTful API 构建，支持 Web、移动端（未来规划）数据实时同步。</p><p>技术亮点</p><p>前端采用组件化开发，保障了良好的用户体验和可维护性。</p><p>后端架构清晰，接口设计规范，易于扩展。</p><p>🛠️ 技术栈<br>本项目涉及的技术和工具如下：</p><p>领域技术选型<br>前端React 18, TypeScript, Ant Design, Redux Toolkit, ECharts, Vite<br>后端Node.js, Express.js, JWT, PostgreSQL<br>数据库PostgreSQL（关系型数据库存储核心数据）<br>部署与DevOpsDocker, Nginx, GitHub Actions（CI&#x2F;CD）<br>第三方服务SendGrid（邮件服务）, Day.js（日期处理）</p>]]></content>
      
      
      <categories>
          
          <category> projects </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 扁平设计 </tag>
            
            <tag> 主题 </tag>
            
            <tag> 现代UI </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Ongwu作品示例</title>
      <link href="/2025/01/12/3%20-%20%E5%89%AF%E6%9C%AC%20(7)/"/>
      <url>/2025/01/12/3%20-%20%E5%89%AF%E6%9C%AC%20(7)/</url>
      
        <content type="html"><![CDATA[<p>📋 项目概述<br>智能待办事项管理系统是一个现代化的Web应用程序，旨在帮助用户高效地规划、跟踪和管理他们的日常任务与长期目标。它不仅仅是一个简单的清单工具，还集成了智能提醒、任务分类、数据分析等功能，让任务管理变得轻松而直观。</p><p>项目类型：个人全栈项目 &#x2F; 团队课程设计 &#x2F; 商业产品（请根据实际情况修改）</p><p>我的角色：全栈开发者 &#x2F; 前端负责人 &#x2F; 项目经理（请根据实际情况修改）</p><p>开发周期：2023年10月 - 2024年1月（共3个月）</p><p>项目状态：✅ 已完成 &#x2F; 🚧 持续迭代中</p><p>✨ 核心功能与特色<br>本项目具有以下主要功能和亮点：</p><p>智能任务创建与管理</p><p>支持富文本编辑的任务描述，支持添加标签和优先级。</p><p>灵活的拖拽排序，轻松调整任务计划。</p><p>智能提醒与通知</p><p>基于时间的邮件和浏览器通知，确保重要事务不被遗漏。</p><p>支持“稍后提醒”功能。</p><p>数据可视化看板</p><p>通过直观的图表（如折线图、饼图）展示任务完成情况、 productivity 趋势。</p><p>帮助用户复盘自己的工作效率。</p><p>多平台同步</p><p>基于 RESTful API 构建，支持 Web、移动端（未来规划）数据实时同步。</p><p>技术亮点</p><p>前端采用组件化开发，保障了良好的用户体验和可维护性。</p><p>后端架构清晰，接口设计规范，易于扩展。</p><p>🛠️ 技术栈<br>本项目涉及的技术和工具如下：</p><p>领域技术选型<br>前端React 18, TypeScript, Ant Design, Redux Toolkit, ECharts, Vite<br>后端Node.js, Express.js, JWT, PostgreSQL<br>数据库PostgreSQL（关系型数据库存储核心数据）<br>部署与DevOpsDocker, Nginx, GitHub Actions（CI&#x2F;CD）<br>第三方服务SendGrid（邮件服务）, Day.js（日期处理）</p>]]></content>
      
      
      <categories>
          
          <category> projects </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 扁平设计 </tag>
            
            <tag> 主题 </tag>
            
            <tag> 现代UI </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Ongwu作品示例</title>
      <link href="/2025/01/12/3%20-%20%E5%89%AF%E6%9C%AC%20(8)/"/>
      <url>/2025/01/12/3%20-%20%E5%89%AF%E6%9C%AC%20(8)/</url>
      
        <content type="html"><![CDATA[<p>📋 项目概述<br>智能待办事项管理系统是一个现代化的Web应用程序，旨在帮助用户高效地规划、跟踪和管理他们的日常任务与长期目标。它不仅仅是一个简单的清单工具，还集成了智能提醒、任务分类、数据分析等功能，让任务管理变得轻松而直观。</p><p>项目类型：个人全栈项目 &#x2F; 团队课程设计 &#x2F; 商业产品（请根据实际情况修改）</p><p>我的角色：全栈开发者 &#x2F; 前端负责人 &#x2F; 项目经理（请根据实际情况修改）</p><p>开发周期：2023年10月 - 2024年1月（共3个月）</p><p>项目状态：✅ 已完成 &#x2F; 🚧 持续迭代中</p><p>✨ 核心功能与特色<br>本项目具有以下主要功能和亮点：</p><p>智能任务创建与管理</p><p>支持富文本编辑的任务描述，支持添加标签和优先级。</p><p>灵活的拖拽排序，轻松调整任务计划。</p><p>智能提醒与通知</p><p>基于时间的邮件和浏览器通知，确保重要事务不被遗漏。</p><p>支持“稍后提醒”功能。</p><p>数据可视化看板</p><p>通过直观的图表（如折线图、饼图）展示任务完成情况、 productivity 趋势。</p><p>帮助用户复盘自己的工作效率。</p><p>多平台同步</p><p>基于 RESTful API 构建，支持 Web、移动端（未来规划）数据实时同步。</p><p>技术亮点</p><p>前端采用组件化开发，保障了良好的用户体验和可维护性。</p><p>后端架构清晰，接口设计规范，易于扩展。</p><p>🛠️ 技术栈<br>本项目涉及的技术和工具如下：</p><p>领域技术选型<br>前端React 18, TypeScript, Ant Design, Redux Toolkit, ECharts, Vite<br>后端Node.js, Express.js, JWT, PostgreSQL<br>数据库PostgreSQL（关系型数据库存储核心数据）<br>部署与DevOpsDocker, Nginx, GitHub Actions（CI&#x2F;CD）<br>第三方服务SendGrid（邮件服务）, Day.js（日期处理）</p>]]></content>
      
      
      <categories>
          
          <category> projects </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 扁平设计 </tag>
            
            <tag> 主题 </tag>
            
            <tag> 现代UI </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Ongwu作品示例</title>
      <link href="/2025/01/12/3%20-%20%E5%89%AF%E6%9C%AC%20(9)/"/>
      <url>/2025/01/12/3%20-%20%E5%89%AF%E6%9C%AC%20(9)/</url>
      
        <content type="html"><![CDATA[<p>📋 项目概述<br>智能待办事项管理系统是一个现代化的Web应用程序，旨在帮助用户高效地规划、跟踪和管理他们的日常任务与长期目标。它不仅仅是一个简单的清单工具，还集成了智能提醒、任务分类、数据分析等功能，让任务管理变得轻松而直观。</p><p>项目类型：个人全栈项目 &#x2F; 团队课程设计 &#x2F; 商业产品（请根据实际情况修改）</p><p>我的角色：全栈开发者 &#x2F; 前端负责人 &#x2F; 项目经理（请根据实际情况修改）</p><p>开发周期：2023年10月 - 2024年1月（共3个月）</p><p>项目状态：✅ 已完成 &#x2F; 🚧 持续迭代中</p><p>✨ 核心功能与特色<br>本项目具有以下主要功能和亮点：</p><p>智能任务创建与管理</p><p>支持富文本编辑的任务描述，支持添加标签和优先级。</p><p>灵活的拖拽排序，轻松调整任务计划。</p><p>智能提醒与通知</p><p>基于时间的邮件和浏览器通知，确保重要事务不被遗漏。</p><p>支持“稍后提醒”功能。</p><p>数据可视化看板</p><p>通过直观的图表（如折线图、饼图）展示任务完成情况、 productivity 趋势。</p><p>帮助用户复盘自己的工作效率。</p><p>多平台同步</p><p>基于 RESTful API 构建，支持 Web、移动端（未来规划）数据实时同步。</p><p>技术亮点</p><p>前端采用组件化开发，保障了良好的用户体验和可维护性。</p><p>后端架构清晰，接口设计规范，易于扩展。</p><p>🛠️ 技术栈<br>本项目涉及的技术和工具如下：</p><p>领域技术选型<br>前端React 18, TypeScript, Ant Design, Redux Toolkit, ECharts, Vite<br>后端Node.js, Express.js, JWT, PostgreSQL<br>数据库PostgreSQL（关系型数据库存储核心数据）<br>部署与DevOpsDocker, Nginx, GitHub Actions（CI&#x2F;CD）<br>第三方服务SendGrid（邮件服务）, Day.js（日期处理）</p>]]></content>
      
      
      <categories>
          
          <category> projects </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 扁平设计 </tag>
            
            <tag> 主题 </tag>
            
            <tag> 现代UI </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Ongwu作品示例</title>
      <link href="/2025/01/12/3%20-%20%E5%89%AF%E6%9C%AC/"/>
      <url>/2025/01/12/3%20-%20%E5%89%AF%E6%9C%AC/</url>
      
        <content type="html"><![CDATA[<p>📋 项目概述<br>智能待办事项管理系统是一个现代化的Web应用程序，旨在帮助用户高效地规划、跟踪和管理他们的日常任务与长期目标。它不仅仅是一个简单的清单工具，还集成了智能提醒、任务分类、数据分析等功能，让任务管理变得轻松而直观。</p><p>项目类型：个人全栈项目 &#x2F; 团队课程设计 &#x2F; 商业产品（请根据实际情况修改）</p><p>我的角色：全栈开发者 &#x2F; 前端负责人 &#x2F; 项目经理（请根据实际情况修改）</p><p>开发周期：2023年10月 - 2024年1月（共3个月）</p><p>项目状态：✅ 已完成 &#x2F; 🚧 持续迭代中</p><p>✨ 核心功能与特色<br>本项目具有以下主要功能和亮点：</p><p>智能任务创建与管理</p><p>支持富文本编辑的任务描述，支持添加标签和优先级。</p><p>灵活的拖拽排序，轻松调整任务计划。</p><p>智能提醒与通知</p><p>基于时间的邮件和浏览器通知，确保重要事务不被遗漏。</p><p>支持“稍后提醒”功能。</p><p>数据可视化看板</p><p>通过直观的图表（如折线图、饼图）展示任务完成情况、 productivity 趋势。</p><p>帮助用户复盘自己的工作效率。</p><p>多平台同步</p><p>基于 RESTful API 构建，支持 Web、移动端（未来规划）数据实时同步。</p><p>技术亮点</p><p>前端采用组件化开发，保障了良好的用户体验和可维护性。</p><p>后端架构清晰，接口设计规范，易于扩展。</p><p>🛠️ 技术栈<br>本项目涉及的技术和工具如下：</p><p>领域技术选型<br>前端React 18, TypeScript, Ant Design, Redux Toolkit, ECharts, Vite<br>后端Node.js, Express.js, JWT, PostgreSQL<br>数据库PostgreSQL（关系型数据库存储核心数据）<br>部署与DevOpsDocker, Nginx, GitHub Actions（CI&#x2F;CD）<br>第三方服务SendGrid（邮件服务）, Day.js（日期处理）</p>]]></content>
      
      
      <categories>
          
          <category> projects </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 扁平设计 </tag>
            
            <tag> 主题 </tag>
            
            <tag> 现代UI </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Ongwu作品示例</title>
      <link href="/2025/01/12/3/"/>
      <url>/2025/01/12/3/</url>
      
        <content type="html"><![CDATA[<p>📋 项目概述<br>智能待办事项管理系统是一个现代化的Web应用程序，旨在帮助用户高效地规划、跟踪和管理他们的日常任务与长期目标。它不仅仅是一个简单的清单工具，还集成了智能提醒、任务分类、数据分析等功能，让任务管理变得轻松而直观。</p><p>项目类型：个人全栈项目 &#x2F; 团队课程设计 &#x2F; 商业产品（请根据实际情况修改）</p><p>我的角色：全栈开发者 &#x2F; 前端负责人 &#x2F; 项目经理（请根据实际情况修改）</p><p>开发周期：2023年10月 - 2024年1月（共3个月）</p><p>项目状态：✅ 已完成 &#x2F; 🚧 持续迭代中</p><p>✨ 核心功能与特色<br>本项目具有以下主要功能和亮点：</p><p>智能任务创建与管理</p><p>支持富文本编辑的任务描述，支持添加标签和优先级。</p><p>灵活的拖拽排序，轻松调整任务计划。</p><p>智能提醒与通知</p><p>基于时间的邮件和浏览器通知，确保重要事务不被遗漏。</p><p>支持“稍后提醒”功能。</p><p>数据可视化看板</p><p>通过直观的图表（如折线图、饼图）展示任务完成情况、 productivity 趋势。</p><p>帮助用户复盘自己的工作效率。</p><p>多平台同步</p><p>基于 RESTful API 构建，支持 Web、移动端（未来规划）数据实时同步。</p><p>技术亮点</p><p>前端采用组件化开发，保障了良好的用户体验和可维护性。</p><p>后端架构清晰，接口设计规范，易于扩展。</p><p>🛠️ 技术栈<br>本项目涉及的技术和工具如下：</p><p>领域技术选型<br>前端React 18, TypeScript, Ant Design, Redux Toolkit, ECharts, Vite<br>后端Node.js, Express.js, JWT, PostgreSQL<br>数据库PostgreSQL（关系型数据库存储核心数据）<br>部署与DevOpsDocker, Nginx, GitHub Actions（CI&#x2F;CD）<br>第三方服务SendGrid（邮件服务）, Day.js（日期处理）</p>]]></content>
      
      
      <categories>
          
          <category> projects </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 扁平设计 </tag>
            
            <tag> 主题 </tag>
            
            <tag> 现代UI </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Ongwu作品示例</title>
      <link href="/2025/01/12/4/"/>
      <url>/2025/01/12/4/</url>
      
        <content type="html"><![CDATA[<p>📋 项目概述<br>智能待办事项管理系统是一个现代化的Web应用程序，旨在帮助用户高效地规划、跟踪和管理他们的日常任务与长期目标。它不仅仅是一个简单的清单工具，还集成了智能提醒、任务分类、数据分析等功能，让任务管理变得轻松而直观。</p><p>项目类型：个人全栈项目 &#x2F; 团队课程设计 &#x2F; 商业产品（请根据实际情况修改）</p><p>我的角色：全栈开发者 &#x2F; 前端负责人 &#x2F; 项目经理（请根据实际情况修改）</p><p>开发周期：2023年10月 - 2024年1月（共3个月）</p><p>项目状态：✅ 已完成 &#x2F; 🚧 持续迭代中</p><p>✨ 核心功能与特色<br>本项目具有以下主要功能和亮点：</p><p>智能任务创建与管理</p><p>支持富文本编辑的任务描述，支持添加标签和优先级。</p><p>灵活的拖拽排序，轻松调整任务计划。</p><p>智能提醒与通知</p><p>基于时间的邮件和浏览器通知，确保重要事务不被遗漏。</p><p>支持“稍后提醒”功能。</p><p>数据可视化看板</p><p>通过直观的图表（如折线图、饼图）展示任务完成情况、 productivity 趋势。</p><p>帮助用户复盘自己的工作效率。</p><p>多平台同步</p><p>基于 RESTful API 构建，支持 Web、移动端（未来规划）数据实时同步。</p><p>技术亮点</p><p>前端采用组件化开发，保障了良好的用户体验和可维护性。</p><p>后端架构清晰，接口设计规范，易于扩展。</p><p>🛠️ 技术栈<br>本项目涉及的技术和工具如下：</p><p>领域技术选型<br>前端React 18, TypeScript, Ant Design, Redux Toolkit, ECharts, Vite<br>后端Node.js, Express.js, JWT, PostgreSQL<br>数据库PostgreSQL（关系型数据库存储核心数据）<br>部署与DevOpsDocker, Nginx, GitHub Actions（CI&#x2F;CD）<br>第三方服务SendGrid（邮件服务）, Day.js（日期处理）</p>]]></content>
      
      
      <categories>
          
          <category> projects </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 扁平设计 </tag>
            
            <tag> 主题 </tag>
            
            <tag> 现代UI </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>GotifyNotify</title>
      <link href="/2025/01/10/10%20-%20%E5%89%AF%E6%9C%AC%20(10)/"/>
      <url>/2025/01/10/10%20-%20%E5%89%AF%E6%9C%AC%20(10)/</url>
      
        <content type="html"><![CDATA[<h1 id="GotifyNotify-ongwu通知插件"><a href="#GotifyNotify-ongwu通知插件" class="headerlink" title="GotifyNotify - ongwu通知插件"></a>GotifyNotify - ongwu通知插件</h1><h2 id="插件概述"><a href="#插件概述" class="headerlink" title="插件概述"></a>插件概述</h2><p>GotifyNotify是一个专为ongwu博客开发的通知插件，通过集成Gotify服务，为博客管理员和用户提供实时的消息推送功能。无论是新评论、新文章还是系统通知，都能及时推送到指定设备。</p><h2 id="主要功能"><a href="#主要功能" class="headerlink" title="主要功能"></a>主要功能</h2><h3 id="通知类型"><a href="#通知类型" class="headerlink" title="通知类型"></a>通知类型</h3><ul><li><strong>评论通知</strong>：新评论发布时自动推送</li><li><strong>文章通知</strong>：新文章发布时通知订阅用户</li><li><strong>系统通知</strong>：重要系统事件实时推送</li><li><strong>自定义通知</strong>：支持自定义消息内容</li></ul><h3 id="推送方式"><a href="#推送方式" class="headerlink" title="推送方式"></a>推送方式</h3><ul><li><strong>Gotify服务</strong>：通过Gotify API推送消息</li><li><strong>多设备支持</strong>：支持Android、iOS、Web等平台</li><li><strong>实时推送</strong>：毫秒级消息传递</li><li><strong>离线存储</strong>：消息持久化存储</li></ul><h2 id="技术架构"><a href="#技术架构" class="headerlink" title="技术架构"></a>技术架构</h2><h3 id="系统架构图"><a href="#系统架构图" class="headerlink" title="系统架构图"></a>系统架构图</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ongwu博客 → GotifyNotify插件 → Gotify服务器 → 客户端设备</span><br><span class="line">     ↓              ↓              ↓           ↓</span><br><span class="line">   事件触发     消息处理      消息分发     消息接收</span><br></pre></td></tr></table></figure><h3 id="核心代码实现"><a href="#核心代码实现" class="headerlink" title="核心代码实现"></a>核心代码实现</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 通知处理类</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">GotifyNotify_Handler</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$gotifyUrl</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$appToken</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$url</span>, <span class="variable">$token</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;gotifyUrl = <span class="variable">$url</span>;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;appToken = <span class="variable">$token</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 发送通知</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">sendNotification</span>(<span class="params"><span class="variable">$title</span>, <span class="variable">$message</span>, <span class="variable">$priority</span> = <span class="number">0</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable">$data</span> = <span class="keyword">array</span>(</span><br><span class="line">            <span class="string">&#x27;title&#x27;</span> =&gt; <span class="variable">$title</span>,</span><br><span class="line">            <span class="string">&#x27;message&#x27;</span> =&gt; <span class="variable">$message</span>,</span><br><span class="line">            <span class="string">&#x27;priority&#x27;</span> =&gt; <span class="variable">$priority</span></span><br><span class="line">        );</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">postToGotify</span>(<span class="variable">$data</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 推送到Gotify</span></span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">postToGotify</span>(<span class="params"><span class="variable">$data</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable">$ch</span> = <span class="title function_ invoke__">curl_init</span>();</span><br><span class="line">        <span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$ch</span>, CURLOPT_URL, <span class="variable">$this</span>-&gt;gotifyUrl . <span class="string">&#x27;/message&#x27;</span>);</span><br><span class="line">        <span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$ch</span>, CURLOPT_POST, <span class="literal">true</span>);</span><br><span class="line">        <span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$ch</span>, CURLOPT_POSTFIELDS, <span class="title function_ invoke__">json_encode</span>(<span class="variable">$data</span>));</span><br><span class="line">        <span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$ch</span>, CURLOPT_HTTPHEADER, <span class="keyword">array</span>(</span><br><span class="line">            <span class="string">&#x27;X-Gotify-Key: &#x27;</span> . <span class="variable">$this</span>-&gt;appToken,</span><br><span class="line">            <span class="string">&#x27;Content-Type: application/json&#x27;</span></span><br><span class="line">        ));</span><br><span class="line">        </span><br><span class="line">        <span class="variable">$response</span> = <span class="title function_ invoke__">curl_exec</span>(<span class="variable">$ch</span>);</span><br><span class="line">        <span class="title function_ invoke__">curl_close</span>(<span class="variable">$ch</span>);</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$response</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="安装配置"><a href="#安装配置" class="headerlink" title="安装配置"></a>安装配置</h2><h3 id="1-安装Gotify服务器"><a href="#1-安装Gotify服务器" class="headerlink" title="1. 安装Gotify服务器"></a>1. 安装Gotify服务器</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Docker安装方式</span></span><br><span class="line">docker run -p 80:80 -p 443:443 \</span><br><span class="line">  -v /var/gotify:/app/data \</span><br><span class="line">  gotify/server</span><br></pre></td></tr></table></figure><h3 id="2-配置插件"><a href="#2-配置插件" class="headerlink" title="2. 配置插件"></a>2. 配置插件</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 插件配置</span></span><br><span class="line"><span class="keyword">return</span> <span class="keyword">array</span>(</span><br><span class="line">    <span class="string">&#x27;gotify_url&#x27;</span> =&gt; <span class="string">&#x27;https://your-gotify-server.com&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;app_token&#x27;</span> =&gt; <span class="string">&#x27;your-app-token&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;enable_comments&#x27;</span> =&gt; <span class="literal">true</span>,</span><br><span class="line">    <span class="string">&#x27;enable_posts&#x27;</span> =&gt; <span class="literal">true</span>,</span><br><span class="line">    <span class="string">&#x27;enable_system&#x27;</span> =&gt; <span class="literal">true</span>,</span><br><span class="line">    <span class="string">&#x27;notification_priority&#x27;</span> =&gt; <span class="number">0</span></span><br><span class="line">);</span><br></pre></td></tr></table></figure><h3 id="3-客户端配置"><a href="#3-客户端配置" class="headerlink" title="3. 客户端配置"></a>3. 客户端配置</h3><ul><li>下载Gotify客户端应用</li><li>配置服务器地址和认证信息</li><li>设置通知偏好</li></ul><h2 id="使用场景"><a href="#使用场景" class="headerlink" title="使用场景"></a>使用场景</h2><h3 id="博客管理"><a href="#博客管理" class="headerlink" title="博客管理"></a>博客管理</h3><ul><li>新评论实时提醒</li><li>系统状态监控</li><li>安全事件通知</li></ul><h3 id="用户服务"><a href="#用户服务" class="headerlink" title="用户服务"></a>用户服务</h3><ul><li>文章更新提醒</li><li>回复通知</li><li>重要公告推送</li></ul><h2 id="性能优化"><a href="#性能优化" class="headerlink" title="性能优化"></a>性能优化</h2><h3 id="推送优化"><a href="#推送优化" class="headerlink" title="推送优化"></a>推送优化</h3><ul><li>批量消息处理</li><li>智能重试机制</li><li>消息队列缓冲</li></ul><h3 id="资源管理"><a href="#资源管理" class="headerlink" title="资源管理"></a>资源管理</h3><ul><li>连接池复用</li><li>内存使用优化</li><li>数据库查询优化</li></ul><h2 id="安全考虑"><a href="#安全考虑" class="headerlink" title="安全考虑"></a>安全考虑</h2><h3 id="认证安全"><a href="#认证安全" class="headerlink" title="认证安全"></a>认证安全</h3><ul><li>Token加密存储</li><li>HTTPS通信加密</li><li>访问权限控制</li></ul><h3 id="数据保护"><a href="#数据保护" class="headerlink" title="数据保护"></a>数据保护</h3><ul><li>敏感信息过滤</li><li>日志记录审计</li><li>异常行为监控</li></ul><h2 id="扩展功能"><a href="#扩展功能" class="headerlink" title="扩展功能"></a>扩展功能</h2><h3 id="插件扩展"><a href="#插件扩展" class="headerlink" title="插件扩展"></a>插件扩展</h3><ul><li>支持自定义通知模板</li><li>支持多种推送服务</li><li>支持条件触发规则</li></ul><h3 id="集成能力"><a href="#集成能力" class="headerlink" title="集成能力"></a>集成能力</h3><ul><li>与现有通知系统集成</li><li>支持Webhook回调</li><li>支持第三方服务集成</li></ul><h2 id="故障排除"><a href="#故障排除" class="headerlink" title="故障排除"></a>故障排除</h2><h3 id="常见问题"><a href="#常见问题" class="headerlink" title="常见问题"></a>常见问题</h3><ol><li><strong>连接失败</strong>：检查网络和服务器状态</li><li><strong>认证错误</strong>：验证Token配置</li><li><strong>推送延迟</strong>：检查服务器负载</li></ol><h3 id="调试方法"><a href="#调试方法" class="headerlink" title="调试方法"></a>调试方法</h3><ul><li>启用详细日志</li><li>检查网络连接</li><li>验证API响应</li></ul><hr><p><em>GotifyNotify让ongwu博客通知更智能、更及时！</em></p>]]></content>
      
      
      <categories>
          
          <category> tech </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ongwu插件 </tag>
            
            <tag> 通知系统 </tag>
            
            <tag> Gotify </tag>
            
            <tag> 消息推送 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>GotifyNotify</title>
      <link href="/2025/01/10/10%20-%20%E5%89%AF%E6%9C%AC%20(11)/"/>
      <url>/2025/01/10/10%20-%20%E5%89%AF%E6%9C%AC%20(11)/</url>
      
        <content type="html"><![CDATA[<h1 id="GotifyNotify-ongwu通知插件"><a href="#GotifyNotify-ongwu通知插件" class="headerlink" title="GotifyNotify - ongwu通知插件"></a>GotifyNotify - ongwu通知插件</h1><h2 id="插件概述"><a href="#插件概述" class="headerlink" title="插件概述"></a>插件概述</h2><p>GotifyNotify是一个专为ongwu博客开发的通知插件，通过集成Gotify服务，为博客管理员和用户提供实时的消息推送功能。无论是新评论、新文章还是系统通知，都能及时推送到指定设备。</p><h2 id="主要功能"><a href="#主要功能" class="headerlink" title="主要功能"></a>主要功能</h2><h3 id="通知类型"><a href="#通知类型" class="headerlink" title="通知类型"></a>通知类型</h3><ul><li><strong>评论通知</strong>：新评论发布时自动推送</li><li><strong>文章通知</strong>：新文章发布时通知订阅用户</li><li><strong>系统通知</strong>：重要系统事件实时推送</li><li><strong>自定义通知</strong>：支持自定义消息内容</li></ul><h3 id="推送方式"><a href="#推送方式" class="headerlink" title="推送方式"></a>推送方式</h3><ul><li><strong>Gotify服务</strong>：通过Gotify API推送消息</li><li><strong>多设备支持</strong>：支持Android、iOS、Web等平台</li><li><strong>实时推送</strong>：毫秒级消息传递</li><li><strong>离线存储</strong>：消息持久化存储</li></ul><h2 id="技术架构"><a href="#技术架构" class="headerlink" title="技术架构"></a>技术架构</h2><h3 id="系统架构图"><a href="#系统架构图" class="headerlink" title="系统架构图"></a>系统架构图</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ongwu博客 → GotifyNotify插件 → Gotify服务器 → 客户端设备</span><br><span class="line">     ↓              ↓              ↓           ↓</span><br><span class="line">   事件触发     消息处理      消息分发     消息接收</span><br></pre></td></tr></table></figure><h3 id="核心代码实现"><a href="#核心代码实现" class="headerlink" title="核心代码实现"></a>核心代码实现</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 通知处理类</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">GotifyNotify_Handler</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$gotifyUrl</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$appToken</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$url</span>, <span class="variable">$token</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;gotifyUrl = <span class="variable">$url</span>;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;appToken = <span class="variable">$token</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 发送通知</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">sendNotification</span>(<span class="params"><span class="variable">$title</span>, <span class="variable">$message</span>, <span class="variable">$priority</span> = <span class="number">0</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable">$data</span> = <span class="keyword">array</span>(</span><br><span class="line">            <span class="string">&#x27;title&#x27;</span> =&gt; <span class="variable">$title</span>,</span><br><span class="line">            <span class="string">&#x27;message&#x27;</span> =&gt; <span class="variable">$message</span>,</span><br><span class="line">            <span class="string">&#x27;priority&#x27;</span> =&gt; <span class="variable">$priority</span></span><br><span class="line">        );</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">postToGotify</span>(<span class="variable">$data</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 推送到Gotify</span></span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">postToGotify</span>(<span class="params"><span class="variable">$data</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable">$ch</span> = <span class="title function_ invoke__">curl_init</span>();</span><br><span class="line">        <span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$ch</span>, CURLOPT_URL, <span class="variable">$this</span>-&gt;gotifyUrl . <span class="string">&#x27;/message&#x27;</span>);</span><br><span class="line">        <span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$ch</span>, CURLOPT_POST, <span class="literal">true</span>);</span><br><span class="line">        <span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$ch</span>, CURLOPT_POSTFIELDS, <span class="title function_ invoke__">json_encode</span>(<span class="variable">$data</span>));</span><br><span class="line">        <span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$ch</span>, CURLOPT_HTTPHEADER, <span class="keyword">array</span>(</span><br><span class="line">            <span class="string">&#x27;X-Gotify-Key: &#x27;</span> . <span class="variable">$this</span>-&gt;appToken,</span><br><span class="line">            <span class="string">&#x27;Content-Type: application/json&#x27;</span></span><br><span class="line">        ));</span><br><span class="line">        </span><br><span class="line">        <span class="variable">$response</span> = <span class="title function_ invoke__">curl_exec</span>(<span class="variable">$ch</span>);</span><br><span class="line">        <span class="title function_ invoke__">curl_close</span>(<span class="variable">$ch</span>);</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$response</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="安装配置"><a href="#安装配置" class="headerlink" title="安装配置"></a>安装配置</h2><h3 id="1-安装Gotify服务器"><a href="#1-安装Gotify服务器" class="headerlink" title="1. 安装Gotify服务器"></a>1. 安装Gotify服务器</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Docker安装方式</span></span><br><span class="line">docker run -p 80:80 -p 443:443 \</span><br><span class="line">  -v /var/gotify:/app/data \</span><br><span class="line">  gotify/server</span><br></pre></td></tr></table></figure><h3 id="2-配置插件"><a href="#2-配置插件" class="headerlink" title="2. 配置插件"></a>2. 配置插件</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 插件配置</span></span><br><span class="line"><span class="keyword">return</span> <span class="keyword">array</span>(</span><br><span class="line">    <span class="string">&#x27;gotify_url&#x27;</span> =&gt; <span class="string">&#x27;https://your-gotify-server.com&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;app_token&#x27;</span> =&gt; <span class="string">&#x27;your-app-token&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;enable_comments&#x27;</span> =&gt; <span class="literal">true</span>,</span><br><span class="line">    <span class="string">&#x27;enable_posts&#x27;</span> =&gt; <span class="literal">true</span>,</span><br><span class="line">    <span class="string">&#x27;enable_system&#x27;</span> =&gt; <span class="literal">true</span>,</span><br><span class="line">    <span class="string">&#x27;notification_priority&#x27;</span> =&gt; <span class="number">0</span></span><br><span class="line">);</span><br></pre></td></tr></table></figure><h3 id="3-客户端配置"><a href="#3-客户端配置" class="headerlink" title="3. 客户端配置"></a>3. 客户端配置</h3><ul><li>下载Gotify客户端应用</li><li>配置服务器地址和认证信息</li><li>设置通知偏好</li></ul><h2 id="使用场景"><a href="#使用场景" class="headerlink" title="使用场景"></a>使用场景</h2><h3 id="博客管理"><a href="#博客管理" class="headerlink" title="博客管理"></a>博客管理</h3><ul><li>新评论实时提醒</li><li>系统状态监控</li><li>安全事件通知</li></ul><h3 id="用户服务"><a href="#用户服务" class="headerlink" title="用户服务"></a>用户服务</h3><ul><li>文章更新提醒</li><li>回复通知</li><li>重要公告推送</li></ul><h2 id="性能优化"><a href="#性能优化" class="headerlink" title="性能优化"></a>性能优化</h2><h3 id="推送优化"><a href="#推送优化" class="headerlink" title="推送优化"></a>推送优化</h3><ul><li>批量消息处理</li><li>智能重试机制</li><li>消息队列缓冲</li></ul><h3 id="资源管理"><a href="#资源管理" class="headerlink" title="资源管理"></a>资源管理</h3><ul><li>连接池复用</li><li>内存使用优化</li><li>数据库查询优化</li></ul><h2 id="安全考虑"><a href="#安全考虑" class="headerlink" title="安全考虑"></a>安全考虑</h2><h3 id="认证安全"><a href="#认证安全" class="headerlink" title="认证安全"></a>认证安全</h3><ul><li>Token加密存储</li><li>HTTPS通信加密</li><li>访问权限控制</li></ul><h3 id="数据保护"><a href="#数据保护" class="headerlink" title="数据保护"></a>数据保护</h3><ul><li>敏感信息过滤</li><li>日志记录审计</li><li>异常行为监控</li></ul><h2 id="扩展功能"><a href="#扩展功能" class="headerlink" title="扩展功能"></a>扩展功能</h2><h3 id="插件扩展"><a href="#插件扩展" class="headerlink" title="插件扩展"></a>插件扩展</h3><ul><li>支持自定义通知模板</li><li>支持多种推送服务</li><li>支持条件触发规则</li></ul><h3 id="集成能力"><a href="#集成能力" class="headerlink" title="集成能力"></a>集成能力</h3><ul><li>与现有通知系统集成</li><li>支持Webhook回调</li><li>支持第三方服务集成</li></ul><h2 id="故障排除"><a href="#故障排除" class="headerlink" title="故障排除"></a>故障排除</h2><h3 id="常见问题"><a href="#常见问题" class="headerlink" title="常见问题"></a>常见问题</h3><ol><li><strong>连接失败</strong>：检查网络和服务器状态</li><li><strong>认证错误</strong>：验证Token配置</li><li><strong>推送延迟</strong>：检查服务器负载</li></ol><h3 id="调试方法"><a href="#调试方法" class="headerlink" title="调试方法"></a>调试方法</h3><ul><li>启用详细日志</li><li>检查网络连接</li><li>验证API响应</li></ul><hr><p><em>GotifyNotify让ongwu博客通知更智能、更及时！</em></p>]]></content>
      
      
      <categories>
          
          <category> tech </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ongwu插件 </tag>
            
            <tag> 通知系统 </tag>
            
            <tag> Gotify </tag>
            
            <tag> 消息推送 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>GotifyNotify</title>
      <link href="/2025/01/10/10%20-%20%E5%89%AF%E6%9C%AC%20(12)/"/>
      <url>/2025/01/10/10%20-%20%E5%89%AF%E6%9C%AC%20(12)/</url>
      
        <content type="html"><![CDATA[<h1 id="GotifyNotify-ongwu通知插件"><a href="#GotifyNotify-ongwu通知插件" class="headerlink" title="GotifyNotify - ongwu通知插件"></a>GotifyNotify - ongwu通知插件</h1><h2 id="插件概述"><a href="#插件概述" class="headerlink" title="插件概述"></a>插件概述</h2><p>GotifyNotify是一个专为ongwu博客开发的通知插件，通过集成Gotify服务，为博客管理员和用户提供实时的消息推送功能。无论是新评论、新文章还是系统通知，都能及时推送到指定设备。</p><h2 id="主要功能"><a href="#主要功能" class="headerlink" title="主要功能"></a>主要功能</h2><h3 id="通知类型"><a href="#通知类型" class="headerlink" title="通知类型"></a>通知类型</h3><ul><li><strong>评论通知</strong>：新评论发布时自动推送</li><li><strong>文章通知</strong>：新文章发布时通知订阅用户</li><li><strong>系统通知</strong>：重要系统事件实时推送</li><li><strong>自定义通知</strong>：支持自定义消息内容</li></ul><h3 id="推送方式"><a href="#推送方式" class="headerlink" title="推送方式"></a>推送方式</h3><ul><li><strong>Gotify服务</strong>：通过Gotify API推送消息</li><li><strong>多设备支持</strong>：支持Android、iOS、Web等平台</li><li><strong>实时推送</strong>：毫秒级消息传递</li><li><strong>离线存储</strong>：消息持久化存储</li></ul><h2 id="技术架构"><a href="#技术架构" class="headerlink" title="技术架构"></a>技术架构</h2><h3 id="系统架构图"><a href="#系统架构图" class="headerlink" title="系统架构图"></a>系统架构图</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ongwu博客 → GotifyNotify插件 → Gotify服务器 → 客户端设备</span><br><span class="line">     ↓              ↓              ↓           ↓</span><br><span class="line">   事件触发     消息处理      消息分发     消息接收</span><br></pre></td></tr></table></figure><h3 id="核心代码实现"><a href="#核心代码实现" class="headerlink" title="核心代码实现"></a>核心代码实现</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 通知处理类</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">GotifyNotify_Handler</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$gotifyUrl</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$appToken</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$url</span>, <span class="variable">$token</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;gotifyUrl = <span class="variable">$url</span>;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;appToken = <span class="variable">$token</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 发送通知</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">sendNotification</span>(<span class="params"><span class="variable">$title</span>, <span class="variable">$message</span>, <span class="variable">$priority</span> = <span class="number">0</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable">$data</span> = <span class="keyword">array</span>(</span><br><span class="line">            <span class="string">&#x27;title&#x27;</span> =&gt; <span class="variable">$title</span>,</span><br><span class="line">            <span class="string">&#x27;message&#x27;</span> =&gt; <span class="variable">$message</span>,</span><br><span class="line">            <span class="string">&#x27;priority&#x27;</span> =&gt; <span class="variable">$priority</span></span><br><span class="line">        );</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">postToGotify</span>(<span class="variable">$data</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 推送到Gotify</span></span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">postToGotify</span>(<span class="params"><span class="variable">$data</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable">$ch</span> = <span class="title function_ invoke__">curl_init</span>();</span><br><span class="line">        <span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$ch</span>, CURLOPT_URL, <span class="variable">$this</span>-&gt;gotifyUrl . <span class="string">&#x27;/message&#x27;</span>);</span><br><span class="line">        <span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$ch</span>, CURLOPT_POST, <span class="literal">true</span>);</span><br><span class="line">        <span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$ch</span>, CURLOPT_POSTFIELDS, <span class="title function_ invoke__">json_encode</span>(<span class="variable">$data</span>));</span><br><span class="line">        <span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$ch</span>, CURLOPT_HTTPHEADER, <span class="keyword">array</span>(</span><br><span class="line">            <span class="string">&#x27;X-Gotify-Key: &#x27;</span> . <span class="variable">$this</span>-&gt;appToken,</span><br><span class="line">            <span class="string">&#x27;Content-Type: application/json&#x27;</span></span><br><span class="line">        ));</span><br><span class="line">        </span><br><span class="line">        <span class="variable">$response</span> = <span class="title function_ invoke__">curl_exec</span>(<span class="variable">$ch</span>);</span><br><span class="line">        <span class="title function_ invoke__">curl_close</span>(<span class="variable">$ch</span>);</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$response</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="安装配置"><a href="#安装配置" class="headerlink" title="安装配置"></a>安装配置</h2><h3 id="1-安装Gotify服务器"><a href="#1-安装Gotify服务器" class="headerlink" title="1. 安装Gotify服务器"></a>1. 安装Gotify服务器</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Docker安装方式</span></span><br><span class="line">docker run -p 80:80 -p 443:443 \</span><br><span class="line">  -v /var/gotify:/app/data \</span><br><span class="line">  gotify/server</span><br></pre></td></tr></table></figure><h3 id="2-配置插件"><a href="#2-配置插件" class="headerlink" title="2. 配置插件"></a>2. 配置插件</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 插件配置</span></span><br><span class="line"><span class="keyword">return</span> <span class="keyword">array</span>(</span><br><span class="line">    <span class="string">&#x27;gotify_url&#x27;</span> =&gt; <span class="string">&#x27;https://your-gotify-server.com&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;app_token&#x27;</span> =&gt; <span class="string">&#x27;your-app-token&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;enable_comments&#x27;</span> =&gt; <span class="literal">true</span>,</span><br><span class="line">    <span class="string">&#x27;enable_posts&#x27;</span> =&gt; <span class="literal">true</span>,</span><br><span class="line">    <span class="string">&#x27;enable_system&#x27;</span> =&gt; <span class="literal">true</span>,</span><br><span class="line">    <span class="string">&#x27;notification_priority&#x27;</span> =&gt; <span class="number">0</span></span><br><span class="line">);</span><br></pre></td></tr></table></figure><h3 id="3-客户端配置"><a href="#3-客户端配置" class="headerlink" title="3. 客户端配置"></a>3. 客户端配置</h3><ul><li>下载Gotify客户端应用</li><li>配置服务器地址和认证信息</li><li>设置通知偏好</li></ul><h2 id="使用场景"><a href="#使用场景" class="headerlink" title="使用场景"></a>使用场景</h2><h3 id="博客管理"><a href="#博客管理" class="headerlink" title="博客管理"></a>博客管理</h3><ul><li>新评论实时提醒</li><li>系统状态监控</li><li>安全事件通知</li></ul><h3 id="用户服务"><a href="#用户服务" class="headerlink" title="用户服务"></a>用户服务</h3><ul><li>文章更新提醒</li><li>回复通知</li><li>重要公告推送</li></ul><h2 id="性能优化"><a href="#性能优化" class="headerlink" title="性能优化"></a>性能优化</h2><h3 id="推送优化"><a href="#推送优化" class="headerlink" title="推送优化"></a>推送优化</h3><ul><li>批量消息处理</li><li>智能重试机制</li><li>消息队列缓冲</li></ul><h3 id="资源管理"><a href="#资源管理" class="headerlink" title="资源管理"></a>资源管理</h3><ul><li>连接池复用</li><li>内存使用优化</li><li>数据库查询优化</li></ul><h2 id="安全考虑"><a href="#安全考虑" class="headerlink" title="安全考虑"></a>安全考虑</h2><h3 id="认证安全"><a href="#认证安全" class="headerlink" title="认证安全"></a>认证安全</h3><ul><li>Token加密存储</li><li>HTTPS通信加密</li><li>访问权限控制</li></ul><h3 id="数据保护"><a href="#数据保护" class="headerlink" title="数据保护"></a>数据保护</h3><ul><li>敏感信息过滤</li><li>日志记录审计</li><li>异常行为监控</li></ul><h2 id="扩展功能"><a href="#扩展功能" class="headerlink" title="扩展功能"></a>扩展功能</h2><h3 id="插件扩展"><a href="#插件扩展" class="headerlink" title="插件扩展"></a>插件扩展</h3><ul><li>支持自定义通知模板</li><li>支持多种推送服务</li><li>支持条件触发规则</li></ul><h3 id="集成能力"><a href="#集成能力" class="headerlink" title="集成能力"></a>集成能力</h3><ul><li>与现有通知系统集成</li><li>支持Webhook回调</li><li>支持第三方服务集成</li></ul><h2 id="故障排除"><a href="#故障排除" class="headerlink" title="故障排除"></a>故障排除</h2><h3 id="常见问题"><a href="#常见问题" class="headerlink" title="常见问题"></a>常见问题</h3><ol><li><strong>连接失败</strong>：检查网络和服务器状态</li><li><strong>认证错误</strong>：验证Token配置</li><li><strong>推送延迟</strong>：检查服务器负载</li></ol><h3 id="调试方法"><a href="#调试方法" class="headerlink" title="调试方法"></a>调试方法</h3><ul><li>启用详细日志</li><li>检查网络连接</li><li>验证API响应</li></ul><hr><p><em>GotifyNotify让ongwu博客通知更智能、更及时！</em></p>]]></content>
      
      
      <categories>
          
          <category> tech </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ongwu插件 </tag>
            
            <tag> 通知系统 </tag>
            
            <tag> Gotify </tag>
            
            <tag> 消息推送 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>GotifyNotify</title>
      <link href="/2025/01/10/10%20-%20%E5%89%AF%E6%9C%AC%20(13)/"/>
      <url>/2025/01/10/10%20-%20%E5%89%AF%E6%9C%AC%20(13)/</url>
      
        <content type="html"><![CDATA[<h1 id="GotifyNotify-ongwu通知插件"><a href="#GotifyNotify-ongwu通知插件" class="headerlink" title="GotifyNotify - ongwu通知插件"></a>GotifyNotify - ongwu通知插件</h1><h2 id="插件概述"><a href="#插件概述" class="headerlink" title="插件概述"></a>插件概述</h2><p>GotifyNotify是一个专为ongwu博客开发的通知插件，通过集成Gotify服务，为博客管理员和用户提供实时的消息推送功能。无论是新评论、新文章还是系统通知，都能及时推送到指定设备。</p><h2 id="主要功能"><a href="#主要功能" class="headerlink" title="主要功能"></a>主要功能</h2><h3 id="通知类型"><a href="#通知类型" class="headerlink" title="通知类型"></a>通知类型</h3><ul><li><strong>评论通知</strong>：新评论发布时自动推送</li><li><strong>文章通知</strong>：新文章发布时通知订阅用户</li><li><strong>系统通知</strong>：重要系统事件实时推送</li><li><strong>自定义通知</strong>：支持自定义消息内容</li></ul><h3 id="推送方式"><a href="#推送方式" class="headerlink" title="推送方式"></a>推送方式</h3><ul><li><strong>Gotify服务</strong>：通过Gotify API推送消息</li><li><strong>多设备支持</strong>：支持Android、iOS、Web等平台</li><li><strong>实时推送</strong>：毫秒级消息传递</li><li><strong>离线存储</strong>：消息持久化存储</li></ul><h2 id="技术架构"><a href="#技术架构" class="headerlink" title="技术架构"></a>技术架构</h2><h3 id="系统架构图"><a href="#系统架构图" class="headerlink" title="系统架构图"></a>系统架构图</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ongwu博客 → GotifyNotify插件 → Gotify服务器 → 客户端设备</span><br><span class="line">     ↓              ↓              ↓           ↓</span><br><span class="line">   事件触发     消息处理      消息分发     消息接收</span><br></pre></td></tr></table></figure><h3 id="核心代码实现"><a href="#核心代码实现" class="headerlink" title="核心代码实现"></a>核心代码实现</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 通知处理类</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">GotifyNotify_Handler</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$gotifyUrl</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$appToken</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$url</span>, <span class="variable">$token</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;gotifyUrl = <span class="variable">$url</span>;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;appToken = <span class="variable">$token</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 发送通知</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">sendNotification</span>(<span class="params"><span class="variable">$title</span>, <span class="variable">$message</span>, <span class="variable">$priority</span> = <span class="number">0</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable">$data</span> = <span class="keyword">array</span>(</span><br><span class="line">            <span class="string">&#x27;title&#x27;</span> =&gt; <span class="variable">$title</span>,</span><br><span class="line">            <span class="string">&#x27;message&#x27;</span> =&gt; <span class="variable">$message</span>,</span><br><span class="line">            <span class="string">&#x27;priority&#x27;</span> =&gt; <span class="variable">$priority</span></span><br><span class="line">        );</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">postToGotify</span>(<span class="variable">$data</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 推送到Gotify</span></span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">postToGotify</span>(<span class="params"><span class="variable">$data</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable">$ch</span> = <span class="title function_ invoke__">curl_init</span>();</span><br><span class="line">        <span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$ch</span>, CURLOPT_URL, <span class="variable">$this</span>-&gt;gotifyUrl . <span class="string">&#x27;/message&#x27;</span>);</span><br><span class="line">        <span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$ch</span>, CURLOPT_POST, <span class="literal">true</span>);</span><br><span class="line">        <span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$ch</span>, CURLOPT_POSTFIELDS, <span class="title function_ invoke__">json_encode</span>(<span class="variable">$data</span>));</span><br><span class="line">        <span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$ch</span>, CURLOPT_HTTPHEADER, <span class="keyword">array</span>(</span><br><span class="line">            <span class="string">&#x27;X-Gotify-Key: &#x27;</span> . <span class="variable">$this</span>-&gt;appToken,</span><br><span class="line">            <span class="string">&#x27;Content-Type: application/json&#x27;</span></span><br><span class="line">        ));</span><br><span class="line">        </span><br><span class="line">        <span class="variable">$response</span> = <span class="title function_ invoke__">curl_exec</span>(<span class="variable">$ch</span>);</span><br><span class="line">        <span class="title function_ invoke__">curl_close</span>(<span class="variable">$ch</span>);</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$response</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="安装配置"><a href="#安装配置" class="headerlink" title="安装配置"></a>安装配置</h2><h3 id="1-安装Gotify服务器"><a href="#1-安装Gotify服务器" class="headerlink" title="1. 安装Gotify服务器"></a>1. 安装Gotify服务器</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Docker安装方式</span></span><br><span class="line">docker run -p 80:80 -p 443:443 \</span><br><span class="line">  -v /var/gotify:/app/data \</span><br><span class="line">  gotify/server</span><br></pre></td></tr></table></figure><h3 id="2-配置插件"><a href="#2-配置插件" class="headerlink" title="2. 配置插件"></a>2. 配置插件</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 插件配置</span></span><br><span class="line"><span class="keyword">return</span> <span class="keyword">array</span>(</span><br><span class="line">    <span class="string">&#x27;gotify_url&#x27;</span> =&gt; <span class="string">&#x27;https://your-gotify-server.com&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;app_token&#x27;</span> =&gt; <span class="string">&#x27;your-app-token&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;enable_comments&#x27;</span> =&gt; <span class="literal">true</span>,</span><br><span class="line">    <span class="string">&#x27;enable_posts&#x27;</span> =&gt; <span class="literal">true</span>,</span><br><span class="line">    <span class="string">&#x27;enable_system&#x27;</span> =&gt; <span class="literal">true</span>,</span><br><span class="line">    <span class="string">&#x27;notification_priority&#x27;</span> =&gt; <span class="number">0</span></span><br><span class="line">);</span><br></pre></td></tr></table></figure><h3 id="3-客户端配置"><a href="#3-客户端配置" class="headerlink" title="3. 客户端配置"></a>3. 客户端配置</h3><ul><li>下载Gotify客户端应用</li><li>配置服务器地址和认证信息</li><li>设置通知偏好</li></ul><h2 id="使用场景"><a href="#使用场景" class="headerlink" title="使用场景"></a>使用场景</h2><h3 id="博客管理"><a href="#博客管理" class="headerlink" title="博客管理"></a>博客管理</h3><ul><li>新评论实时提醒</li><li>系统状态监控</li><li>安全事件通知</li></ul><h3 id="用户服务"><a href="#用户服务" class="headerlink" title="用户服务"></a>用户服务</h3><ul><li>文章更新提醒</li><li>回复通知</li><li>重要公告推送</li></ul><h2 id="性能优化"><a href="#性能优化" class="headerlink" title="性能优化"></a>性能优化</h2><h3 id="推送优化"><a href="#推送优化" class="headerlink" title="推送优化"></a>推送优化</h3><ul><li>批量消息处理</li><li>智能重试机制</li><li>消息队列缓冲</li></ul><h3 id="资源管理"><a href="#资源管理" class="headerlink" title="资源管理"></a>资源管理</h3><ul><li>连接池复用</li><li>内存使用优化</li><li>数据库查询优化</li></ul><h2 id="安全考虑"><a href="#安全考虑" class="headerlink" title="安全考虑"></a>安全考虑</h2><h3 id="认证安全"><a href="#认证安全" class="headerlink" title="认证安全"></a>认证安全</h3><ul><li>Token加密存储</li><li>HTTPS通信加密</li><li>访问权限控制</li></ul><h3 id="数据保护"><a href="#数据保护" class="headerlink" title="数据保护"></a>数据保护</h3><ul><li>敏感信息过滤</li><li>日志记录审计</li><li>异常行为监控</li></ul><h2 id="扩展功能"><a href="#扩展功能" class="headerlink" title="扩展功能"></a>扩展功能</h2><h3 id="插件扩展"><a href="#插件扩展" class="headerlink" title="插件扩展"></a>插件扩展</h3><ul><li>支持自定义通知模板</li><li>支持多种推送服务</li><li>支持条件触发规则</li></ul><h3 id="集成能力"><a href="#集成能力" class="headerlink" title="集成能力"></a>集成能力</h3><ul><li>与现有通知系统集成</li><li>支持Webhook回调</li><li>支持第三方服务集成</li></ul><h2 id="故障排除"><a href="#故障排除" class="headerlink" title="故障排除"></a>故障排除</h2><h3 id="常见问题"><a href="#常见问题" class="headerlink" title="常见问题"></a>常见问题</h3><ol><li><strong>连接失败</strong>：检查网络和服务器状态</li><li><strong>认证错误</strong>：验证Token配置</li><li><strong>推送延迟</strong>：检查服务器负载</li></ol><h3 id="调试方法"><a href="#调试方法" class="headerlink" title="调试方法"></a>调试方法</h3><ul><li>启用详细日志</li><li>检查网络连接</li><li>验证API响应</li></ul><hr><p><em>GotifyNotify让ongwu博客通知更智能、更及时！</em></p>]]></content>
      
      
      <categories>
          
          <category> tech </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ongwu插件 </tag>
            
            <tag> 通知系统 </tag>
            
            <tag> Gotify </tag>
            
            <tag> 消息推送 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>GotifyNotify</title>
      <link href="/2025/01/10/10%20-%20%E5%89%AF%E6%9C%AC%20(14)/"/>
      <url>/2025/01/10/10%20-%20%E5%89%AF%E6%9C%AC%20(14)/</url>
      
        <content type="html"><![CDATA[<h1 id="GotifyNotify-ongwu通知插件"><a href="#GotifyNotify-ongwu通知插件" class="headerlink" title="GotifyNotify - ongwu通知插件"></a>GotifyNotify - ongwu通知插件</h1><h2 id="插件概述"><a href="#插件概述" class="headerlink" title="插件概述"></a>插件概述</h2><p>GotifyNotify是一个专为ongwu博客开发的通知插件，通过集成Gotify服务，为博客管理员和用户提供实时的消息推送功能。无论是新评论、新文章还是系统通知，都能及时推送到指定设备。</p><h2 id="主要功能"><a href="#主要功能" class="headerlink" title="主要功能"></a>主要功能</h2><h3 id="通知类型"><a href="#通知类型" class="headerlink" title="通知类型"></a>通知类型</h3><ul><li><strong>评论通知</strong>：新评论发布时自动推送</li><li><strong>文章通知</strong>：新文章发布时通知订阅用户</li><li><strong>系统通知</strong>：重要系统事件实时推送</li><li><strong>自定义通知</strong>：支持自定义消息内容</li></ul><h3 id="推送方式"><a href="#推送方式" class="headerlink" title="推送方式"></a>推送方式</h3><ul><li><strong>Gotify服务</strong>：通过Gotify API推送消息</li><li><strong>多设备支持</strong>：支持Android、iOS、Web等平台</li><li><strong>实时推送</strong>：毫秒级消息传递</li><li><strong>离线存储</strong>：消息持久化存储</li></ul><h2 id="技术架构"><a href="#技术架构" class="headerlink" title="技术架构"></a>技术架构</h2><h3 id="系统架构图"><a href="#系统架构图" class="headerlink" title="系统架构图"></a>系统架构图</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ongwu博客 → GotifyNotify插件 → Gotify服务器 → 客户端设备</span><br><span class="line">     ↓              ↓              ↓           ↓</span><br><span class="line">   事件触发     消息处理      消息分发     消息接收</span><br></pre></td></tr></table></figure><h3 id="核心代码实现"><a href="#核心代码实现" class="headerlink" title="核心代码实现"></a>核心代码实现</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 通知处理类</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">GotifyNotify_Handler</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$gotifyUrl</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$appToken</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$url</span>, <span class="variable">$token</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;gotifyUrl = <span class="variable">$url</span>;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;appToken = <span class="variable">$token</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 发送通知</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">sendNotification</span>(<span class="params"><span class="variable">$title</span>, <span class="variable">$message</span>, <span class="variable">$priority</span> = <span class="number">0</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable">$data</span> = <span class="keyword">array</span>(</span><br><span class="line">            <span class="string">&#x27;title&#x27;</span> =&gt; <span class="variable">$title</span>,</span><br><span class="line">            <span class="string">&#x27;message&#x27;</span> =&gt; <span class="variable">$message</span>,</span><br><span class="line">            <span class="string">&#x27;priority&#x27;</span> =&gt; <span class="variable">$priority</span></span><br><span class="line">        );</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">postToGotify</span>(<span class="variable">$data</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 推送到Gotify</span></span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">postToGotify</span>(<span class="params"><span class="variable">$data</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable">$ch</span> = <span class="title function_ invoke__">curl_init</span>();</span><br><span class="line">        <span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$ch</span>, CURLOPT_URL, <span class="variable">$this</span>-&gt;gotifyUrl . <span class="string">&#x27;/message&#x27;</span>);</span><br><span class="line">        <span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$ch</span>, CURLOPT_POST, <span class="literal">true</span>);</span><br><span class="line">        <span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$ch</span>, CURLOPT_POSTFIELDS, <span class="title function_ invoke__">json_encode</span>(<span class="variable">$data</span>));</span><br><span class="line">        <span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$ch</span>, CURLOPT_HTTPHEADER, <span class="keyword">array</span>(</span><br><span class="line">            <span class="string">&#x27;X-Gotify-Key: &#x27;</span> . <span class="variable">$this</span>-&gt;appToken,</span><br><span class="line">            <span class="string">&#x27;Content-Type: application/json&#x27;</span></span><br><span class="line">        ));</span><br><span class="line">        </span><br><span class="line">        <span class="variable">$response</span> = <span class="title function_ invoke__">curl_exec</span>(<span class="variable">$ch</span>);</span><br><span class="line">        <span class="title function_ invoke__">curl_close</span>(<span class="variable">$ch</span>);</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$response</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="安装配置"><a href="#安装配置" class="headerlink" title="安装配置"></a>安装配置</h2><h3 id="1-安装Gotify服务器"><a href="#1-安装Gotify服务器" class="headerlink" title="1. 安装Gotify服务器"></a>1. 安装Gotify服务器</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Docker安装方式</span></span><br><span class="line">docker run -p 80:80 -p 443:443 \</span><br><span class="line">  -v /var/gotify:/app/data \</span><br><span class="line">  gotify/server</span><br></pre></td></tr></table></figure><h3 id="2-配置插件"><a href="#2-配置插件" class="headerlink" title="2. 配置插件"></a>2. 配置插件</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 插件配置</span></span><br><span class="line"><span class="keyword">return</span> <span class="keyword">array</span>(</span><br><span class="line">    <span class="string">&#x27;gotify_url&#x27;</span> =&gt; <span class="string">&#x27;https://your-gotify-server.com&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;app_token&#x27;</span> =&gt; <span class="string">&#x27;your-app-token&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;enable_comments&#x27;</span> =&gt; <span class="literal">true</span>,</span><br><span class="line">    <span class="string">&#x27;enable_posts&#x27;</span> =&gt; <span class="literal">true</span>,</span><br><span class="line">    <span class="string">&#x27;enable_system&#x27;</span> =&gt; <span class="literal">true</span>,</span><br><span class="line">    <span class="string">&#x27;notification_priority&#x27;</span> =&gt; <span class="number">0</span></span><br><span class="line">);</span><br></pre></td></tr></table></figure><h3 id="3-客户端配置"><a href="#3-客户端配置" class="headerlink" title="3. 客户端配置"></a>3. 客户端配置</h3><ul><li>下载Gotify客户端应用</li><li>配置服务器地址和认证信息</li><li>设置通知偏好</li></ul><h2 id="使用场景"><a href="#使用场景" class="headerlink" title="使用场景"></a>使用场景</h2><h3 id="博客管理"><a href="#博客管理" class="headerlink" title="博客管理"></a>博客管理</h3><ul><li>新评论实时提醒</li><li>系统状态监控</li><li>安全事件通知</li></ul><h3 id="用户服务"><a href="#用户服务" class="headerlink" title="用户服务"></a>用户服务</h3><ul><li>文章更新提醒</li><li>回复通知</li><li>重要公告推送</li></ul><h2 id="性能优化"><a href="#性能优化" class="headerlink" title="性能优化"></a>性能优化</h2><h3 id="推送优化"><a href="#推送优化" class="headerlink" title="推送优化"></a>推送优化</h3><ul><li>批量消息处理</li><li>智能重试机制</li><li>消息队列缓冲</li></ul><h3 id="资源管理"><a href="#资源管理" class="headerlink" title="资源管理"></a>资源管理</h3><ul><li>连接池复用</li><li>内存使用优化</li><li>数据库查询优化</li></ul><h2 id="安全考虑"><a href="#安全考虑" class="headerlink" title="安全考虑"></a>安全考虑</h2><h3 id="认证安全"><a href="#认证安全" class="headerlink" title="认证安全"></a>认证安全</h3><ul><li>Token加密存储</li><li>HTTPS通信加密</li><li>访问权限控制</li></ul><h3 id="数据保护"><a href="#数据保护" class="headerlink" title="数据保护"></a>数据保护</h3><ul><li>敏感信息过滤</li><li>日志记录审计</li><li>异常行为监控</li></ul><h2 id="扩展功能"><a href="#扩展功能" class="headerlink" title="扩展功能"></a>扩展功能</h2><h3 id="插件扩展"><a href="#插件扩展" class="headerlink" title="插件扩展"></a>插件扩展</h3><ul><li>支持自定义通知模板</li><li>支持多种推送服务</li><li>支持条件触发规则</li></ul><h3 id="集成能力"><a href="#集成能力" class="headerlink" title="集成能力"></a>集成能力</h3><ul><li>与现有通知系统集成</li><li>支持Webhook回调</li><li>支持第三方服务集成</li></ul><h2 id="故障排除"><a href="#故障排除" class="headerlink" title="故障排除"></a>故障排除</h2><h3 id="常见问题"><a href="#常见问题" class="headerlink" title="常见问题"></a>常见问题</h3><ol><li><strong>连接失败</strong>：检查网络和服务器状态</li><li><strong>认证错误</strong>：验证Token配置</li><li><strong>推送延迟</strong>：检查服务器负载</li></ol><h3 id="调试方法"><a href="#调试方法" class="headerlink" title="调试方法"></a>调试方法</h3><ul><li>启用详细日志</li><li>检查网络连接</li><li>验证API响应</li></ul><hr><p><em>GotifyNotify让ongwu博客通知更智能、更及时！</em></p>]]></content>
      
      
      <categories>
          
          <category> tech </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ongwu插件 </tag>
            
            <tag> 通知系统 </tag>
            
            <tag> Gotify </tag>
            
            <tag> 消息推送 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>GotifyNotify</title>
      <link href="/2025/01/10/10%20-%20%E5%89%AF%E6%9C%AC%20(15)/"/>
      <url>/2025/01/10/10%20-%20%E5%89%AF%E6%9C%AC%20(15)/</url>
      
        <content type="html"><![CDATA[<h1 id="GotifyNotify-ongwu通知插件"><a href="#GotifyNotify-ongwu通知插件" class="headerlink" title="GotifyNotify - ongwu通知插件"></a>GotifyNotify - ongwu通知插件</h1><h2 id="插件概述"><a href="#插件概述" class="headerlink" title="插件概述"></a>插件概述</h2><p>GotifyNotify是一个专为ongwu博客开发的通知插件，通过集成Gotify服务，为博客管理员和用户提供实时的消息推送功能。无论是新评论、新文章还是系统通知，都能及时推送到指定设备。</p><h2 id="主要功能"><a href="#主要功能" class="headerlink" title="主要功能"></a>主要功能</h2><h3 id="通知类型"><a href="#通知类型" class="headerlink" title="通知类型"></a>通知类型</h3><ul><li><strong>评论通知</strong>：新评论发布时自动推送</li><li><strong>文章通知</strong>：新文章发布时通知订阅用户</li><li><strong>系统通知</strong>：重要系统事件实时推送</li><li><strong>自定义通知</strong>：支持自定义消息内容</li></ul><h3 id="推送方式"><a href="#推送方式" class="headerlink" title="推送方式"></a>推送方式</h3><ul><li><strong>Gotify服务</strong>：通过Gotify API推送消息</li><li><strong>多设备支持</strong>：支持Android、iOS、Web等平台</li><li><strong>实时推送</strong>：毫秒级消息传递</li><li><strong>离线存储</strong>：消息持久化存储</li></ul><h2 id="技术架构"><a href="#技术架构" class="headerlink" title="技术架构"></a>技术架构</h2><h3 id="系统架构图"><a href="#系统架构图" class="headerlink" title="系统架构图"></a>系统架构图</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ongwu博客 → GotifyNotify插件 → Gotify服务器 → 客户端设备</span><br><span class="line">     ↓              ↓              ↓           ↓</span><br><span class="line">   事件触发     消息处理      消息分发     消息接收</span><br></pre></td></tr></table></figure><h3 id="核心代码实现"><a href="#核心代码实现" class="headerlink" title="核心代码实现"></a>核心代码实现</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 通知处理类</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">GotifyNotify_Handler</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$gotifyUrl</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$appToken</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$url</span>, <span class="variable">$token</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;gotifyUrl = <span class="variable">$url</span>;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;appToken = <span class="variable">$token</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 发送通知</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">sendNotification</span>(<span class="params"><span class="variable">$title</span>, <span class="variable">$message</span>, <span class="variable">$priority</span> = <span class="number">0</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable">$data</span> = <span class="keyword">array</span>(</span><br><span class="line">            <span class="string">&#x27;title&#x27;</span> =&gt; <span class="variable">$title</span>,</span><br><span class="line">            <span class="string">&#x27;message&#x27;</span> =&gt; <span class="variable">$message</span>,</span><br><span class="line">            <span class="string">&#x27;priority&#x27;</span> =&gt; <span class="variable">$priority</span></span><br><span class="line">        );</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">postToGotify</span>(<span class="variable">$data</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 推送到Gotify</span></span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">postToGotify</span>(<span class="params"><span class="variable">$data</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable">$ch</span> = <span class="title function_ invoke__">curl_init</span>();</span><br><span class="line">        <span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$ch</span>, CURLOPT_URL, <span class="variable">$this</span>-&gt;gotifyUrl . <span class="string">&#x27;/message&#x27;</span>);</span><br><span class="line">        <span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$ch</span>, CURLOPT_POST, <span class="literal">true</span>);</span><br><span class="line">        <span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$ch</span>, CURLOPT_POSTFIELDS, <span class="title function_ invoke__">json_encode</span>(<span class="variable">$data</span>));</span><br><span class="line">        <span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$ch</span>, CURLOPT_HTTPHEADER, <span class="keyword">array</span>(</span><br><span class="line">            <span class="string">&#x27;X-Gotify-Key: &#x27;</span> . <span class="variable">$this</span>-&gt;appToken,</span><br><span class="line">            <span class="string">&#x27;Content-Type: application/json&#x27;</span></span><br><span class="line">        ));</span><br><span class="line">        </span><br><span class="line">        <span class="variable">$response</span> = <span class="title function_ invoke__">curl_exec</span>(<span class="variable">$ch</span>);</span><br><span class="line">        <span class="title function_ invoke__">curl_close</span>(<span class="variable">$ch</span>);</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$response</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="安装配置"><a href="#安装配置" class="headerlink" title="安装配置"></a>安装配置</h2><h3 id="1-安装Gotify服务器"><a href="#1-安装Gotify服务器" class="headerlink" title="1. 安装Gotify服务器"></a>1. 安装Gotify服务器</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Docker安装方式</span></span><br><span class="line">docker run -p 80:80 -p 443:443 \</span><br><span class="line">  -v /var/gotify:/app/data \</span><br><span class="line">  gotify/server</span><br></pre></td></tr></table></figure><h3 id="2-配置插件"><a href="#2-配置插件" class="headerlink" title="2. 配置插件"></a>2. 配置插件</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 插件配置</span></span><br><span class="line"><span class="keyword">return</span> <span class="keyword">array</span>(</span><br><span class="line">    <span class="string">&#x27;gotify_url&#x27;</span> =&gt; <span class="string">&#x27;https://your-gotify-server.com&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;app_token&#x27;</span> =&gt; <span class="string">&#x27;your-app-token&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;enable_comments&#x27;</span> =&gt; <span class="literal">true</span>,</span><br><span class="line">    <span class="string">&#x27;enable_posts&#x27;</span> =&gt; <span class="literal">true</span>,</span><br><span class="line">    <span class="string">&#x27;enable_system&#x27;</span> =&gt; <span class="literal">true</span>,</span><br><span class="line">    <span class="string">&#x27;notification_priority&#x27;</span> =&gt; <span class="number">0</span></span><br><span class="line">);</span><br></pre></td></tr></table></figure><h3 id="3-客户端配置"><a href="#3-客户端配置" class="headerlink" title="3. 客户端配置"></a>3. 客户端配置</h3><ul><li>下载Gotify客户端应用</li><li>配置服务器地址和认证信息</li><li>设置通知偏好</li></ul><h2 id="使用场景"><a href="#使用场景" class="headerlink" title="使用场景"></a>使用场景</h2><h3 id="博客管理"><a href="#博客管理" class="headerlink" title="博客管理"></a>博客管理</h3><ul><li>新评论实时提醒</li><li>系统状态监控</li><li>安全事件通知</li></ul><h3 id="用户服务"><a href="#用户服务" class="headerlink" title="用户服务"></a>用户服务</h3><ul><li>文章更新提醒</li><li>回复通知</li><li>重要公告推送</li></ul><h2 id="性能优化"><a href="#性能优化" class="headerlink" title="性能优化"></a>性能优化</h2><h3 id="推送优化"><a href="#推送优化" class="headerlink" title="推送优化"></a>推送优化</h3><ul><li>批量消息处理</li><li>智能重试机制</li><li>消息队列缓冲</li></ul><h3 id="资源管理"><a href="#资源管理" class="headerlink" title="资源管理"></a>资源管理</h3><ul><li>连接池复用</li><li>内存使用优化</li><li>数据库查询优化</li></ul><h2 id="安全考虑"><a href="#安全考虑" class="headerlink" title="安全考虑"></a>安全考虑</h2><h3 id="认证安全"><a href="#认证安全" class="headerlink" title="认证安全"></a>认证安全</h3><ul><li>Token加密存储</li><li>HTTPS通信加密</li><li>访问权限控制</li></ul><h3 id="数据保护"><a href="#数据保护" class="headerlink" title="数据保护"></a>数据保护</h3><ul><li>敏感信息过滤</li><li>日志记录审计</li><li>异常行为监控</li></ul><h2 id="扩展功能"><a href="#扩展功能" class="headerlink" title="扩展功能"></a>扩展功能</h2><h3 id="插件扩展"><a href="#插件扩展" class="headerlink" title="插件扩展"></a>插件扩展</h3><ul><li>支持自定义通知模板</li><li>支持多种推送服务</li><li>支持条件触发规则</li></ul><h3 id="集成能力"><a href="#集成能力" class="headerlink" title="集成能力"></a>集成能力</h3><ul><li>与现有通知系统集成</li><li>支持Webhook回调</li><li>支持第三方服务集成</li></ul><h2 id="故障排除"><a href="#故障排除" class="headerlink" title="故障排除"></a>故障排除</h2><h3 id="常见问题"><a href="#常见问题" class="headerlink" title="常见问题"></a>常见问题</h3><ol><li><strong>连接失败</strong>：检查网络和服务器状态</li><li><strong>认证错误</strong>：验证Token配置</li><li><strong>推送延迟</strong>：检查服务器负载</li></ol><h3 id="调试方法"><a href="#调试方法" class="headerlink" title="调试方法"></a>调试方法</h3><ul><li>启用详细日志</li><li>检查网络连接</li><li>验证API响应</li></ul><hr><p><em>GotifyNotify让ongwu博客通知更智能、更及时！</em></p>]]></content>
      
      
      <categories>
          
          <category> tech </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ongwu插件 </tag>
            
            <tag> 通知系统 </tag>
            
            <tag> Gotify </tag>
            
            <tag> 消息推送 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>GotifyNotify</title>
      <link href="/2025/01/10/10%20-%20%E5%89%AF%E6%9C%AC%20(16)/"/>
      <url>/2025/01/10/10%20-%20%E5%89%AF%E6%9C%AC%20(16)/</url>
      
        <content type="html"><![CDATA[<h1 id="GotifyNotify-ongwu通知插件"><a href="#GotifyNotify-ongwu通知插件" class="headerlink" title="GotifyNotify - ongwu通知插件"></a>GotifyNotify - ongwu通知插件</h1><h2 id="插件概述"><a href="#插件概述" class="headerlink" title="插件概述"></a>插件概述</h2><p>GotifyNotify是一个专为ongwu博客开发的通知插件，通过集成Gotify服务，为博客管理员和用户提供实时的消息推送功能。无论是新评论、新文章还是系统通知，都能及时推送到指定设备。</p><h2 id="主要功能"><a href="#主要功能" class="headerlink" title="主要功能"></a>主要功能</h2><h3 id="通知类型"><a href="#通知类型" class="headerlink" title="通知类型"></a>通知类型</h3><ul><li><strong>评论通知</strong>：新评论发布时自动推送</li><li><strong>文章通知</strong>：新文章发布时通知订阅用户</li><li><strong>系统通知</strong>：重要系统事件实时推送</li><li><strong>自定义通知</strong>：支持自定义消息内容</li></ul><h3 id="推送方式"><a href="#推送方式" class="headerlink" title="推送方式"></a>推送方式</h3><ul><li><strong>Gotify服务</strong>：通过Gotify API推送消息</li><li><strong>多设备支持</strong>：支持Android、iOS、Web等平台</li><li><strong>实时推送</strong>：毫秒级消息传递</li><li><strong>离线存储</strong>：消息持久化存储</li></ul><h2 id="技术架构"><a href="#技术架构" class="headerlink" title="技术架构"></a>技术架构</h2><h3 id="系统架构图"><a href="#系统架构图" class="headerlink" title="系统架构图"></a>系统架构图</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ongwu博客 → GotifyNotify插件 → Gotify服务器 → 客户端设备</span><br><span class="line">     ↓              ↓              ↓           ↓</span><br><span class="line">   事件触发     消息处理      消息分发     消息接收</span><br></pre></td></tr></table></figure><h3 id="核心代码实现"><a href="#核心代码实现" class="headerlink" title="核心代码实现"></a>核心代码实现</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 通知处理类</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">GotifyNotify_Handler</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$gotifyUrl</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$appToken</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$url</span>, <span class="variable">$token</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;gotifyUrl = <span class="variable">$url</span>;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;appToken = <span class="variable">$token</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 发送通知</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">sendNotification</span>(<span class="params"><span class="variable">$title</span>, <span class="variable">$message</span>, <span class="variable">$priority</span> = <span class="number">0</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable">$data</span> = <span class="keyword">array</span>(</span><br><span class="line">            <span class="string">&#x27;title&#x27;</span> =&gt; <span class="variable">$title</span>,</span><br><span class="line">            <span class="string">&#x27;message&#x27;</span> =&gt; <span class="variable">$message</span>,</span><br><span class="line">            <span class="string">&#x27;priority&#x27;</span> =&gt; <span class="variable">$priority</span></span><br><span class="line">        );</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">postToGotify</span>(<span class="variable">$data</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 推送到Gotify</span></span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">postToGotify</span>(<span class="params"><span class="variable">$data</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable">$ch</span> = <span class="title function_ invoke__">curl_init</span>();</span><br><span class="line">        <span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$ch</span>, CURLOPT_URL, <span class="variable">$this</span>-&gt;gotifyUrl . <span class="string">&#x27;/message&#x27;</span>);</span><br><span class="line">        <span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$ch</span>, CURLOPT_POST, <span class="literal">true</span>);</span><br><span class="line">        <span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$ch</span>, CURLOPT_POSTFIELDS, <span class="title function_ invoke__">json_encode</span>(<span class="variable">$data</span>));</span><br><span class="line">        <span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$ch</span>, CURLOPT_HTTPHEADER, <span class="keyword">array</span>(</span><br><span class="line">            <span class="string">&#x27;X-Gotify-Key: &#x27;</span> . <span class="variable">$this</span>-&gt;appToken,</span><br><span class="line">            <span class="string">&#x27;Content-Type: application/json&#x27;</span></span><br><span class="line">        ));</span><br><span class="line">        </span><br><span class="line">        <span class="variable">$response</span> = <span class="title function_ invoke__">curl_exec</span>(<span class="variable">$ch</span>);</span><br><span class="line">        <span class="title function_ invoke__">curl_close</span>(<span class="variable">$ch</span>);</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$response</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="安装配置"><a href="#安装配置" class="headerlink" title="安装配置"></a>安装配置</h2><h3 id="1-安装Gotify服务器"><a href="#1-安装Gotify服务器" class="headerlink" title="1. 安装Gotify服务器"></a>1. 安装Gotify服务器</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Docker安装方式</span></span><br><span class="line">docker run -p 80:80 -p 443:443 \</span><br><span class="line">  -v /var/gotify:/app/data \</span><br><span class="line">  gotify/server</span><br></pre></td></tr></table></figure><h3 id="2-配置插件"><a href="#2-配置插件" class="headerlink" title="2. 配置插件"></a>2. 配置插件</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 插件配置</span></span><br><span class="line"><span class="keyword">return</span> <span class="keyword">array</span>(</span><br><span class="line">    <span class="string">&#x27;gotify_url&#x27;</span> =&gt; <span class="string">&#x27;https://your-gotify-server.com&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;app_token&#x27;</span> =&gt; <span class="string">&#x27;your-app-token&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;enable_comments&#x27;</span> =&gt; <span class="literal">true</span>,</span><br><span class="line">    <span class="string">&#x27;enable_posts&#x27;</span> =&gt; <span class="literal">true</span>,</span><br><span class="line">    <span class="string">&#x27;enable_system&#x27;</span> =&gt; <span class="literal">true</span>,</span><br><span class="line">    <span class="string">&#x27;notification_priority&#x27;</span> =&gt; <span class="number">0</span></span><br><span class="line">);</span><br></pre></td></tr></table></figure><h3 id="3-客户端配置"><a href="#3-客户端配置" class="headerlink" title="3. 客户端配置"></a>3. 客户端配置</h3><ul><li>下载Gotify客户端应用</li><li>配置服务器地址和认证信息</li><li>设置通知偏好</li></ul><h2 id="使用场景"><a href="#使用场景" class="headerlink" title="使用场景"></a>使用场景</h2><h3 id="博客管理"><a href="#博客管理" class="headerlink" title="博客管理"></a>博客管理</h3><ul><li>新评论实时提醒</li><li>系统状态监控</li><li>安全事件通知</li></ul><h3 id="用户服务"><a href="#用户服务" class="headerlink" title="用户服务"></a>用户服务</h3><ul><li>文章更新提醒</li><li>回复通知</li><li>重要公告推送</li></ul><h2 id="性能优化"><a href="#性能优化" class="headerlink" title="性能优化"></a>性能优化</h2><h3 id="推送优化"><a href="#推送优化" class="headerlink" title="推送优化"></a>推送优化</h3><ul><li>批量消息处理</li><li>智能重试机制</li><li>消息队列缓冲</li></ul><h3 id="资源管理"><a href="#资源管理" class="headerlink" title="资源管理"></a>资源管理</h3><ul><li>连接池复用</li><li>内存使用优化</li><li>数据库查询优化</li></ul><h2 id="安全考虑"><a href="#安全考虑" class="headerlink" title="安全考虑"></a>安全考虑</h2><h3 id="认证安全"><a href="#认证安全" class="headerlink" title="认证安全"></a>认证安全</h3><ul><li>Token加密存储</li><li>HTTPS通信加密</li><li>访问权限控制</li></ul><h3 id="数据保护"><a href="#数据保护" class="headerlink" title="数据保护"></a>数据保护</h3><ul><li>敏感信息过滤</li><li>日志记录审计</li><li>异常行为监控</li></ul><h2 id="扩展功能"><a href="#扩展功能" class="headerlink" title="扩展功能"></a>扩展功能</h2><h3 id="插件扩展"><a href="#插件扩展" class="headerlink" title="插件扩展"></a>插件扩展</h3><ul><li>支持自定义通知模板</li><li>支持多种推送服务</li><li>支持条件触发规则</li></ul><h3 id="集成能力"><a href="#集成能力" class="headerlink" title="集成能力"></a>集成能力</h3><ul><li>与现有通知系统集成</li><li>支持Webhook回调</li><li>支持第三方服务集成</li></ul><h2 id="故障排除"><a href="#故障排除" class="headerlink" title="故障排除"></a>故障排除</h2><h3 id="常见问题"><a href="#常见问题" class="headerlink" title="常见问题"></a>常见问题</h3><ol><li><strong>连接失败</strong>：检查网络和服务器状态</li><li><strong>认证错误</strong>：验证Token配置</li><li><strong>推送延迟</strong>：检查服务器负载</li></ol><h3 id="调试方法"><a href="#调试方法" class="headerlink" title="调试方法"></a>调试方法</h3><ul><li>启用详细日志</li><li>检查网络连接</li><li>验证API响应</li></ul><hr><p><em>GotifyNotify让ongwu博客通知更智能、更及时！</em></p>]]></content>
      
      
      <categories>
          
          <category> tech </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ongwu插件 </tag>
            
            <tag> 通知系统 </tag>
            
            <tag> Gotify </tag>
            
            <tag> 消息推送 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>GotifyNotify</title>
      <link href="/2025/01/10/10%20-%20%E5%89%AF%E6%9C%AC%20(17)/"/>
      <url>/2025/01/10/10%20-%20%E5%89%AF%E6%9C%AC%20(17)/</url>
      
        <content type="html"><![CDATA[<h1 id="GotifyNotify-ongwu通知插件"><a href="#GotifyNotify-ongwu通知插件" class="headerlink" title="GotifyNotify - ongwu通知插件"></a>GotifyNotify - ongwu通知插件</h1><h2 id="插件概述"><a href="#插件概述" class="headerlink" title="插件概述"></a>插件概述</h2><p>GotifyNotify是一个专为ongwu博客开发的通知插件，通过集成Gotify服务，为博客管理员和用户提供实时的消息推送功能。无论是新评论、新文章还是系统通知，都能及时推送到指定设备。</p><h2 id="主要功能"><a href="#主要功能" class="headerlink" title="主要功能"></a>主要功能</h2><h3 id="通知类型"><a href="#通知类型" class="headerlink" title="通知类型"></a>通知类型</h3><ul><li><strong>评论通知</strong>：新评论发布时自动推送</li><li><strong>文章通知</strong>：新文章发布时通知订阅用户</li><li><strong>系统通知</strong>：重要系统事件实时推送</li><li><strong>自定义通知</strong>：支持自定义消息内容</li></ul><h3 id="推送方式"><a href="#推送方式" class="headerlink" title="推送方式"></a>推送方式</h3><ul><li><strong>Gotify服务</strong>：通过Gotify API推送消息</li><li><strong>多设备支持</strong>：支持Android、iOS、Web等平台</li><li><strong>实时推送</strong>：毫秒级消息传递</li><li><strong>离线存储</strong>：消息持久化存储</li></ul><h2 id="技术架构"><a href="#技术架构" class="headerlink" title="技术架构"></a>技术架构</h2><h3 id="系统架构图"><a href="#系统架构图" class="headerlink" title="系统架构图"></a>系统架构图</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ongwu博客 → GotifyNotify插件 → Gotify服务器 → 客户端设备</span><br><span class="line">     ↓              ↓              ↓           ↓</span><br><span class="line">   事件触发     消息处理      消息分发     消息接收</span><br></pre></td></tr></table></figure><h3 id="核心代码实现"><a href="#核心代码实现" class="headerlink" title="核心代码实现"></a>核心代码实现</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 通知处理类</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">GotifyNotify_Handler</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$gotifyUrl</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$appToken</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$url</span>, <span class="variable">$token</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;gotifyUrl = <span class="variable">$url</span>;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;appToken = <span class="variable">$token</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 发送通知</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">sendNotification</span>(<span class="params"><span class="variable">$title</span>, <span class="variable">$message</span>, <span class="variable">$priority</span> = <span class="number">0</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable">$data</span> = <span class="keyword">array</span>(</span><br><span class="line">            <span class="string">&#x27;title&#x27;</span> =&gt; <span class="variable">$title</span>,</span><br><span class="line">            <span class="string">&#x27;message&#x27;</span> =&gt; <span class="variable">$message</span>,</span><br><span class="line">            <span class="string">&#x27;priority&#x27;</span> =&gt; <span class="variable">$priority</span></span><br><span class="line">        );</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">postToGotify</span>(<span class="variable">$data</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 推送到Gotify</span></span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">postToGotify</span>(<span class="params"><span class="variable">$data</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable">$ch</span> = <span class="title function_ invoke__">curl_init</span>();</span><br><span class="line">        <span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$ch</span>, CURLOPT_URL, <span class="variable">$this</span>-&gt;gotifyUrl . <span class="string">&#x27;/message&#x27;</span>);</span><br><span class="line">        <span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$ch</span>, CURLOPT_POST, <span class="literal">true</span>);</span><br><span class="line">        <span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$ch</span>, CURLOPT_POSTFIELDS, <span class="title function_ invoke__">json_encode</span>(<span class="variable">$data</span>));</span><br><span class="line">        <span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$ch</span>, CURLOPT_HTTPHEADER, <span class="keyword">array</span>(</span><br><span class="line">            <span class="string">&#x27;X-Gotify-Key: &#x27;</span> . <span class="variable">$this</span>-&gt;appToken,</span><br><span class="line">            <span class="string">&#x27;Content-Type: application/json&#x27;</span></span><br><span class="line">        ));</span><br><span class="line">        </span><br><span class="line">        <span class="variable">$response</span> = <span class="title function_ invoke__">curl_exec</span>(<span class="variable">$ch</span>);</span><br><span class="line">        <span class="title function_ invoke__">curl_close</span>(<span class="variable">$ch</span>);</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$response</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="安装配置"><a href="#安装配置" class="headerlink" title="安装配置"></a>安装配置</h2><h3 id="1-安装Gotify服务器"><a href="#1-安装Gotify服务器" class="headerlink" title="1. 安装Gotify服务器"></a>1. 安装Gotify服务器</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Docker安装方式</span></span><br><span class="line">docker run -p 80:80 -p 443:443 \</span><br><span class="line">  -v /var/gotify:/app/data \</span><br><span class="line">  gotify/server</span><br></pre></td></tr></table></figure><h3 id="2-配置插件"><a href="#2-配置插件" class="headerlink" title="2. 配置插件"></a>2. 配置插件</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 插件配置</span></span><br><span class="line"><span class="keyword">return</span> <span class="keyword">array</span>(</span><br><span class="line">    <span class="string">&#x27;gotify_url&#x27;</span> =&gt; <span class="string">&#x27;https://your-gotify-server.com&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;app_token&#x27;</span> =&gt; <span class="string">&#x27;your-app-token&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;enable_comments&#x27;</span> =&gt; <span class="literal">true</span>,</span><br><span class="line">    <span class="string">&#x27;enable_posts&#x27;</span> =&gt; <span class="literal">true</span>,</span><br><span class="line">    <span class="string">&#x27;enable_system&#x27;</span> =&gt; <span class="literal">true</span>,</span><br><span class="line">    <span class="string">&#x27;notification_priority&#x27;</span> =&gt; <span class="number">0</span></span><br><span class="line">);</span><br></pre></td></tr></table></figure><h3 id="3-客户端配置"><a href="#3-客户端配置" class="headerlink" title="3. 客户端配置"></a>3. 客户端配置</h3><ul><li>下载Gotify客户端应用</li><li>配置服务器地址和认证信息</li><li>设置通知偏好</li></ul><h2 id="使用场景"><a href="#使用场景" class="headerlink" title="使用场景"></a>使用场景</h2><h3 id="博客管理"><a href="#博客管理" class="headerlink" title="博客管理"></a>博客管理</h3><ul><li>新评论实时提醒</li><li>系统状态监控</li><li>安全事件通知</li></ul><h3 id="用户服务"><a href="#用户服务" class="headerlink" title="用户服务"></a>用户服务</h3><ul><li>文章更新提醒</li><li>回复通知</li><li>重要公告推送</li></ul><h2 id="性能优化"><a href="#性能优化" class="headerlink" title="性能优化"></a>性能优化</h2><h3 id="推送优化"><a href="#推送优化" class="headerlink" title="推送优化"></a>推送优化</h3><ul><li>批量消息处理</li><li>智能重试机制</li><li>消息队列缓冲</li></ul><h3 id="资源管理"><a href="#资源管理" class="headerlink" title="资源管理"></a>资源管理</h3><ul><li>连接池复用</li><li>内存使用优化</li><li>数据库查询优化</li></ul><h2 id="安全考虑"><a href="#安全考虑" class="headerlink" title="安全考虑"></a>安全考虑</h2><h3 id="认证安全"><a href="#认证安全" class="headerlink" title="认证安全"></a>认证安全</h3><ul><li>Token加密存储</li><li>HTTPS通信加密</li><li>访问权限控制</li></ul><h3 id="数据保护"><a href="#数据保护" class="headerlink" title="数据保护"></a>数据保护</h3><ul><li>敏感信息过滤</li><li>日志记录审计</li><li>异常行为监控</li></ul><h2 id="扩展功能"><a href="#扩展功能" class="headerlink" title="扩展功能"></a>扩展功能</h2><h3 id="插件扩展"><a href="#插件扩展" class="headerlink" title="插件扩展"></a>插件扩展</h3><ul><li>支持自定义通知模板</li><li>支持多种推送服务</li><li>支持条件触发规则</li></ul><h3 id="集成能力"><a href="#集成能力" class="headerlink" title="集成能力"></a>集成能力</h3><ul><li>与现有通知系统集成</li><li>支持Webhook回调</li><li>支持第三方服务集成</li></ul><h2 id="故障排除"><a href="#故障排除" class="headerlink" title="故障排除"></a>故障排除</h2><h3 id="常见问题"><a href="#常见问题" class="headerlink" title="常见问题"></a>常见问题</h3><ol><li><strong>连接失败</strong>：检查网络和服务器状态</li><li><strong>认证错误</strong>：验证Token配置</li><li><strong>推送延迟</strong>：检查服务器负载</li></ol><h3 id="调试方法"><a href="#调试方法" class="headerlink" title="调试方法"></a>调试方法</h3><ul><li>启用详细日志</li><li>检查网络连接</li><li>验证API响应</li></ul><hr><p><em>GotifyNotify让ongwu博客通知更智能、更及时！</em></p>]]></content>
      
      
      <categories>
          
          <category> tech </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ongwu插件 </tag>
            
            <tag> 通知系统 </tag>
            
            <tag> Gotify </tag>
            
            <tag> 消息推送 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>GotifyNotify</title>
      <link href="/2025/01/10/10%20-%20%E5%89%AF%E6%9C%AC%20(19)/"/>
      <url>/2025/01/10/10%20-%20%E5%89%AF%E6%9C%AC%20(19)/</url>
      
        <content type="html"><![CDATA[<h1 id="GotifyNotify-ongwu通知插件"><a href="#GotifyNotify-ongwu通知插件" class="headerlink" title="GotifyNotify - ongwu通知插件"></a>GotifyNotify - ongwu通知插件</h1><h2 id="插件概述"><a href="#插件概述" class="headerlink" title="插件概述"></a>插件概述</h2><p>GotifyNotify是一个专为ongwu博客开发的通知插件，通过集成Gotify服务，为博客管理员和用户提供实时的消息推送功能。无论是新评论、新文章还是系统通知，都能及时推送到指定设备。</p><h2 id="主要功能"><a href="#主要功能" class="headerlink" title="主要功能"></a>主要功能</h2><h3 id="通知类型"><a href="#通知类型" class="headerlink" title="通知类型"></a>通知类型</h3><ul><li><strong>评论通知</strong>：新评论发布时自动推送</li><li><strong>文章通知</strong>：新文章发布时通知订阅用户</li><li><strong>系统通知</strong>：重要系统事件实时推送</li><li><strong>自定义通知</strong>：支持自定义消息内容</li></ul><h3 id="推送方式"><a href="#推送方式" class="headerlink" title="推送方式"></a>推送方式</h3><ul><li><strong>Gotify服务</strong>：通过Gotify API推送消息</li><li><strong>多设备支持</strong>：支持Android、iOS、Web等平台</li><li><strong>实时推送</strong>：毫秒级消息传递</li><li><strong>离线存储</strong>：消息持久化存储</li></ul><h2 id="技术架构"><a href="#技术架构" class="headerlink" title="技术架构"></a>技术架构</h2><h3 id="系统架构图"><a href="#系统架构图" class="headerlink" title="系统架构图"></a>系统架构图</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ongwu博客 → GotifyNotify插件 → Gotify服务器 → 客户端设备</span><br><span class="line">     ↓              ↓              ↓           ↓</span><br><span class="line">   事件触发     消息处理      消息分发     消息接收</span><br></pre></td></tr></table></figure><h3 id="核心代码实现"><a href="#核心代码实现" class="headerlink" title="核心代码实现"></a>核心代码实现</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 通知处理类</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">GotifyNotify_Handler</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$gotifyUrl</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$appToken</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$url</span>, <span class="variable">$token</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;gotifyUrl = <span class="variable">$url</span>;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;appToken = <span class="variable">$token</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 发送通知</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">sendNotification</span>(<span class="params"><span class="variable">$title</span>, <span class="variable">$message</span>, <span class="variable">$priority</span> = <span class="number">0</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable">$data</span> = <span class="keyword">array</span>(</span><br><span class="line">            <span class="string">&#x27;title&#x27;</span> =&gt; <span class="variable">$title</span>,</span><br><span class="line">            <span class="string">&#x27;message&#x27;</span> =&gt; <span class="variable">$message</span>,</span><br><span class="line">            <span class="string">&#x27;priority&#x27;</span> =&gt; <span class="variable">$priority</span></span><br><span class="line">        );</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">postToGotify</span>(<span class="variable">$data</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 推送到Gotify</span></span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">postToGotify</span>(<span class="params"><span class="variable">$data</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable">$ch</span> = <span class="title function_ invoke__">curl_init</span>();</span><br><span class="line">        <span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$ch</span>, CURLOPT_URL, <span class="variable">$this</span>-&gt;gotifyUrl . <span class="string">&#x27;/message&#x27;</span>);</span><br><span class="line">        <span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$ch</span>, CURLOPT_POST, <span class="literal">true</span>);</span><br><span class="line">        <span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$ch</span>, CURLOPT_POSTFIELDS, <span class="title function_ invoke__">json_encode</span>(<span class="variable">$data</span>));</span><br><span class="line">        <span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$ch</span>, CURLOPT_HTTPHEADER, <span class="keyword">array</span>(</span><br><span class="line">            <span class="string">&#x27;X-Gotify-Key: &#x27;</span> . <span class="variable">$this</span>-&gt;appToken,</span><br><span class="line">            <span class="string">&#x27;Content-Type: application/json&#x27;</span></span><br><span class="line">        ));</span><br><span class="line">        </span><br><span class="line">        <span class="variable">$response</span> = <span class="title function_ invoke__">curl_exec</span>(<span class="variable">$ch</span>);</span><br><span class="line">        <span class="title function_ invoke__">curl_close</span>(<span class="variable">$ch</span>);</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$response</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="安装配置"><a href="#安装配置" class="headerlink" title="安装配置"></a>安装配置</h2><h3 id="1-安装Gotify服务器"><a href="#1-安装Gotify服务器" class="headerlink" title="1. 安装Gotify服务器"></a>1. 安装Gotify服务器</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Docker安装方式</span></span><br><span class="line">docker run -p 80:80 -p 443:443 \</span><br><span class="line">  -v /var/gotify:/app/data \</span><br><span class="line">  gotify/server</span><br></pre></td></tr></table></figure><h3 id="2-配置插件"><a href="#2-配置插件" class="headerlink" title="2. 配置插件"></a>2. 配置插件</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 插件配置</span></span><br><span class="line"><span class="keyword">return</span> <span class="keyword">array</span>(</span><br><span class="line">    <span class="string">&#x27;gotify_url&#x27;</span> =&gt; <span class="string">&#x27;https://your-gotify-server.com&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;app_token&#x27;</span> =&gt; <span class="string">&#x27;your-app-token&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;enable_comments&#x27;</span> =&gt; <span class="literal">true</span>,</span><br><span class="line">    <span class="string">&#x27;enable_posts&#x27;</span> =&gt; <span class="literal">true</span>,</span><br><span class="line">    <span class="string">&#x27;enable_system&#x27;</span> =&gt; <span class="literal">true</span>,</span><br><span class="line">    <span class="string">&#x27;notification_priority&#x27;</span> =&gt; <span class="number">0</span></span><br><span class="line">);</span><br></pre></td></tr></table></figure><h3 id="3-客户端配置"><a href="#3-客户端配置" class="headerlink" title="3. 客户端配置"></a>3. 客户端配置</h3><ul><li>下载Gotify客户端应用</li><li>配置服务器地址和认证信息</li><li>设置通知偏好</li></ul><h2 id="使用场景"><a href="#使用场景" class="headerlink" title="使用场景"></a>使用场景</h2><h3 id="博客管理"><a href="#博客管理" class="headerlink" title="博客管理"></a>博客管理</h3><ul><li>新评论实时提醒</li><li>系统状态监控</li><li>安全事件通知</li></ul><h3 id="用户服务"><a href="#用户服务" class="headerlink" title="用户服务"></a>用户服务</h3><ul><li>文章更新提醒</li><li>回复通知</li><li>重要公告推送</li></ul><h2 id="性能优化"><a href="#性能优化" class="headerlink" title="性能优化"></a>性能优化</h2><h3 id="推送优化"><a href="#推送优化" class="headerlink" title="推送优化"></a>推送优化</h3><ul><li>批量消息处理</li><li>智能重试机制</li><li>消息队列缓冲</li></ul><h3 id="资源管理"><a href="#资源管理" class="headerlink" title="资源管理"></a>资源管理</h3><ul><li>连接池复用</li><li>内存使用优化</li><li>数据库查询优化</li></ul><h2 id="安全考虑"><a href="#安全考虑" class="headerlink" title="安全考虑"></a>安全考虑</h2><h3 id="认证安全"><a href="#认证安全" class="headerlink" title="认证安全"></a>认证安全</h3><ul><li>Token加密存储</li><li>HTTPS通信加密</li><li>访问权限控制</li></ul><h3 id="数据保护"><a href="#数据保护" class="headerlink" title="数据保护"></a>数据保护</h3><ul><li>敏感信息过滤</li><li>日志记录审计</li><li>异常行为监控</li></ul><h2 id="扩展功能"><a href="#扩展功能" class="headerlink" title="扩展功能"></a>扩展功能</h2><h3 id="插件扩展"><a href="#插件扩展" class="headerlink" title="插件扩展"></a>插件扩展</h3><ul><li>支持自定义通知模板</li><li>支持多种推送服务</li><li>支持条件触发规则</li></ul><h3 id="集成能力"><a href="#集成能力" class="headerlink" title="集成能力"></a>集成能力</h3><ul><li>与现有通知系统集成</li><li>支持Webhook回调</li><li>支持第三方服务集成</li></ul><h2 id="故障排除"><a href="#故障排除" class="headerlink" title="故障排除"></a>故障排除</h2><h3 id="常见问题"><a href="#常见问题" class="headerlink" title="常见问题"></a>常见问题</h3><ol><li><strong>连接失败</strong>：检查网络和服务器状态</li><li><strong>认证错误</strong>：验证Token配置</li><li><strong>推送延迟</strong>：检查服务器负载</li></ol><h3 id="调试方法"><a href="#调试方法" class="headerlink" title="调试方法"></a>调试方法</h3><ul><li>启用详细日志</li><li>检查网络连接</li><li>验证API响应</li></ul><hr><p><em>GotifyNotify让ongwu博客通知更智能、更及时！</em></p>]]></content>
      
      
      <categories>
          
          <category> tech </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ongwu插件 </tag>
            
            <tag> 通知系统 </tag>
            
            <tag> Gotify </tag>
            
            <tag> 消息推送 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>GotifyNotify</title>
      <link href="/2025/01/10/10%20-%20%E5%89%AF%E6%9C%AC%20(2)/"/>
      <url>/2025/01/10/10%20-%20%E5%89%AF%E6%9C%AC%20(2)/</url>
      
        <content type="html"><![CDATA[<h1 id="GotifyNotify-ongwu通知插件"><a href="#GotifyNotify-ongwu通知插件" class="headerlink" title="GotifyNotify - ongwu通知插件"></a>GotifyNotify - ongwu通知插件</h1><h2 id="插件概述"><a href="#插件概述" class="headerlink" title="插件概述"></a>插件概述</h2><p>GotifyNotify是一个专为ongwu博客开发的通知插件，通过集成Gotify服务，为博客管理员和用户提供实时的消息推送功能。无论是新评论、新文章还是系统通知，都能及时推送到指定设备。</p><h2 id="主要功能"><a href="#主要功能" class="headerlink" title="主要功能"></a>主要功能</h2><h3 id="通知类型"><a href="#通知类型" class="headerlink" title="通知类型"></a>通知类型</h3><ul><li><strong>评论通知</strong>：新评论发布时自动推送</li><li><strong>文章通知</strong>：新文章发布时通知订阅用户</li><li><strong>系统通知</strong>：重要系统事件实时推送</li><li><strong>自定义通知</strong>：支持自定义消息内容</li></ul><h3 id="推送方式"><a href="#推送方式" class="headerlink" title="推送方式"></a>推送方式</h3><ul><li><strong>Gotify服务</strong>：通过Gotify API推送消息</li><li><strong>多设备支持</strong>：支持Android、iOS、Web等平台</li><li><strong>实时推送</strong>：毫秒级消息传递</li><li><strong>离线存储</strong>：消息持久化存储</li></ul><h2 id="技术架构"><a href="#技术架构" class="headerlink" title="技术架构"></a>技术架构</h2><h3 id="系统架构图"><a href="#系统架构图" class="headerlink" title="系统架构图"></a>系统架构图</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ongwu博客 → GotifyNotify插件 → Gotify服务器 → 客户端设备</span><br><span class="line">     ↓              ↓              ↓           ↓</span><br><span class="line">   事件触发     消息处理      消息分发     消息接收</span><br></pre></td></tr></table></figure><h3 id="核心代码实现"><a href="#核心代码实现" class="headerlink" title="核心代码实现"></a>核心代码实现</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 通知处理类</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">GotifyNotify_Handler</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$gotifyUrl</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$appToken</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$url</span>, <span class="variable">$token</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;gotifyUrl = <span class="variable">$url</span>;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;appToken = <span class="variable">$token</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 发送通知</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">sendNotification</span>(<span class="params"><span class="variable">$title</span>, <span class="variable">$message</span>, <span class="variable">$priority</span> = <span class="number">0</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable">$data</span> = <span class="keyword">array</span>(</span><br><span class="line">            <span class="string">&#x27;title&#x27;</span> =&gt; <span class="variable">$title</span>,</span><br><span class="line">            <span class="string">&#x27;message&#x27;</span> =&gt; <span class="variable">$message</span>,</span><br><span class="line">            <span class="string">&#x27;priority&#x27;</span> =&gt; <span class="variable">$priority</span></span><br><span class="line">        );</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">postToGotify</span>(<span class="variable">$data</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 推送到Gotify</span></span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">postToGotify</span>(<span class="params"><span class="variable">$data</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable">$ch</span> = <span class="title function_ invoke__">curl_init</span>();</span><br><span class="line">        <span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$ch</span>, CURLOPT_URL, <span class="variable">$this</span>-&gt;gotifyUrl . <span class="string">&#x27;/message&#x27;</span>);</span><br><span class="line">        <span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$ch</span>, CURLOPT_POST, <span class="literal">true</span>);</span><br><span class="line">        <span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$ch</span>, CURLOPT_POSTFIELDS, <span class="title function_ invoke__">json_encode</span>(<span class="variable">$data</span>));</span><br><span class="line">        <span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$ch</span>, CURLOPT_HTTPHEADER, <span class="keyword">array</span>(</span><br><span class="line">            <span class="string">&#x27;X-Gotify-Key: &#x27;</span> . <span class="variable">$this</span>-&gt;appToken,</span><br><span class="line">            <span class="string">&#x27;Content-Type: application/json&#x27;</span></span><br><span class="line">        ));</span><br><span class="line">        </span><br><span class="line">        <span class="variable">$response</span> = <span class="title function_ invoke__">curl_exec</span>(<span class="variable">$ch</span>);</span><br><span class="line">        <span class="title function_ invoke__">curl_close</span>(<span class="variable">$ch</span>);</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$response</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="安装配置"><a href="#安装配置" class="headerlink" title="安装配置"></a>安装配置</h2><h3 id="1-安装Gotify服务器"><a href="#1-安装Gotify服务器" class="headerlink" title="1. 安装Gotify服务器"></a>1. 安装Gotify服务器</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Docker安装方式</span></span><br><span class="line">docker run -p 80:80 -p 443:443 \</span><br><span class="line">  -v /var/gotify:/app/data \</span><br><span class="line">  gotify/server</span><br></pre></td></tr></table></figure><h3 id="2-配置插件"><a href="#2-配置插件" class="headerlink" title="2. 配置插件"></a>2. 配置插件</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 插件配置</span></span><br><span class="line"><span class="keyword">return</span> <span class="keyword">array</span>(</span><br><span class="line">    <span class="string">&#x27;gotify_url&#x27;</span> =&gt; <span class="string">&#x27;https://your-gotify-server.com&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;app_token&#x27;</span> =&gt; <span class="string">&#x27;your-app-token&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;enable_comments&#x27;</span> =&gt; <span class="literal">true</span>,</span><br><span class="line">    <span class="string">&#x27;enable_posts&#x27;</span> =&gt; <span class="literal">true</span>,</span><br><span class="line">    <span class="string">&#x27;enable_system&#x27;</span> =&gt; <span class="literal">true</span>,</span><br><span class="line">    <span class="string">&#x27;notification_priority&#x27;</span> =&gt; <span class="number">0</span></span><br><span class="line">);</span><br></pre></td></tr></table></figure><h3 id="3-客户端配置"><a href="#3-客户端配置" class="headerlink" title="3. 客户端配置"></a>3. 客户端配置</h3><ul><li>下载Gotify客户端应用</li><li>配置服务器地址和认证信息</li><li>设置通知偏好</li></ul><h2 id="使用场景"><a href="#使用场景" class="headerlink" title="使用场景"></a>使用场景</h2><h3 id="博客管理"><a href="#博客管理" class="headerlink" title="博客管理"></a>博客管理</h3><ul><li>新评论实时提醒</li><li>系统状态监控</li><li>安全事件通知</li></ul><h3 id="用户服务"><a href="#用户服务" class="headerlink" title="用户服务"></a>用户服务</h3><ul><li>文章更新提醒</li><li>回复通知</li><li>重要公告推送</li></ul><h2 id="性能优化"><a href="#性能优化" class="headerlink" title="性能优化"></a>性能优化</h2><h3 id="推送优化"><a href="#推送优化" class="headerlink" title="推送优化"></a>推送优化</h3><ul><li>批量消息处理</li><li>智能重试机制</li><li>消息队列缓冲</li></ul><h3 id="资源管理"><a href="#资源管理" class="headerlink" title="资源管理"></a>资源管理</h3><ul><li>连接池复用</li><li>内存使用优化</li><li>数据库查询优化</li></ul><h2 id="安全考虑"><a href="#安全考虑" class="headerlink" title="安全考虑"></a>安全考虑</h2><h3 id="认证安全"><a href="#认证安全" class="headerlink" title="认证安全"></a>认证安全</h3><ul><li>Token加密存储</li><li>HTTPS通信加密</li><li>访问权限控制</li></ul><h3 id="数据保护"><a href="#数据保护" class="headerlink" title="数据保护"></a>数据保护</h3><ul><li>敏感信息过滤</li><li>日志记录审计</li><li>异常行为监控</li></ul><h2 id="扩展功能"><a href="#扩展功能" class="headerlink" title="扩展功能"></a>扩展功能</h2><h3 id="插件扩展"><a href="#插件扩展" class="headerlink" title="插件扩展"></a>插件扩展</h3><ul><li>支持自定义通知模板</li><li>支持多种推送服务</li><li>支持条件触发规则</li></ul><h3 id="集成能力"><a href="#集成能力" class="headerlink" title="集成能力"></a>集成能力</h3><ul><li>与现有通知系统集成</li><li>支持Webhook回调</li><li>支持第三方服务集成</li></ul><h2 id="故障排除"><a href="#故障排除" class="headerlink" title="故障排除"></a>故障排除</h2><h3 id="常见问题"><a href="#常见问题" class="headerlink" title="常见问题"></a>常见问题</h3><ol><li><strong>连接失败</strong>：检查网络和服务器状态</li><li><strong>认证错误</strong>：验证Token配置</li><li><strong>推送延迟</strong>：检查服务器负载</li></ol><h3 id="调试方法"><a href="#调试方法" class="headerlink" title="调试方法"></a>调试方法</h3><ul><li>启用详细日志</li><li>检查网络连接</li><li>验证API响应</li></ul><hr><p><em>GotifyNotify让ongwu博客通知更智能、更及时！</em></p>]]></content>
      
      
      <categories>
          
          <category> tech </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ongwu插件 </tag>
            
            <tag> 通知系统 </tag>
            
            <tag> Gotify </tag>
            
            <tag> 消息推送 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>GotifyNotify</title>
      <link href="/2025/01/10/10%20-%20%E5%89%AF%E6%9C%AC%20(20)/"/>
      <url>/2025/01/10/10%20-%20%E5%89%AF%E6%9C%AC%20(20)/</url>
      
        <content type="html"><![CDATA[<h1 id="GotifyNotify-ongwu通知插件"><a href="#GotifyNotify-ongwu通知插件" class="headerlink" title="GotifyNotify - ongwu通知插件"></a>GotifyNotify - ongwu通知插件</h1><h2 id="插件概述"><a href="#插件概述" class="headerlink" title="插件概述"></a>插件概述</h2><p>GotifyNotify是一个专为ongwu博客开发的通知插件，通过集成Gotify服务，为博客管理员和用户提供实时的消息推送功能。无论是新评论、新文章还是系统通知，都能及时推送到指定设备。</p><h2 id="主要功能"><a href="#主要功能" class="headerlink" title="主要功能"></a>主要功能</h2><h3 id="通知类型"><a href="#通知类型" class="headerlink" title="通知类型"></a>通知类型</h3><ul><li><strong>评论通知</strong>：新评论发布时自动推送</li><li><strong>文章通知</strong>：新文章发布时通知订阅用户</li><li><strong>系统通知</strong>：重要系统事件实时推送</li><li><strong>自定义通知</strong>：支持自定义消息内容</li></ul><h3 id="推送方式"><a href="#推送方式" class="headerlink" title="推送方式"></a>推送方式</h3><ul><li><strong>Gotify服务</strong>：通过Gotify API推送消息</li><li><strong>多设备支持</strong>：支持Android、iOS、Web等平台</li><li><strong>实时推送</strong>：毫秒级消息传递</li><li><strong>离线存储</strong>：消息持久化存储</li></ul><h2 id="技术架构"><a href="#技术架构" class="headerlink" title="技术架构"></a>技术架构</h2><h3 id="系统架构图"><a href="#系统架构图" class="headerlink" title="系统架构图"></a>系统架构图</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ongwu博客 → GotifyNotify插件 → Gotify服务器 → 客户端设备</span><br><span class="line">     ↓              ↓              ↓           ↓</span><br><span class="line">   事件触发     消息处理      消息分发     消息接收</span><br></pre></td></tr></table></figure><h3 id="核心代码实现"><a href="#核心代码实现" class="headerlink" title="核心代码实现"></a>核心代码实现</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 通知处理类</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">GotifyNotify_Handler</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$gotifyUrl</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$appToken</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$url</span>, <span class="variable">$token</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;gotifyUrl = <span class="variable">$url</span>;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;appToken = <span class="variable">$token</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 发送通知</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">sendNotification</span>(<span class="params"><span class="variable">$title</span>, <span class="variable">$message</span>, <span class="variable">$priority</span> = <span class="number">0</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable">$data</span> = <span class="keyword">array</span>(</span><br><span class="line">            <span class="string">&#x27;title&#x27;</span> =&gt; <span class="variable">$title</span>,</span><br><span class="line">            <span class="string">&#x27;message&#x27;</span> =&gt; <span class="variable">$message</span>,</span><br><span class="line">            <span class="string">&#x27;priority&#x27;</span> =&gt; <span class="variable">$priority</span></span><br><span class="line">        );</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">postToGotify</span>(<span class="variable">$data</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 推送到Gotify</span></span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">postToGotify</span>(<span class="params"><span class="variable">$data</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable">$ch</span> = <span class="title function_ invoke__">curl_init</span>();</span><br><span class="line">        <span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$ch</span>, CURLOPT_URL, <span class="variable">$this</span>-&gt;gotifyUrl . <span class="string">&#x27;/message&#x27;</span>);</span><br><span class="line">        <span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$ch</span>, CURLOPT_POST, <span class="literal">true</span>);</span><br><span class="line">        <span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$ch</span>, CURLOPT_POSTFIELDS, <span class="title function_ invoke__">json_encode</span>(<span class="variable">$data</span>));</span><br><span class="line">        <span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$ch</span>, CURLOPT_HTTPHEADER, <span class="keyword">array</span>(</span><br><span class="line">            <span class="string">&#x27;X-Gotify-Key: &#x27;</span> . <span class="variable">$this</span>-&gt;appToken,</span><br><span class="line">            <span class="string">&#x27;Content-Type: application/json&#x27;</span></span><br><span class="line">        ));</span><br><span class="line">        </span><br><span class="line">        <span class="variable">$response</span> = <span class="title function_ invoke__">curl_exec</span>(<span class="variable">$ch</span>);</span><br><span class="line">        <span class="title function_ invoke__">curl_close</span>(<span class="variable">$ch</span>);</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$response</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="安装配置"><a href="#安装配置" class="headerlink" title="安装配置"></a>安装配置</h2><h3 id="1-安装Gotify服务器"><a href="#1-安装Gotify服务器" class="headerlink" title="1. 安装Gotify服务器"></a>1. 安装Gotify服务器</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Docker安装方式</span></span><br><span class="line">docker run -p 80:80 -p 443:443 \</span><br><span class="line">  -v /var/gotify:/app/data \</span><br><span class="line">  gotify/server</span><br></pre></td></tr></table></figure><h3 id="2-配置插件"><a href="#2-配置插件" class="headerlink" title="2. 配置插件"></a>2. 配置插件</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 插件配置</span></span><br><span class="line"><span class="keyword">return</span> <span class="keyword">array</span>(</span><br><span class="line">    <span class="string">&#x27;gotify_url&#x27;</span> =&gt; <span class="string">&#x27;https://your-gotify-server.com&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;app_token&#x27;</span> =&gt; <span class="string">&#x27;your-app-token&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;enable_comments&#x27;</span> =&gt; <span class="literal">true</span>,</span><br><span class="line">    <span class="string">&#x27;enable_posts&#x27;</span> =&gt; <span class="literal">true</span>,</span><br><span class="line">    <span class="string">&#x27;enable_system&#x27;</span> =&gt; <span class="literal">true</span>,</span><br><span class="line">    <span class="string">&#x27;notification_priority&#x27;</span> =&gt; <span class="number">0</span></span><br><span class="line">);</span><br></pre></td></tr></table></figure><h3 id="3-客户端配置"><a href="#3-客户端配置" class="headerlink" title="3. 客户端配置"></a>3. 客户端配置</h3><ul><li>下载Gotify客户端应用</li><li>配置服务器地址和认证信息</li><li>设置通知偏好</li></ul><h2 id="使用场景"><a href="#使用场景" class="headerlink" title="使用场景"></a>使用场景</h2><h3 id="博客管理"><a href="#博客管理" class="headerlink" title="博客管理"></a>博客管理</h3><ul><li>新评论实时提醒</li><li>系统状态监控</li><li>安全事件通知</li></ul><h3 id="用户服务"><a href="#用户服务" class="headerlink" title="用户服务"></a>用户服务</h3><ul><li>文章更新提醒</li><li>回复通知</li><li>重要公告推送</li></ul><h2 id="性能优化"><a href="#性能优化" class="headerlink" title="性能优化"></a>性能优化</h2><h3 id="推送优化"><a href="#推送优化" class="headerlink" title="推送优化"></a>推送优化</h3><ul><li>批量消息处理</li><li>智能重试机制</li><li>消息队列缓冲</li></ul><h3 id="资源管理"><a href="#资源管理" class="headerlink" title="资源管理"></a>资源管理</h3><ul><li>连接池复用</li><li>内存使用优化</li><li>数据库查询优化</li></ul><h2 id="安全考虑"><a href="#安全考虑" class="headerlink" title="安全考虑"></a>安全考虑</h2><h3 id="认证安全"><a href="#认证安全" class="headerlink" title="认证安全"></a>认证安全</h3><ul><li>Token加密存储</li><li>HTTPS通信加密</li><li>访问权限控制</li></ul><h3 id="数据保护"><a href="#数据保护" class="headerlink" title="数据保护"></a>数据保护</h3><ul><li>敏感信息过滤</li><li>日志记录审计</li><li>异常行为监控</li></ul><h2 id="扩展功能"><a href="#扩展功能" class="headerlink" title="扩展功能"></a>扩展功能</h2><h3 id="插件扩展"><a href="#插件扩展" class="headerlink" title="插件扩展"></a>插件扩展</h3><ul><li>支持自定义通知模板</li><li>支持多种推送服务</li><li>支持条件触发规则</li></ul><h3 id="集成能力"><a href="#集成能力" class="headerlink" title="集成能力"></a>集成能力</h3><ul><li>与现有通知系统集成</li><li>支持Webhook回调</li><li>支持第三方服务集成</li></ul><h2 id="故障排除"><a href="#故障排除" class="headerlink" title="故障排除"></a>故障排除</h2><h3 id="常见问题"><a href="#常见问题" class="headerlink" title="常见问题"></a>常见问题</h3><ol><li><strong>连接失败</strong>：检查网络和服务器状态</li><li><strong>认证错误</strong>：验证Token配置</li><li><strong>推送延迟</strong>：检查服务器负载</li></ol><h3 id="调试方法"><a href="#调试方法" class="headerlink" title="调试方法"></a>调试方法</h3><ul><li>启用详细日志</li><li>检查网络连接</li><li>验证API响应</li></ul><hr><p><em>GotifyNotify让ongwu博客通知更智能、更及时！</em></p>]]></content>
      
      
      <categories>
          
          <category> tech </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ongwu插件 </tag>
            
            <tag> 通知系统 </tag>
            
            <tag> Gotify </tag>
            
            <tag> 消息推送 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>GotifyNotify</title>
      <link href="/2025/01/10/10%20-%20%E5%89%AF%E6%9C%AC%20(18)/"/>
      <url>/2025/01/10/10%20-%20%E5%89%AF%E6%9C%AC%20(18)/</url>
      
        <content type="html"><![CDATA[<h1 id="GotifyNotify-ongwu通知插件"><a href="#GotifyNotify-ongwu通知插件" class="headerlink" title="GotifyNotify - ongwu通知插件"></a>GotifyNotify - ongwu通知插件</h1><h2 id="插件概述"><a href="#插件概述" class="headerlink" title="插件概述"></a>插件概述</h2><p>GotifyNotify是一个专为ongwu博客开发的通知插件，通过集成Gotify服务，为博客管理员和用户提供实时的消息推送功能。无论是新评论、新文章还是系统通知，都能及时推送到指定设备。</p><h2 id="主要功能"><a href="#主要功能" class="headerlink" title="主要功能"></a>主要功能</h2><h3 id="通知类型"><a href="#通知类型" class="headerlink" title="通知类型"></a>通知类型</h3><ul><li><strong>评论通知</strong>：新评论发布时自动推送</li><li><strong>文章通知</strong>：新文章发布时通知订阅用户</li><li><strong>系统通知</strong>：重要系统事件实时推送</li><li><strong>自定义通知</strong>：支持自定义消息内容</li></ul><h3 id="推送方式"><a href="#推送方式" class="headerlink" title="推送方式"></a>推送方式</h3><ul><li><strong>Gotify服务</strong>：通过Gotify API推送消息</li><li><strong>多设备支持</strong>：支持Android、iOS、Web等平台</li><li><strong>实时推送</strong>：毫秒级消息传递</li><li><strong>离线存储</strong>：消息持久化存储</li></ul><h2 id="技术架构"><a href="#技术架构" class="headerlink" title="技术架构"></a>技术架构</h2><h3 id="系统架构图"><a href="#系统架构图" class="headerlink" title="系统架构图"></a>系统架构图</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ongwu博客 → GotifyNotify插件 → Gotify服务器 → 客户端设备</span><br><span class="line">     ↓              ↓              ↓           ↓</span><br><span class="line">   事件触发     消息处理      消息分发     消息接收</span><br></pre></td></tr></table></figure><h3 id="核心代码实现"><a href="#核心代码实现" class="headerlink" title="核心代码实现"></a>核心代码实现</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 通知处理类</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">GotifyNotify_Handler</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$gotifyUrl</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$appToken</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$url</span>, <span class="variable">$token</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;gotifyUrl = <span class="variable">$url</span>;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;appToken = <span class="variable">$token</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 发送通知</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">sendNotification</span>(<span class="params"><span class="variable">$title</span>, <span class="variable">$message</span>, <span class="variable">$priority</span> = <span class="number">0</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable">$data</span> = <span class="keyword">array</span>(</span><br><span class="line">            <span class="string">&#x27;title&#x27;</span> =&gt; <span class="variable">$title</span>,</span><br><span class="line">            <span class="string">&#x27;message&#x27;</span> =&gt; <span class="variable">$message</span>,</span><br><span class="line">            <span class="string">&#x27;priority&#x27;</span> =&gt; <span class="variable">$priority</span></span><br><span class="line">        );</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">postToGotify</span>(<span class="variable">$data</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 推送到Gotify</span></span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">postToGotify</span>(<span class="params"><span class="variable">$data</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable">$ch</span> = <span class="title function_ invoke__">curl_init</span>();</span><br><span class="line">        <span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$ch</span>, CURLOPT_URL, <span class="variable">$this</span>-&gt;gotifyUrl . <span class="string">&#x27;/message&#x27;</span>);</span><br><span class="line">        <span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$ch</span>, CURLOPT_POST, <span class="literal">true</span>);</span><br><span class="line">        <span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$ch</span>, CURLOPT_POSTFIELDS, <span class="title function_ invoke__">json_encode</span>(<span class="variable">$data</span>));</span><br><span class="line">        <span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$ch</span>, CURLOPT_HTTPHEADER, <span class="keyword">array</span>(</span><br><span class="line">            <span class="string">&#x27;X-Gotify-Key: &#x27;</span> . <span class="variable">$this</span>-&gt;appToken,</span><br><span class="line">            <span class="string">&#x27;Content-Type: application/json&#x27;</span></span><br><span class="line">        ));</span><br><span class="line">        </span><br><span class="line">        <span class="variable">$response</span> = <span class="title function_ invoke__">curl_exec</span>(<span class="variable">$ch</span>);</span><br><span class="line">        <span class="title function_ invoke__">curl_close</span>(<span class="variable">$ch</span>);</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$response</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="安装配置"><a href="#安装配置" class="headerlink" title="安装配置"></a>安装配置</h2><h3 id="1-安装Gotify服务器"><a href="#1-安装Gotify服务器" class="headerlink" title="1. 安装Gotify服务器"></a>1. 安装Gotify服务器</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Docker安装方式</span></span><br><span class="line">docker run -p 80:80 -p 443:443 \</span><br><span class="line">  -v /var/gotify:/app/data \</span><br><span class="line">  gotify/server</span><br></pre></td></tr></table></figure><h3 id="2-配置插件"><a href="#2-配置插件" class="headerlink" title="2. 配置插件"></a>2. 配置插件</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 插件配置</span></span><br><span class="line"><span class="keyword">return</span> <span class="keyword">array</span>(</span><br><span class="line">    <span class="string">&#x27;gotify_url&#x27;</span> =&gt; <span class="string">&#x27;https://your-gotify-server.com&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;app_token&#x27;</span> =&gt; <span class="string">&#x27;your-app-token&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;enable_comments&#x27;</span> =&gt; <span class="literal">true</span>,</span><br><span class="line">    <span class="string">&#x27;enable_posts&#x27;</span> =&gt; <span class="literal">true</span>,</span><br><span class="line">    <span class="string">&#x27;enable_system&#x27;</span> =&gt; <span class="literal">true</span>,</span><br><span class="line">    <span class="string">&#x27;notification_priority&#x27;</span> =&gt; <span class="number">0</span></span><br><span class="line">);</span><br></pre></td></tr></table></figure><h3 id="3-客户端配置"><a href="#3-客户端配置" class="headerlink" title="3. 客户端配置"></a>3. 客户端配置</h3><ul><li>下载Gotify客户端应用</li><li>配置服务器地址和认证信息</li><li>设置通知偏好</li></ul><h2 id="使用场景"><a href="#使用场景" class="headerlink" title="使用场景"></a>使用场景</h2><h3 id="博客管理"><a href="#博客管理" class="headerlink" title="博客管理"></a>博客管理</h3><ul><li>新评论实时提醒</li><li>系统状态监控</li><li>安全事件通知</li></ul><h3 id="用户服务"><a href="#用户服务" class="headerlink" title="用户服务"></a>用户服务</h3><ul><li>文章更新提醒</li><li>回复通知</li><li>重要公告推送</li></ul><h2 id="性能优化"><a href="#性能优化" class="headerlink" title="性能优化"></a>性能优化</h2><h3 id="推送优化"><a href="#推送优化" class="headerlink" title="推送优化"></a>推送优化</h3><ul><li>批量消息处理</li><li>智能重试机制</li><li>消息队列缓冲</li></ul><h3 id="资源管理"><a href="#资源管理" class="headerlink" title="资源管理"></a>资源管理</h3><ul><li>连接池复用</li><li>内存使用优化</li><li>数据库查询优化</li></ul><h2 id="安全考虑"><a href="#安全考虑" class="headerlink" title="安全考虑"></a>安全考虑</h2><h3 id="认证安全"><a href="#认证安全" class="headerlink" title="认证安全"></a>认证安全</h3><ul><li>Token加密存储</li><li>HTTPS通信加密</li><li>访问权限控制</li></ul><h3 id="数据保护"><a href="#数据保护" class="headerlink" title="数据保护"></a>数据保护</h3><ul><li>敏感信息过滤</li><li>日志记录审计</li><li>异常行为监控</li></ul><h2 id="扩展功能"><a href="#扩展功能" class="headerlink" title="扩展功能"></a>扩展功能</h2><h3 id="插件扩展"><a href="#插件扩展" class="headerlink" title="插件扩展"></a>插件扩展</h3><ul><li>支持自定义通知模板</li><li>支持多种推送服务</li><li>支持条件触发规则</li></ul><h3 id="集成能力"><a href="#集成能力" class="headerlink" title="集成能力"></a>集成能力</h3><ul><li>与现有通知系统集成</li><li>支持Webhook回调</li><li>支持第三方服务集成</li></ul><h2 id="故障排除"><a href="#故障排除" class="headerlink" title="故障排除"></a>故障排除</h2><h3 id="常见问题"><a href="#常见问题" class="headerlink" title="常见问题"></a>常见问题</h3><ol><li><strong>连接失败</strong>：检查网络和服务器状态</li><li><strong>认证错误</strong>：验证Token配置</li><li><strong>推送延迟</strong>：检查服务器负载</li></ol><h3 id="调试方法"><a href="#调试方法" class="headerlink" title="调试方法"></a>调试方法</h3><ul><li>启用详细日志</li><li>检查网络连接</li><li>验证API响应</li></ul><hr><p><em>GotifyNotify让ongwu博客通知更智能、更及时！</em></p>]]></content>
      
      
      <categories>
          
          <category> tech </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ongwu插件 </tag>
            
            <tag> 通知系统 </tag>
            
            <tag> Gotify </tag>
            
            <tag> 消息推送 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>GotifyNotify</title>
      <link href="/2025/01/10/10%20-%20%E5%89%AF%E6%9C%AC%20(21)/"/>
      <url>/2025/01/10/10%20-%20%E5%89%AF%E6%9C%AC%20(21)/</url>
      
        <content type="html"><![CDATA[<h1 id="GotifyNotify-ongwu通知插件"><a href="#GotifyNotify-ongwu通知插件" class="headerlink" title="GotifyNotify - ongwu通知插件"></a>GotifyNotify - ongwu通知插件</h1><h2 id="插件概述"><a href="#插件概述" class="headerlink" title="插件概述"></a>插件概述</h2><p>GotifyNotify是一个专为ongwu博客开发的通知插件，通过集成Gotify服务，为博客管理员和用户提供实时的消息推送功能。无论是新评论、新文章还是系统通知，都能及时推送到指定设备。</p><h2 id="主要功能"><a href="#主要功能" class="headerlink" title="主要功能"></a>主要功能</h2><h3 id="通知类型"><a href="#通知类型" class="headerlink" title="通知类型"></a>通知类型</h3><ul><li><strong>评论通知</strong>：新评论发布时自动推送</li><li><strong>文章通知</strong>：新文章发布时通知订阅用户</li><li><strong>系统通知</strong>：重要系统事件实时推送</li><li><strong>自定义通知</strong>：支持自定义消息内容</li></ul><h3 id="推送方式"><a href="#推送方式" class="headerlink" title="推送方式"></a>推送方式</h3><ul><li><strong>Gotify服务</strong>：通过Gotify API推送消息</li><li><strong>多设备支持</strong>：支持Android、iOS、Web等平台</li><li><strong>实时推送</strong>：毫秒级消息传递</li><li><strong>离线存储</strong>：消息持久化存储</li></ul><h2 id="技术架构"><a href="#技术架构" class="headerlink" title="技术架构"></a>技术架构</h2><h3 id="系统架构图"><a href="#系统架构图" class="headerlink" title="系统架构图"></a>系统架构图</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ongwu博客 → GotifyNotify插件 → Gotify服务器 → 客户端设备</span><br><span class="line">     ↓              ↓              ↓           ↓</span><br><span class="line">   事件触发     消息处理      消息分发     消息接收</span><br></pre></td></tr></table></figure><h3 id="核心代码实现"><a href="#核心代码实现" class="headerlink" title="核心代码实现"></a>核心代码实现</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 通知处理类</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">GotifyNotify_Handler</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$gotifyUrl</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$appToken</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$url</span>, <span class="variable">$token</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;gotifyUrl = <span class="variable">$url</span>;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;appToken = <span class="variable">$token</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 发送通知</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">sendNotification</span>(<span class="params"><span class="variable">$title</span>, <span class="variable">$message</span>, <span class="variable">$priority</span> = <span class="number">0</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable">$data</span> = <span class="keyword">array</span>(</span><br><span class="line">            <span class="string">&#x27;title&#x27;</span> =&gt; <span class="variable">$title</span>,</span><br><span class="line">            <span class="string">&#x27;message&#x27;</span> =&gt; <span class="variable">$message</span>,</span><br><span class="line">            <span class="string">&#x27;priority&#x27;</span> =&gt; <span class="variable">$priority</span></span><br><span class="line">        );</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">postToGotify</span>(<span class="variable">$data</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 推送到Gotify</span></span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">postToGotify</span>(<span class="params"><span class="variable">$data</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable">$ch</span> = <span class="title function_ invoke__">curl_init</span>();</span><br><span class="line">        <span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$ch</span>, CURLOPT_URL, <span class="variable">$this</span>-&gt;gotifyUrl . <span class="string">&#x27;/message&#x27;</span>);</span><br><span class="line">        <span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$ch</span>, CURLOPT_POST, <span class="literal">true</span>);</span><br><span class="line">        <span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$ch</span>, CURLOPT_POSTFIELDS, <span class="title function_ invoke__">json_encode</span>(<span class="variable">$data</span>));</span><br><span class="line">        <span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$ch</span>, CURLOPT_HTTPHEADER, <span class="keyword">array</span>(</span><br><span class="line">            <span class="string">&#x27;X-Gotify-Key: &#x27;</span> . <span class="variable">$this</span>-&gt;appToken,</span><br><span class="line">            <span class="string">&#x27;Content-Type: application/json&#x27;</span></span><br><span class="line">        ));</span><br><span class="line">        </span><br><span class="line">        <span class="variable">$response</span> = <span class="title function_ invoke__">curl_exec</span>(<span class="variable">$ch</span>);</span><br><span class="line">        <span class="title function_ invoke__">curl_close</span>(<span class="variable">$ch</span>);</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$response</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="安装配置"><a href="#安装配置" class="headerlink" title="安装配置"></a>安装配置</h2><h3 id="1-安装Gotify服务器"><a href="#1-安装Gotify服务器" class="headerlink" title="1. 安装Gotify服务器"></a>1. 安装Gotify服务器</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Docker安装方式</span></span><br><span class="line">docker run -p 80:80 -p 443:443 \</span><br><span class="line">  -v /var/gotify:/app/data \</span><br><span class="line">  gotify/server</span><br></pre></td></tr></table></figure><h3 id="2-配置插件"><a href="#2-配置插件" class="headerlink" title="2. 配置插件"></a>2. 配置插件</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 插件配置</span></span><br><span class="line"><span class="keyword">return</span> <span class="keyword">array</span>(</span><br><span class="line">    <span class="string">&#x27;gotify_url&#x27;</span> =&gt; <span class="string">&#x27;https://your-gotify-server.com&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;app_token&#x27;</span> =&gt; <span class="string">&#x27;your-app-token&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;enable_comments&#x27;</span> =&gt; <span class="literal">true</span>,</span><br><span class="line">    <span class="string">&#x27;enable_posts&#x27;</span> =&gt; <span class="literal">true</span>,</span><br><span class="line">    <span class="string">&#x27;enable_system&#x27;</span> =&gt; <span class="literal">true</span>,</span><br><span class="line">    <span class="string">&#x27;notification_priority&#x27;</span> =&gt; <span class="number">0</span></span><br><span class="line">);</span><br></pre></td></tr></table></figure><h3 id="3-客户端配置"><a href="#3-客户端配置" class="headerlink" title="3. 客户端配置"></a>3. 客户端配置</h3><ul><li>下载Gotify客户端应用</li><li>配置服务器地址和认证信息</li><li>设置通知偏好</li></ul><h2 id="使用场景"><a href="#使用场景" class="headerlink" title="使用场景"></a>使用场景</h2><h3 id="博客管理"><a href="#博客管理" class="headerlink" title="博客管理"></a>博客管理</h3><ul><li>新评论实时提醒</li><li>系统状态监控</li><li>安全事件通知</li></ul><h3 id="用户服务"><a href="#用户服务" class="headerlink" title="用户服务"></a>用户服务</h3><ul><li>文章更新提醒</li><li>回复通知</li><li>重要公告推送</li></ul><h2 id="性能优化"><a href="#性能优化" class="headerlink" title="性能优化"></a>性能优化</h2><h3 id="推送优化"><a href="#推送优化" class="headerlink" title="推送优化"></a>推送优化</h3><ul><li>批量消息处理</li><li>智能重试机制</li><li>消息队列缓冲</li></ul><h3 id="资源管理"><a href="#资源管理" class="headerlink" title="资源管理"></a>资源管理</h3><ul><li>连接池复用</li><li>内存使用优化</li><li>数据库查询优化</li></ul><h2 id="安全考虑"><a href="#安全考虑" class="headerlink" title="安全考虑"></a>安全考虑</h2><h3 id="认证安全"><a href="#认证安全" class="headerlink" title="认证安全"></a>认证安全</h3><ul><li>Token加密存储</li><li>HTTPS通信加密</li><li>访问权限控制</li></ul><h3 id="数据保护"><a href="#数据保护" class="headerlink" title="数据保护"></a>数据保护</h3><ul><li>敏感信息过滤</li><li>日志记录审计</li><li>异常行为监控</li></ul><h2 id="扩展功能"><a href="#扩展功能" class="headerlink" title="扩展功能"></a>扩展功能</h2><h3 id="插件扩展"><a href="#插件扩展" class="headerlink" title="插件扩展"></a>插件扩展</h3><ul><li>支持自定义通知模板</li><li>支持多种推送服务</li><li>支持条件触发规则</li></ul><h3 id="集成能力"><a href="#集成能力" class="headerlink" title="集成能力"></a>集成能力</h3><ul><li>与现有通知系统集成</li><li>支持Webhook回调</li><li>支持第三方服务集成</li></ul><h2 id="故障排除"><a href="#故障排除" class="headerlink" title="故障排除"></a>故障排除</h2><h3 id="常见问题"><a href="#常见问题" class="headerlink" title="常见问题"></a>常见问题</h3><ol><li><strong>连接失败</strong>：检查网络和服务器状态</li><li><strong>认证错误</strong>：验证Token配置</li><li><strong>推送延迟</strong>：检查服务器负载</li></ol><h3 id="调试方法"><a href="#调试方法" class="headerlink" title="调试方法"></a>调试方法</h3><ul><li>启用详细日志</li><li>检查网络连接</li><li>验证API响应</li></ul><hr><p><em>GotifyNotify让ongwu博客通知更智能、更及时！</em></p>]]></content>
      
      
      <categories>
          
          <category> tech </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ongwu插件 </tag>
            
            <tag> 通知系统 </tag>
            
            <tag> Gotify </tag>
            
            <tag> 消息推送 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>GotifyNotify</title>
      <link href="/2025/01/10/10%20-%20%E5%89%AF%E6%9C%AC%20(22)/"/>
      <url>/2025/01/10/10%20-%20%E5%89%AF%E6%9C%AC%20(22)/</url>
      
        <content type="html"><![CDATA[<h1 id="GotifyNotify-ongwu通知插件"><a href="#GotifyNotify-ongwu通知插件" class="headerlink" title="GotifyNotify - ongwu通知插件"></a>GotifyNotify - ongwu通知插件</h1><h2 id="插件概述"><a href="#插件概述" class="headerlink" title="插件概述"></a>插件概述</h2><p>GotifyNotify是一个专为ongwu博客开发的通知插件，通过集成Gotify服务，为博客管理员和用户提供实时的消息推送功能。无论是新评论、新文章还是系统通知，都能及时推送到指定设备。</p><h2 id="主要功能"><a href="#主要功能" class="headerlink" title="主要功能"></a>主要功能</h2><h3 id="通知类型"><a href="#通知类型" class="headerlink" title="通知类型"></a>通知类型</h3><ul><li><strong>评论通知</strong>：新评论发布时自动推送</li><li><strong>文章通知</strong>：新文章发布时通知订阅用户</li><li><strong>系统通知</strong>：重要系统事件实时推送</li><li><strong>自定义通知</strong>：支持自定义消息内容</li></ul><h3 id="推送方式"><a href="#推送方式" class="headerlink" title="推送方式"></a>推送方式</h3><ul><li><strong>Gotify服务</strong>：通过Gotify API推送消息</li><li><strong>多设备支持</strong>：支持Android、iOS、Web等平台</li><li><strong>实时推送</strong>：毫秒级消息传递</li><li><strong>离线存储</strong>：消息持久化存储</li></ul><h2 id="技术架构"><a href="#技术架构" class="headerlink" title="技术架构"></a>技术架构</h2><h3 id="系统架构图"><a href="#系统架构图" class="headerlink" title="系统架构图"></a>系统架构图</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ongwu博客 → GotifyNotify插件 → Gotify服务器 → 客户端设备</span><br><span class="line">     ↓              ↓              ↓           ↓</span><br><span class="line">   事件触发     消息处理      消息分发     消息接收</span><br></pre></td></tr></table></figure><h3 id="核心代码实现"><a href="#核心代码实现" class="headerlink" title="核心代码实现"></a>核心代码实现</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 通知处理类</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">GotifyNotify_Handler</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$gotifyUrl</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$appToken</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$url</span>, <span class="variable">$token</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;gotifyUrl = <span class="variable">$url</span>;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;appToken = <span class="variable">$token</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 发送通知</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">sendNotification</span>(<span class="params"><span class="variable">$title</span>, <span class="variable">$message</span>, <span class="variable">$priority</span> = <span class="number">0</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable">$data</span> = <span class="keyword">array</span>(</span><br><span class="line">            <span class="string">&#x27;title&#x27;</span> =&gt; <span class="variable">$title</span>,</span><br><span class="line">            <span class="string">&#x27;message&#x27;</span> =&gt; <span class="variable">$message</span>,</span><br><span class="line">            <span class="string">&#x27;priority&#x27;</span> =&gt; <span class="variable">$priority</span></span><br><span class="line">        );</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">postToGotify</span>(<span class="variable">$data</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 推送到Gotify</span></span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">postToGotify</span>(<span class="params"><span class="variable">$data</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable">$ch</span> = <span class="title function_ invoke__">curl_init</span>();</span><br><span class="line">        <span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$ch</span>, CURLOPT_URL, <span class="variable">$this</span>-&gt;gotifyUrl . <span class="string">&#x27;/message&#x27;</span>);</span><br><span class="line">        <span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$ch</span>, CURLOPT_POST, <span class="literal">true</span>);</span><br><span class="line">        <span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$ch</span>, CURLOPT_POSTFIELDS, <span class="title function_ invoke__">json_encode</span>(<span class="variable">$data</span>));</span><br><span class="line">        <span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$ch</span>, CURLOPT_HTTPHEADER, <span class="keyword">array</span>(</span><br><span class="line">            <span class="string">&#x27;X-Gotify-Key: &#x27;</span> . <span class="variable">$this</span>-&gt;appToken,</span><br><span class="line">            <span class="string">&#x27;Content-Type: application/json&#x27;</span></span><br><span class="line">        ));</span><br><span class="line">        </span><br><span class="line">        <span class="variable">$response</span> = <span class="title function_ invoke__">curl_exec</span>(<span class="variable">$ch</span>);</span><br><span class="line">        <span class="title function_ invoke__">curl_close</span>(<span class="variable">$ch</span>);</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$response</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="安装配置"><a href="#安装配置" class="headerlink" title="安装配置"></a>安装配置</h2><h3 id="1-安装Gotify服务器"><a href="#1-安装Gotify服务器" class="headerlink" title="1. 安装Gotify服务器"></a>1. 安装Gotify服务器</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Docker安装方式</span></span><br><span class="line">docker run -p 80:80 -p 443:443 \</span><br><span class="line">  -v /var/gotify:/app/data \</span><br><span class="line">  gotify/server</span><br></pre></td></tr></table></figure><h3 id="2-配置插件"><a href="#2-配置插件" class="headerlink" title="2. 配置插件"></a>2. 配置插件</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 插件配置</span></span><br><span class="line"><span class="keyword">return</span> <span class="keyword">array</span>(</span><br><span class="line">    <span class="string">&#x27;gotify_url&#x27;</span> =&gt; <span class="string">&#x27;https://your-gotify-server.com&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;app_token&#x27;</span> =&gt; <span class="string">&#x27;your-app-token&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;enable_comments&#x27;</span> =&gt; <span class="literal">true</span>,</span><br><span class="line">    <span class="string">&#x27;enable_posts&#x27;</span> =&gt; <span class="literal">true</span>,</span><br><span class="line">    <span class="string">&#x27;enable_system&#x27;</span> =&gt; <span class="literal">true</span>,</span><br><span class="line">    <span class="string">&#x27;notification_priority&#x27;</span> =&gt; <span class="number">0</span></span><br><span class="line">);</span><br></pre></td></tr></table></figure><h3 id="3-客户端配置"><a href="#3-客户端配置" class="headerlink" title="3. 客户端配置"></a>3. 客户端配置</h3><ul><li>下载Gotify客户端应用</li><li>配置服务器地址和认证信息</li><li>设置通知偏好</li></ul><h2 id="使用场景"><a href="#使用场景" class="headerlink" title="使用场景"></a>使用场景</h2><h3 id="博客管理"><a href="#博客管理" class="headerlink" title="博客管理"></a>博客管理</h3><ul><li>新评论实时提醒</li><li>系统状态监控</li><li>安全事件通知</li></ul><h3 id="用户服务"><a href="#用户服务" class="headerlink" title="用户服务"></a>用户服务</h3><ul><li>文章更新提醒</li><li>回复通知</li><li>重要公告推送</li></ul><h2 id="性能优化"><a href="#性能优化" class="headerlink" title="性能优化"></a>性能优化</h2><h3 id="推送优化"><a href="#推送优化" class="headerlink" title="推送优化"></a>推送优化</h3><ul><li>批量消息处理</li><li>智能重试机制</li><li>消息队列缓冲</li></ul><h3 id="资源管理"><a href="#资源管理" class="headerlink" title="资源管理"></a>资源管理</h3><ul><li>连接池复用</li><li>内存使用优化</li><li>数据库查询优化</li></ul><h2 id="安全考虑"><a href="#安全考虑" class="headerlink" title="安全考虑"></a>安全考虑</h2><h3 id="认证安全"><a href="#认证安全" class="headerlink" title="认证安全"></a>认证安全</h3><ul><li>Token加密存储</li><li>HTTPS通信加密</li><li>访问权限控制</li></ul><h3 id="数据保护"><a href="#数据保护" class="headerlink" title="数据保护"></a>数据保护</h3><ul><li>敏感信息过滤</li><li>日志记录审计</li><li>异常行为监控</li></ul><h2 id="扩展功能"><a href="#扩展功能" class="headerlink" title="扩展功能"></a>扩展功能</h2><h3 id="插件扩展"><a href="#插件扩展" class="headerlink" title="插件扩展"></a>插件扩展</h3><ul><li>支持自定义通知模板</li><li>支持多种推送服务</li><li>支持条件触发规则</li></ul><h3 id="集成能力"><a href="#集成能力" class="headerlink" title="集成能力"></a>集成能力</h3><ul><li>与现有通知系统集成</li><li>支持Webhook回调</li><li>支持第三方服务集成</li></ul><h2 id="故障排除"><a href="#故障排除" class="headerlink" title="故障排除"></a>故障排除</h2><h3 id="常见问题"><a href="#常见问题" class="headerlink" title="常见问题"></a>常见问题</h3><ol><li><strong>连接失败</strong>：检查网络和服务器状态</li><li><strong>认证错误</strong>：验证Token配置</li><li><strong>推送延迟</strong>：检查服务器负载</li></ol><h3 id="调试方法"><a href="#调试方法" class="headerlink" title="调试方法"></a>调试方法</h3><ul><li>启用详细日志</li><li>检查网络连接</li><li>验证API响应</li></ul><hr><p><em>GotifyNotify让ongwu博客通知更智能、更及时！</em></p>]]></content>
      
      
      <categories>
          
          <category> tech </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ongwu插件 </tag>
            
            <tag> 通知系统 </tag>
            
            <tag> Gotify </tag>
            
            <tag> 消息推送 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>GotifyNotify</title>
      <link href="/2025/01/10/10%20-%20%E5%89%AF%E6%9C%AC%20(23)/"/>
      <url>/2025/01/10/10%20-%20%E5%89%AF%E6%9C%AC%20(23)/</url>
      
        <content type="html"><![CDATA[<h1 id="GotifyNotify-ongwu通知插件"><a href="#GotifyNotify-ongwu通知插件" class="headerlink" title="GotifyNotify - ongwu通知插件"></a>GotifyNotify - ongwu通知插件</h1><h2 id="插件概述"><a href="#插件概述" class="headerlink" title="插件概述"></a>插件概述</h2><p>GotifyNotify是一个专为ongwu博客开发的通知插件，通过集成Gotify服务，为博客管理员和用户提供实时的消息推送功能。无论是新评论、新文章还是系统通知，都能及时推送到指定设备。</p><h2 id="主要功能"><a href="#主要功能" class="headerlink" title="主要功能"></a>主要功能</h2><h3 id="通知类型"><a href="#通知类型" class="headerlink" title="通知类型"></a>通知类型</h3><ul><li><strong>评论通知</strong>：新评论发布时自动推送</li><li><strong>文章通知</strong>：新文章发布时通知订阅用户</li><li><strong>系统通知</strong>：重要系统事件实时推送</li><li><strong>自定义通知</strong>：支持自定义消息内容</li></ul><h3 id="推送方式"><a href="#推送方式" class="headerlink" title="推送方式"></a>推送方式</h3><ul><li><strong>Gotify服务</strong>：通过Gotify API推送消息</li><li><strong>多设备支持</strong>：支持Android、iOS、Web等平台</li><li><strong>实时推送</strong>：毫秒级消息传递</li><li><strong>离线存储</strong>：消息持久化存储</li></ul><h2 id="技术架构"><a href="#技术架构" class="headerlink" title="技术架构"></a>技术架构</h2><h3 id="系统架构图"><a href="#系统架构图" class="headerlink" title="系统架构图"></a>系统架构图</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ongwu博客 → GotifyNotify插件 → Gotify服务器 → 客户端设备</span><br><span class="line">     ↓              ↓              ↓           ↓</span><br><span class="line">   事件触发     消息处理      消息分发     消息接收</span><br></pre></td></tr></table></figure><h3 id="核心代码实现"><a href="#核心代码实现" class="headerlink" title="核心代码实现"></a>核心代码实现</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 通知处理类</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">GotifyNotify_Handler</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$gotifyUrl</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$appToken</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$url</span>, <span class="variable">$token</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;gotifyUrl = <span class="variable">$url</span>;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;appToken = <span class="variable">$token</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 发送通知</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">sendNotification</span>(<span class="params"><span class="variable">$title</span>, <span class="variable">$message</span>, <span class="variable">$priority</span> = <span class="number">0</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable">$data</span> = <span class="keyword">array</span>(</span><br><span class="line">            <span class="string">&#x27;title&#x27;</span> =&gt; <span class="variable">$title</span>,</span><br><span class="line">            <span class="string">&#x27;message&#x27;</span> =&gt; <span class="variable">$message</span>,</span><br><span class="line">            <span class="string">&#x27;priority&#x27;</span> =&gt; <span class="variable">$priority</span></span><br><span class="line">        );</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">postToGotify</span>(<span class="variable">$data</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 推送到Gotify</span></span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">postToGotify</span>(<span class="params"><span class="variable">$data</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable">$ch</span> = <span class="title function_ invoke__">curl_init</span>();</span><br><span class="line">        <span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$ch</span>, CURLOPT_URL, <span class="variable">$this</span>-&gt;gotifyUrl . <span class="string">&#x27;/message&#x27;</span>);</span><br><span class="line">        <span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$ch</span>, CURLOPT_POST, <span class="literal">true</span>);</span><br><span class="line">        <span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$ch</span>, CURLOPT_POSTFIELDS, <span class="title function_ invoke__">json_encode</span>(<span class="variable">$data</span>));</span><br><span class="line">        <span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$ch</span>, CURLOPT_HTTPHEADER, <span class="keyword">array</span>(</span><br><span class="line">            <span class="string">&#x27;X-Gotify-Key: &#x27;</span> . <span class="variable">$this</span>-&gt;appToken,</span><br><span class="line">            <span class="string">&#x27;Content-Type: application/json&#x27;</span></span><br><span class="line">        ));</span><br><span class="line">        </span><br><span class="line">        <span class="variable">$response</span> = <span class="title function_ invoke__">curl_exec</span>(<span class="variable">$ch</span>);</span><br><span class="line">        <span class="title function_ invoke__">curl_close</span>(<span class="variable">$ch</span>);</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$response</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="安装配置"><a href="#安装配置" class="headerlink" title="安装配置"></a>安装配置</h2><h3 id="1-安装Gotify服务器"><a href="#1-安装Gotify服务器" class="headerlink" title="1. 安装Gotify服务器"></a>1. 安装Gotify服务器</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Docker安装方式</span></span><br><span class="line">docker run -p 80:80 -p 443:443 \</span><br><span class="line">  -v /var/gotify:/app/data \</span><br><span class="line">  gotify/server</span><br></pre></td></tr></table></figure><h3 id="2-配置插件"><a href="#2-配置插件" class="headerlink" title="2. 配置插件"></a>2. 配置插件</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 插件配置</span></span><br><span class="line"><span class="keyword">return</span> <span class="keyword">array</span>(</span><br><span class="line">    <span class="string">&#x27;gotify_url&#x27;</span> =&gt; <span class="string">&#x27;https://your-gotify-server.com&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;app_token&#x27;</span> =&gt; <span class="string">&#x27;your-app-token&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;enable_comments&#x27;</span> =&gt; <span class="literal">true</span>,</span><br><span class="line">    <span class="string">&#x27;enable_posts&#x27;</span> =&gt; <span class="literal">true</span>,</span><br><span class="line">    <span class="string">&#x27;enable_system&#x27;</span> =&gt; <span class="literal">true</span>,</span><br><span class="line">    <span class="string">&#x27;notification_priority&#x27;</span> =&gt; <span class="number">0</span></span><br><span class="line">);</span><br></pre></td></tr></table></figure><h3 id="3-客户端配置"><a href="#3-客户端配置" class="headerlink" title="3. 客户端配置"></a>3. 客户端配置</h3><ul><li>下载Gotify客户端应用</li><li>配置服务器地址和认证信息</li><li>设置通知偏好</li></ul><h2 id="使用场景"><a href="#使用场景" class="headerlink" title="使用场景"></a>使用场景</h2><h3 id="博客管理"><a href="#博客管理" class="headerlink" title="博客管理"></a>博客管理</h3><ul><li>新评论实时提醒</li><li>系统状态监控</li><li>安全事件通知</li></ul><h3 id="用户服务"><a href="#用户服务" class="headerlink" title="用户服务"></a>用户服务</h3><ul><li>文章更新提醒</li><li>回复通知</li><li>重要公告推送</li></ul><h2 id="性能优化"><a href="#性能优化" class="headerlink" title="性能优化"></a>性能优化</h2><h3 id="推送优化"><a href="#推送优化" class="headerlink" title="推送优化"></a>推送优化</h3><ul><li>批量消息处理</li><li>智能重试机制</li><li>消息队列缓冲</li></ul><h3 id="资源管理"><a href="#资源管理" class="headerlink" title="资源管理"></a>资源管理</h3><ul><li>连接池复用</li><li>内存使用优化</li><li>数据库查询优化</li></ul><h2 id="安全考虑"><a href="#安全考虑" class="headerlink" title="安全考虑"></a>安全考虑</h2><h3 id="认证安全"><a href="#认证安全" class="headerlink" title="认证安全"></a>认证安全</h3><ul><li>Token加密存储</li><li>HTTPS通信加密</li><li>访问权限控制</li></ul><h3 id="数据保护"><a href="#数据保护" class="headerlink" title="数据保护"></a>数据保护</h3><ul><li>敏感信息过滤</li><li>日志记录审计</li><li>异常行为监控</li></ul><h2 id="扩展功能"><a href="#扩展功能" class="headerlink" title="扩展功能"></a>扩展功能</h2><h3 id="插件扩展"><a href="#插件扩展" class="headerlink" title="插件扩展"></a>插件扩展</h3><ul><li>支持自定义通知模板</li><li>支持多种推送服务</li><li>支持条件触发规则</li></ul><h3 id="集成能力"><a href="#集成能力" class="headerlink" title="集成能力"></a>集成能力</h3><ul><li>与现有通知系统集成</li><li>支持Webhook回调</li><li>支持第三方服务集成</li></ul><h2 id="故障排除"><a href="#故障排除" class="headerlink" title="故障排除"></a>故障排除</h2><h3 id="常见问题"><a href="#常见问题" class="headerlink" title="常见问题"></a>常见问题</h3><ol><li><strong>连接失败</strong>：检查网络和服务器状态</li><li><strong>认证错误</strong>：验证Token配置</li><li><strong>推送延迟</strong>：检查服务器负载</li></ol><h3 id="调试方法"><a href="#调试方法" class="headerlink" title="调试方法"></a>调试方法</h3><ul><li>启用详细日志</li><li>检查网络连接</li><li>验证API响应</li></ul><hr><p><em>GotifyNotify让ongwu博客通知更智能、更及时！</em></p>]]></content>
      
      
      <categories>
          
          <category> tech </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ongwu插件 </tag>
            
            <tag> 通知系统 </tag>
            
            <tag> Gotify </tag>
            
            <tag> 消息推送 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>GotifyNotify</title>
      <link href="/2025/01/10/10%20-%20%E5%89%AF%E6%9C%AC%20(24)/"/>
      <url>/2025/01/10/10%20-%20%E5%89%AF%E6%9C%AC%20(24)/</url>
      
        <content type="html"><![CDATA[<h1 id="GotifyNotify-ongwu通知插件"><a href="#GotifyNotify-ongwu通知插件" class="headerlink" title="GotifyNotify - ongwu通知插件"></a>GotifyNotify - ongwu通知插件</h1><h2 id="插件概述"><a href="#插件概述" class="headerlink" title="插件概述"></a>插件概述</h2><p>GotifyNotify是一个专为ongwu博客开发的通知插件，通过集成Gotify服务，为博客管理员和用户提供实时的消息推送功能。无论是新评论、新文章还是系统通知，都能及时推送到指定设备。</p><h2 id="主要功能"><a href="#主要功能" class="headerlink" title="主要功能"></a>主要功能</h2><h3 id="通知类型"><a href="#通知类型" class="headerlink" title="通知类型"></a>通知类型</h3><ul><li><strong>评论通知</strong>：新评论发布时自动推送</li><li><strong>文章通知</strong>：新文章发布时通知订阅用户</li><li><strong>系统通知</strong>：重要系统事件实时推送</li><li><strong>自定义通知</strong>：支持自定义消息内容</li></ul><h3 id="推送方式"><a href="#推送方式" class="headerlink" title="推送方式"></a>推送方式</h3><ul><li><strong>Gotify服务</strong>：通过Gotify API推送消息</li><li><strong>多设备支持</strong>：支持Android、iOS、Web等平台</li><li><strong>实时推送</strong>：毫秒级消息传递</li><li><strong>离线存储</strong>：消息持久化存储</li></ul><h2 id="技术架构"><a href="#技术架构" class="headerlink" title="技术架构"></a>技术架构</h2><h3 id="系统架构图"><a href="#系统架构图" class="headerlink" title="系统架构图"></a>系统架构图</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ongwu博客 → GotifyNotify插件 → Gotify服务器 → 客户端设备</span><br><span class="line">     ↓              ↓              ↓           ↓</span><br><span class="line">   事件触发     消息处理      消息分发     消息接收</span><br></pre></td></tr></table></figure><h3 id="核心代码实现"><a href="#核心代码实现" class="headerlink" title="核心代码实现"></a>核心代码实现</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 通知处理类</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">GotifyNotify_Handler</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$gotifyUrl</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$appToken</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$url</span>, <span class="variable">$token</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;gotifyUrl = <span class="variable">$url</span>;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;appToken = <span class="variable">$token</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 发送通知</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">sendNotification</span>(<span class="params"><span class="variable">$title</span>, <span class="variable">$message</span>, <span class="variable">$priority</span> = <span class="number">0</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable">$data</span> = <span class="keyword">array</span>(</span><br><span class="line">            <span class="string">&#x27;title&#x27;</span> =&gt; <span class="variable">$title</span>,</span><br><span class="line">            <span class="string">&#x27;message&#x27;</span> =&gt; <span class="variable">$message</span>,</span><br><span class="line">            <span class="string">&#x27;priority&#x27;</span> =&gt; <span class="variable">$priority</span></span><br><span class="line">        );</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">postToGotify</span>(<span class="variable">$data</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 推送到Gotify</span></span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">postToGotify</span>(<span class="params"><span class="variable">$data</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable">$ch</span> = <span class="title function_ invoke__">curl_init</span>();</span><br><span class="line">        <span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$ch</span>, CURLOPT_URL, <span class="variable">$this</span>-&gt;gotifyUrl . <span class="string">&#x27;/message&#x27;</span>);</span><br><span class="line">        <span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$ch</span>, CURLOPT_POST, <span class="literal">true</span>);</span><br><span class="line">        <span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$ch</span>, CURLOPT_POSTFIELDS, <span class="title function_ invoke__">json_encode</span>(<span class="variable">$data</span>));</span><br><span class="line">        <span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$ch</span>, CURLOPT_HTTPHEADER, <span class="keyword">array</span>(</span><br><span class="line">            <span class="string">&#x27;X-Gotify-Key: &#x27;</span> . <span class="variable">$this</span>-&gt;appToken,</span><br><span class="line">            <span class="string">&#x27;Content-Type: application/json&#x27;</span></span><br><span class="line">        ));</span><br><span class="line">        </span><br><span class="line">        <span class="variable">$response</span> = <span class="title function_ invoke__">curl_exec</span>(<span class="variable">$ch</span>);</span><br><span class="line">        <span class="title function_ invoke__">curl_close</span>(<span class="variable">$ch</span>);</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$response</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="安装配置"><a href="#安装配置" class="headerlink" title="安装配置"></a>安装配置</h2><h3 id="1-安装Gotify服务器"><a href="#1-安装Gotify服务器" class="headerlink" title="1. 安装Gotify服务器"></a>1. 安装Gotify服务器</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Docker安装方式</span></span><br><span class="line">docker run -p 80:80 -p 443:443 \</span><br><span class="line">  -v /var/gotify:/app/data \</span><br><span class="line">  gotify/server</span><br></pre></td></tr></table></figure><h3 id="2-配置插件"><a href="#2-配置插件" class="headerlink" title="2. 配置插件"></a>2. 配置插件</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 插件配置</span></span><br><span class="line"><span class="keyword">return</span> <span class="keyword">array</span>(</span><br><span class="line">    <span class="string">&#x27;gotify_url&#x27;</span> =&gt; <span class="string">&#x27;https://your-gotify-server.com&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;app_token&#x27;</span> =&gt; <span class="string">&#x27;your-app-token&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;enable_comments&#x27;</span> =&gt; <span class="literal">true</span>,</span><br><span class="line">    <span class="string">&#x27;enable_posts&#x27;</span> =&gt; <span class="literal">true</span>,</span><br><span class="line">    <span class="string">&#x27;enable_system&#x27;</span> =&gt; <span class="literal">true</span>,</span><br><span class="line">    <span class="string">&#x27;notification_priority&#x27;</span> =&gt; <span class="number">0</span></span><br><span class="line">);</span><br></pre></td></tr></table></figure><h3 id="3-客户端配置"><a href="#3-客户端配置" class="headerlink" title="3. 客户端配置"></a>3. 客户端配置</h3><ul><li>下载Gotify客户端应用</li><li>配置服务器地址和认证信息</li><li>设置通知偏好</li></ul><h2 id="使用场景"><a href="#使用场景" class="headerlink" title="使用场景"></a>使用场景</h2><h3 id="博客管理"><a href="#博客管理" class="headerlink" title="博客管理"></a>博客管理</h3><ul><li>新评论实时提醒</li><li>系统状态监控</li><li>安全事件通知</li></ul><h3 id="用户服务"><a href="#用户服务" class="headerlink" title="用户服务"></a>用户服务</h3><ul><li>文章更新提醒</li><li>回复通知</li><li>重要公告推送</li></ul><h2 id="性能优化"><a href="#性能优化" class="headerlink" title="性能优化"></a>性能优化</h2><h3 id="推送优化"><a href="#推送优化" class="headerlink" title="推送优化"></a>推送优化</h3><ul><li>批量消息处理</li><li>智能重试机制</li><li>消息队列缓冲</li></ul><h3 id="资源管理"><a href="#资源管理" class="headerlink" title="资源管理"></a>资源管理</h3><ul><li>连接池复用</li><li>内存使用优化</li><li>数据库查询优化</li></ul><h2 id="安全考虑"><a href="#安全考虑" class="headerlink" title="安全考虑"></a>安全考虑</h2><h3 id="认证安全"><a href="#认证安全" class="headerlink" title="认证安全"></a>认证安全</h3><ul><li>Token加密存储</li><li>HTTPS通信加密</li><li>访问权限控制</li></ul><h3 id="数据保护"><a href="#数据保护" class="headerlink" title="数据保护"></a>数据保护</h3><ul><li>敏感信息过滤</li><li>日志记录审计</li><li>异常行为监控</li></ul><h2 id="扩展功能"><a href="#扩展功能" class="headerlink" title="扩展功能"></a>扩展功能</h2><h3 id="插件扩展"><a href="#插件扩展" class="headerlink" title="插件扩展"></a>插件扩展</h3><ul><li>支持自定义通知模板</li><li>支持多种推送服务</li><li>支持条件触发规则</li></ul><h3 id="集成能力"><a href="#集成能力" class="headerlink" title="集成能力"></a>集成能力</h3><ul><li>与现有通知系统集成</li><li>支持Webhook回调</li><li>支持第三方服务集成</li></ul><h2 id="故障排除"><a href="#故障排除" class="headerlink" title="故障排除"></a>故障排除</h2><h3 id="常见问题"><a href="#常见问题" class="headerlink" title="常见问题"></a>常见问题</h3><ol><li><strong>连接失败</strong>：检查网络和服务器状态</li><li><strong>认证错误</strong>：验证Token配置</li><li><strong>推送延迟</strong>：检查服务器负载</li></ol><h3 id="调试方法"><a href="#调试方法" class="headerlink" title="调试方法"></a>调试方法</h3><ul><li>启用详细日志</li><li>检查网络连接</li><li>验证API响应</li></ul><hr><p><em>GotifyNotify让ongwu博客通知更智能、更及时！</em></p>]]></content>
      
      
      <categories>
          
          <category> tech </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ongwu插件 </tag>
            
            <tag> 通知系统 </tag>
            
            <tag> Gotify </tag>
            
            <tag> 消息推送 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>GotifyNotify</title>
      <link href="/2025/01/10/10%20-%20%E5%89%AF%E6%9C%AC%20(25)/"/>
      <url>/2025/01/10/10%20-%20%E5%89%AF%E6%9C%AC%20(25)/</url>
      
        <content type="html"><![CDATA[<h1 id="GotifyNotify-ongwu通知插件"><a href="#GotifyNotify-ongwu通知插件" class="headerlink" title="GotifyNotify - ongwu通知插件"></a>GotifyNotify - ongwu通知插件</h1><h2 id="插件概述"><a href="#插件概述" class="headerlink" title="插件概述"></a>插件概述</h2><p>GotifyNotify是一个专为ongwu博客开发的通知插件，通过集成Gotify服务，为博客管理员和用户提供实时的消息推送功能。无论是新评论、新文章还是系统通知，都能及时推送到指定设备。</p><h2 id="主要功能"><a href="#主要功能" class="headerlink" title="主要功能"></a>主要功能</h2><h3 id="通知类型"><a href="#通知类型" class="headerlink" title="通知类型"></a>通知类型</h3><ul><li><strong>评论通知</strong>：新评论发布时自动推送</li><li><strong>文章通知</strong>：新文章发布时通知订阅用户</li><li><strong>系统通知</strong>：重要系统事件实时推送</li><li><strong>自定义通知</strong>：支持自定义消息内容</li></ul><h3 id="推送方式"><a href="#推送方式" class="headerlink" title="推送方式"></a>推送方式</h3><ul><li><strong>Gotify服务</strong>：通过Gotify API推送消息</li><li><strong>多设备支持</strong>：支持Android、iOS、Web等平台</li><li><strong>实时推送</strong>：毫秒级消息传递</li><li><strong>离线存储</strong>：消息持久化存储</li></ul><h2 id="技术架构"><a href="#技术架构" class="headerlink" title="技术架构"></a>技术架构</h2><h3 id="系统架构图"><a href="#系统架构图" class="headerlink" title="系统架构图"></a>系统架构图</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ongwu博客 → GotifyNotify插件 → Gotify服务器 → 客户端设备</span><br><span class="line">     ↓              ↓              ↓           ↓</span><br><span class="line">   事件触发     消息处理      消息分发     消息接收</span><br></pre></td></tr></table></figure><h3 id="核心代码实现"><a href="#核心代码实现" class="headerlink" title="核心代码实现"></a>核心代码实现</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 通知处理类</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">GotifyNotify_Handler</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$gotifyUrl</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$appToken</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$url</span>, <span class="variable">$token</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;gotifyUrl = <span class="variable">$url</span>;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;appToken = <span class="variable">$token</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 发送通知</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">sendNotification</span>(<span class="params"><span class="variable">$title</span>, <span class="variable">$message</span>, <span class="variable">$priority</span> = <span class="number">0</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable">$data</span> = <span class="keyword">array</span>(</span><br><span class="line">            <span class="string">&#x27;title&#x27;</span> =&gt; <span class="variable">$title</span>,</span><br><span class="line">            <span class="string">&#x27;message&#x27;</span> =&gt; <span class="variable">$message</span>,</span><br><span class="line">            <span class="string">&#x27;priority&#x27;</span> =&gt; <span class="variable">$priority</span></span><br><span class="line">        );</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">postToGotify</span>(<span class="variable">$data</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 推送到Gotify</span></span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">postToGotify</span>(<span class="params"><span class="variable">$data</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable">$ch</span> = <span class="title function_ invoke__">curl_init</span>();</span><br><span class="line">        <span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$ch</span>, CURLOPT_URL, <span class="variable">$this</span>-&gt;gotifyUrl . <span class="string">&#x27;/message&#x27;</span>);</span><br><span class="line">        <span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$ch</span>, CURLOPT_POST, <span class="literal">true</span>);</span><br><span class="line">        <span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$ch</span>, CURLOPT_POSTFIELDS, <span class="title function_ invoke__">json_encode</span>(<span class="variable">$data</span>));</span><br><span class="line">        <span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$ch</span>, CURLOPT_HTTPHEADER, <span class="keyword">array</span>(</span><br><span class="line">            <span class="string">&#x27;X-Gotify-Key: &#x27;</span> . <span class="variable">$this</span>-&gt;appToken,</span><br><span class="line">            <span class="string">&#x27;Content-Type: application/json&#x27;</span></span><br><span class="line">        ));</span><br><span class="line">        </span><br><span class="line">        <span class="variable">$response</span> = <span class="title function_ invoke__">curl_exec</span>(<span class="variable">$ch</span>);</span><br><span class="line">        <span class="title function_ invoke__">curl_close</span>(<span class="variable">$ch</span>);</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$response</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="安装配置"><a href="#安装配置" class="headerlink" title="安装配置"></a>安装配置</h2><h3 id="1-安装Gotify服务器"><a href="#1-安装Gotify服务器" class="headerlink" title="1. 安装Gotify服务器"></a>1. 安装Gotify服务器</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Docker安装方式</span></span><br><span class="line">docker run -p 80:80 -p 443:443 \</span><br><span class="line">  -v /var/gotify:/app/data \</span><br><span class="line">  gotify/server</span><br></pre></td></tr></table></figure><h3 id="2-配置插件"><a href="#2-配置插件" class="headerlink" title="2. 配置插件"></a>2. 配置插件</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 插件配置</span></span><br><span class="line"><span class="keyword">return</span> <span class="keyword">array</span>(</span><br><span class="line">    <span class="string">&#x27;gotify_url&#x27;</span> =&gt; <span class="string">&#x27;https://your-gotify-server.com&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;app_token&#x27;</span> =&gt; <span class="string">&#x27;your-app-token&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;enable_comments&#x27;</span> =&gt; <span class="literal">true</span>,</span><br><span class="line">    <span class="string">&#x27;enable_posts&#x27;</span> =&gt; <span class="literal">true</span>,</span><br><span class="line">    <span class="string">&#x27;enable_system&#x27;</span> =&gt; <span class="literal">true</span>,</span><br><span class="line">    <span class="string">&#x27;notification_priority&#x27;</span> =&gt; <span class="number">0</span></span><br><span class="line">);</span><br></pre></td></tr></table></figure><h3 id="3-客户端配置"><a href="#3-客户端配置" class="headerlink" title="3. 客户端配置"></a>3. 客户端配置</h3><ul><li>下载Gotify客户端应用</li><li>配置服务器地址和认证信息</li><li>设置通知偏好</li></ul><h2 id="使用场景"><a href="#使用场景" class="headerlink" title="使用场景"></a>使用场景</h2><h3 id="博客管理"><a href="#博客管理" class="headerlink" title="博客管理"></a>博客管理</h3><ul><li>新评论实时提醒</li><li>系统状态监控</li><li>安全事件通知</li></ul><h3 id="用户服务"><a href="#用户服务" class="headerlink" title="用户服务"></a>用户服务</h3><ul><li>文章更新提醒</li><li>回复通知</li><li>重要公告推送</li></ul><h2 id="性能优化"><a href="#性能优化" class="headerlink" title="性能优化"></a>性能优化</h2><h3 id="推送优化"><a href="#推送优化" class="headerlink" title="推送优化"></a>推送优化</h3><ul><li>批量消息处理</li><li>智能重试机制</li><li>消息队列缓冲</li></ul><h3 id="资源管理"><a href="#资源管理" class="headerlink" title="资源管理"></a>资源管理</h3><ul><li>连接池复用</li><li>内存使用优化</li><li>数据库查询优化</li></ul><h2 id="安全考虑"><a href="#安全考虑" class="headerlink" title="安全考虑"></a>安全考虑</h2><h3 id="认证安全"><a href="#认证安全" class="headerlink" title="认证安全"></a>认证安全</h3><ul><li>Token加密存储</li><li>HTTPS通信加密</li><li>访问权限控制</li></ul><h3 id="数据保护"><a href="#数据保护" class="headerlink" title="数据保护"></a>数据保护</h3><ul><li>敏感信息过滤</li><li>日志记录审计</li><li>异常行为监控</li></ul><h2 id="扩展功能"><a href="#扩展功能" class="headerlink" title="扩展功能"></a>扩展功能</h2><h3 id="插件扩展"><a href="#插件扩展" class="headerlink" title="插件扩展"></a>插件扩展</h3><ul><li>支持自定义通知模板</li><li>支持多种推送服务</li><li>支持条件触发规则</li></ul><h3 id="集成能力"><a href="#集成能力" class="headerlink" title="集成能力"></a>集成能力</h3><ul><li>与现有通知系统集成</li><li>支持Webhook回调</li><li>支持第三方服务集成</li></ul><h2 id="故障排除"><a href="#故障排除" class="headerlink" title="故障排除"></a>故障排除</h2><h3 id="常见问题"><a href="#常见问题" class="headerlink" title="常见问题"></a>常见问题</h3><ol><li><strong>连接失败</strong>：检查网络和服务器状态</li><li><strong>认证错误</strong>：验证Token配置</li><li><strong>推送延迟</strong>：检查服务器负载</li></ol><h3 id="调试方法"><a href="#调试方法" class="headerlink" title="调试方法"></a>调试方法</h3><ul><li>启用详细日志</li><li>检查网络连接</li><li>验证API响应</li></ul><hr><p><em>GotifyNotify让ongwu博客通知更智能、更及时！</em></p>]]></content>
      
      
      <categories>
          
          <category> tech </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ongwu插件 </tag>
            
            <tag> 通知系统 </tag>
            
            <tag> Gotify </tag>
            
            <tag> 消息推送 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>GotifyNotify</title>
      <link href="/2025/01/10/10%20-%20%E5%89%AF%E6%9C%AC%20(26)/"/>
      <url>/2025/01/10/10%20-%20%E5%89%AF%E6%9C%AC%20(26)/</url>
      
        <content type="html"><![CDATA[<h1 id="GotifyNotify-ongwu通知插件"><a href="#GotifyNotify-ongwu通知插件" class="headerlink" title="GotifyNotify - ongwu通知插件"></a>GotifyNotify - ongwu通知插件</h1><h2 id="插件概述"><a href="#插件概述" class="headerlink" title="插件概述"></a>插件概述</h2><p>GotifyNotify是一个专为ongwu博客开发的通知插件，通过集成Gotify服务，为博客管理员和用户提供实时的消息推送功能。无论是新评论、新文章还是系统通知，都能及时推送到指定设备。</p><h2 id="主要功能"><a href="#主要功能" class="headerlink" title="主要功能"></a>主要功能</h2><h3 id="通知类型"><a href="#通知类型" class="headerlink" title="通知类型"></a>通知类型</h3><ul><li><strong>评论通知</strong>：新评论发布时自动推送</li><li><strong>文章通知</strong>：新文章发布时通知订阅用户</li><li><strong>系统通知</strong>：重要系统事件实时推送</li><li><strong>自定义通知</strong>：支持自定义消息内容</li></ul><h3 id="推送方式"><a href="#推送方式" class="headerlink" title="推送方式"></a>推送方式</h3><ul><li><strong>Gotify服务</strong>：通过Gotify API推送消息</li><li><strong>多设备支持</strong>：支持Android、iOS、Web等平台</li><li><strong>实时推送</strong>：毫秒级消息传递</li><li><strong>离线存储</strong>：消息持久化存储</li></ul><h2 id="技术架构"><a href="#技术架构" class="headerlink" title="技术架构"></a>技术架构</h2><h3 id="系统架构图"><a href="#系统架构图" class="headerlink" title="系统架构图"></a>系统架构图</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ongwu博客 → GotifyNotify插件 → Gotify服务器 → 客户端设备</span><br><span class="line">     ↓              ↓              ↓           ↓</span><br><span class="line">   事件触发     消息处理      消息分发     消息接收</span><br></pre></td></tr></table></figure><h3 id="核心代码实现"><a href="#核心代码实现" class="headerlink" title="核心代码实现"></a>核心代码实现</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 通知处理类</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">GotifyNotify_Handler</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$gotifyUrl</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$appToken</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$url</span>, <span class="variable">$token</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;gotifyUrl = <span class="variable">$url</span>;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;appToken = <span class="variable">$token</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 发送通知</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">sendNotification</span>(<span class="params"><span class="variable">$title</span>, <span class="variable">$message</span>, <span class="variable">$priority</span> = <span class="number">0</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable">$data</span> = <span class="keyword">array</span>(</span><br><span class="line">            <span class="string">&#x27;title&#x27;</span> =&gt; <span class="variable">$title</span>,</span><br><span class="line">            <span class="string">&#x27;message&#x27;</span> =&gt; <span class="variable">$message</span>,</span><br><span class="line">            <span class="string">&#x27;priority&#x27;</span> =&gt; <span class="variable">$priority</span></span><br><span class="line">        );</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">postToGotify</span>(<span class="variable">$data</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 推送到Gotify</span></span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">postToGotify</span>(<span class="params"><span class="variable">$data</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable">$ch</span> = <span class="title function_ invoke__">curl_init</span>();</span><br><span class="line">        <span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$ch</span>, CURLOPT_URL, <span class="variable">$this</span>-&gt;gotifyUrl . <span class="string">&#x27;/message&#x27;</span>);</span><br><span class="line">        <span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$ch</span>, CURLOPT_POST, <span class="literal">true</span>);</span><br><span class="line">        <span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$ch</span>, CURLOPT_POSTFIELDS, <span class="title function_ invoke__">json_encode</span>(<span class="variable">$data</span>));</span><br><span class="line">        <span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$ch</span>, CURLOPT_HTTPHEADER, <span class="keyword">array</span>(</span><br><span class="line">            <span class="string">&#x27;X-Gotify-Key: &#x27;</span> . <span class="variable">$this</span>-&gt;appToken,</span><br><span class="line">            <span class="string">&#x27;Content-Type: application/json&#x27;</span></span><br><span class="line">        ));</span><br><span class="line">        </span><br><span class="line">        <span class="variable">$response</span> = <span class="title function_ invoke__">curl_exec</span>(<span class="variable">$ch</span>);</span><br><span class="line">        <span class="title function_ invoke__">curl_close</span>(<span class="variable">$ch</span>);</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$response</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="安装配置"><a href="#安装配置" class="headerlink" title="安装配置"></a>安装配置</h2><h3 id="1-安装Gotify服务器"><a href="#1-安装Gotify服务器" class="headerlink" title="1. 安装Gotify服务器"></a>1. 安装Gotify服务器</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Docker安装方式</span></span><br><span class="line">docker run -p 80:80 -p 443:443 \</span><br><span class="line">  -v /var/gotify:/app/data \</span><br><span class="line">  gotify/server</span><br></pre></td></tr></table></figure><h3 id="2-配置插件"><a href="#2-配置插件" class="headerlink" title="2. 配置插件"></a>2. 配置插件</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 插件配置</span></span><br><span class="line"><span class="keyword">return</span> <span class="keyword">array</span>(</span><br><span class="line">    <span class="string">&#x27;gotify_url&#x27;</span> =&gt; <span class="string">&#x27;https://your-gotify-server.com&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;app_token&#x27;</span> =&gt; <span class="string">&#x27;your-app-token&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;enable_comments&#x27;</span> =&gt; <span class="literal">true</span>,</span><br><span class="line">    <span class="string">&#x27;enable_posts&#x27;</span> =&gt; <span class="literal">true</span>,</span><br><span class="line">    <span class="string">&#x27;enable_system&#x27;</span> =&gt; <span class="literal">true</span>,</span><br><span class="line">    <span class="string">&#x27;notification_priority&#x27;</span> =&gt; <span class="number">0</span></span><br><span class="line">);</span><br></pre></td></tr></table></figure><h3 id="3-客户端配置"><a href="#3-客户端配置" class="headerlink" title="3. 客户端配置"></a>3. 客户端配置</h3><ul><li>下载Gotify客户端应用</li><li>配置服务器地址和认证信息</li><li>设置通知偏好</li></ul><h2 id="使用场景"><a href="#使用场景" class="headerlink" title="使用场景"></a>使用场景</h2><h3 id="博客管理"><a href="#博客管理" class="headerlink" title="博客管理"></a>博客管理</h3><ul><li>新评论实时提醒</li><li>系统状态监控</li><li>安全事件通知</li></ul><h3 id="用户服务"><a href="#用户服务" class="headerlink" title="用户服务"></a>用户服务</h3><ul><li>文章更新提醒</li><li>回复通知</li><li>重要公告推送</li></ul><h2 id="性能优化"><a href="#性能优化" class="headerlink" title="性能优化"></a>性能优化</h2><h3 id="推送优化"><a href="#推送优化" class="headerlink" title="推送优化"></a>推送优化</h3><ul><li>批量消息处理</li><li>智能重试机制</li><li>消息队列缓冲</li></ul><h3 id="资源管理"><a href="#资源管理" class="headerlink" title="资源管理"></a>资源管理</h3><ul><li>连接池复用</li><li>内存使用优化</li><li>数据库查询优化</li></ul><h2 id="安全考虑"><a href="#安全考虑" class="headerlink" title="安全考虑"></a>安全考虑</h2><h3 id="认证安全"><a href="#认证安全" class="headerlink" title="认证安全"></a>认证安全</h3><ul><li>Token加密存储</li><li>HTTPS通信加密</li><li>访问权限控制</li></ul><h3 id="数据保护"><a href="#数据保护" class="headerlink" title="数据保护"></a>数据保护</h3><ul><li>敏感信息过滤</li><li>日志记录审计</li><li>异常行为监控</li></ul><h2 id="扩展功能"><a href="#扩展功能" class="headerlink" title="扩展功能"></a>扩展功能</h2><h3 id="插件扩展"><a href="#插件扩展" class="headerlink" title="插件扩展"></a>插件扩展</h3><ul><li>支持自定义通知模板</li><li>支持多种推送服务</li><li>支持条件触发规则</li></ul><h3 id="集成能力"><a href="#集成能力" class="headerlink" title="集成能力"></a>集成能力</h3><ul><li>与现有通知系统集成</li><li>支持Webhook回调</li><li>支持第三方服务集成</li></ul><h2 id="故障排除"><a href="#故障排除" class="headerlink" title="故障排除"></a>故障排除</h2><h3 id="常见问题"><a href="#常见问题" class="headerlink" title="常见问题"></a>常见问题</h3><ol><li><strong>连接失败</strong>：检查网络和服务器状态</li><li><strong>认证错误</strong>：验证Token配置</li><li><strong>推送延迟</strong>：检查服务器负载</li></ol><h3 id="调试方法"><a href="#调试方法" class="headerlink" title="调试方法"></a>调试方法</h3><ul><li>启用详细日志</li><li>检查网络连接</li><li>验证API响应</li></ul><hr><p><em>GotifyNotify让ongwu博客通知更智能、更及时！</em></p>]]></content>
      
      
      <categories>
          
          <category> tech </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ongwu插件 </tag>
            
            <tag> 通知系统 </tag>
            
            <tag> Gotify </tag>
            
            <tag> 消息推送 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>GotifyNotify</title>
      <link href="/2025/01/10/10%20-%20%E5%89%AF%E6%9C%AC%20(27)/"/>
      <url>/2025/01/10/10%20-%20%E5%89%AF%E6%9C%AC%20(27)/</url>
      
        <content type="html"><![CDATA[<h1 id="GotifyNotify-ongwu通知插件"><a href="#GotifyNotify-ongwu通知插件" class="headerlink" title="GotifyNotify - ongwu通知插件"></a>GotifyNotify - ongwu通知插件</h1><h2 id="插件概述"><a href="#插件概述" class="headerlink" title="插件概述"></a>插件概述</h2><p>GotifyNotify是一个专为ongwu博客开发的通知插件，通过集成Gotify服务，为博客管理员和用户提供实时的消息推送功能。无论是新评论、新文章还是系统通知，都能及时推送到指定设备。</p><h2 id="主要功能"><a href="#主要功能" class="headerlink" title="主要功能"></a>主要功能</h2><h3 id="通知类型"><a href="#通知类型" class="headerlink" title="通知类型"></a>通知类型</h3><ul><li><strong>评论通知</strong>：新评论发布时自动推送</li><li><strong>文章通知</strong>：新文章发布时通知订阅用户</li><li><strong>系统通知</strong>：重要系统事件实时推送</li><li><strong>自定义通知</strong>：支持自定义消息内容</li></ul><h3 id="推送方式"><a href="#推送方式" class="headerlink" title="推送方式"></a>推送方式</h3><ul><li><strong>Gotify服务</strong>：通过Gotify API推送消息</li><li><strong>多设备支持</strong>：支持Android、iOS、Web等平台</li><li><strong>实时推送</strong>：毫秒级消息传递</li><li><strong>离线存储</strong>：消息持久化存储</li></ul><h2 id="技术架构"><a href="#技术架构" class="headerlink" title="技术架构"></a>技术架构</h2><h3 id="系统架构图"><a href="#系统架构图" class="headerlink" title="系统架构图"></a>系统架构图</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ongwu博客 → GotifyNotify插件 → Gotify服务器 → 客户端设备</span><br><span class="line">     ↓              ↓              ↓           ↓</span><br><span class="line">   事件触发     消息处理      消息分发     消息接收</span><br></pre></td></tr></table></figure><h3 id="核心代码实现"><a href="#核心代码实现" class="headerlink" title="核心代码实现"></a>核心代码实现</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 通知处理类</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">GotifyNotify_Handler</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$gotifyUrl</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$appToken</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$url</span>, <span class="variable">$token</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;gotifyUrl = <span class="variable">$url</span>;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;appToken = <span class="variable">$token</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 发送通知</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">sendNotification</span>(<span class="params"><span class="variable">$title</span>, <span class="variable">$message</span>, <span class="variable">$priority</span> = <span class="number">0</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable">$data</span> = <span class="keyword">array</span>(</span><br><span class="line">            <span class="string">&#x27;title&#x27;</span> =&gt; <span class="variable">$title</span>,</span><br><span class="line">            <span class="string">&#x27;message&#x27;</span> =&gt; <span class="variable">$message</span>,</span><br><span class="line">            <span class="string">&#x27;priority&#x27;</span> =&gt; <span class="variable">$priority</span></span><br><span class="line">        );</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">postToGotify</span>(<span class="variable">$data</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 推送到Gotify</span></span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">postToGotify</span>(<span class="params"><span class="variable">$data</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable">$ch</span> = <span class="title function_ invoke__">curl_init</span>();</span><br><span class="line">        <span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$ch</span>, CURLOPT_URL, <span class="variable">$this</span>-&gt;gotifyUrl . <span class="string">&#x27;/message&#x27;</span>);</span><br><span class="line">        <span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$ch</span>, CURLOPT_POST, <span class="literal">true</span>);</span><br><span class="line">        <span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$ch</span>, CURLOPT_POSTFIELDS, <span class="title function_ invoke__">json_encode</span>(<span class="variable">$data</span>));</span><br><span class="line">        <span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$ch</span>, CURLOPT_HTTPHEADER, <span class="keyword">array</span>(</span><br><span class="line">            <span class="string">&#x27;X-Gotify-Key: &#x27;</span> . <span class="variable">$this</span>-&gt;appToken,</span><br><span class="line">            <span class="string">&#x27;Content-Type: application/json&#x27;</span></span><br><span class="line">        ));</span><br><span class="line">        </span><br><span class="line">        <span class="variable">$response</span> = <span class="title function_ invoke__">curl_exec</span>(<span class="variable">$ch</span>);</span><br><span class="line">        <span class="title function_ invoke__">curl_close</span>(<span class="variable">$ch</span>);</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$response</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="安装配置"><a href="#安装配置" class="headerlink" title="安装配置"></a>安装配置</h2><h3 id="1-安装Gotify服务器"><a href="#1-安装Gotify服务器" class="headerlink" title="1. 安装Gotify服务器"></a>1. 安装Gotify服务器</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Docker安装方式</span></span><br><span class="line">docker run -p 80:80 -p 443:443 \</span><br><span class="line">  -v /var/gotify:/app/data \</span><br><span class="line">  gotify/server</span><br></pre></td></tr></table></figure><h3 id="2-配置插件"><a href="#2-配置插件" class="headerlink" title="2. 配置插件"></a>2. 配置插件</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 插件配置</span></span><br><span class="line"><span class="keyword">return</span> <span class="keyword">array</span>(</span><br><span class="line">    <span class="string">&#x27;gotify_url&#x27;</span> =&gt; <span class="string">&#x27;https://your-gotify-server.com&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;app_token&#x27;</span> =&gt; <span class="string">&#x27;your-app-token&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;enable_comments&#x27;</span> =&gt; <span class="literal">true</span>,</span><br><span class="line">    <span class="string">&#x27;enable_posts&#x27;</span> =&gt; <span class="literal">true</span>,</span><br><span class="line">    <span class="string">&#x27;enable_system&#x27;</span> =&gt; <span class="literal">true</span>,</span><br><span class="line">    <span class="string">&#x27;notification_priority&#x27;</span> =&gt; <span class="number">0</span></span><br><span class="line">);</span><br></pre></td></tr></table></figure><h3 id="3-客户端配置"><a href="#3-客户端配置" class="headerlink" title="3. 客户端配置"></a>3. 客户端配置</h3><ul><li>下载Gotify客户端应用</li><li>配置服务器地址和认证信息</li><li>设置通知偏好</li></ul><h2 id="使用场景"><a href="#使用场景" class="headerlink" title="使用场景"></a>使用场景</h2><h3 id="博客管理"><a href="#博客管理" class="headerlink" title="博客管理"></a>博客管理</h3><ul><li>新评论实时提醒</li><li>系统状态监控</li><li>安全事件通知</li></ul><h3 id="用户服务"><a href="#用户服务" class="headerlink" title="用户服务"></a>用户服务</h3><ul><li>文章更新提醒</li><li>回复通知</li><li>重要公告推送</li></ul><h2 id="性能优化"><a href="#性能优化" class="headerlink" title="性能优化"></a>性能优化</h2><h3 id="推送优化"><a href="#推送优化" class="headerlink" title="推送优化"></a>推送优化</h3><ul><li>批量消息处理</li><li>智能重试机制</li><li>消息队列缓冲</li></ul><h3 id="资源管理"><a href="#资源管理" class="headerlink" title="资源管理"></a>资源管理</h3><ul><li>连接池复用</li><li>内存使用优化</li><li>数据库查询优化</li></ul><h2 id="安全考虑"><a href="#安全考虑" class="headerlink" title="安全考虑"></a>安全考虑</h2><h3 id="认证安全"><a href="#认证安全" class="headerlink" title="认证安全"></a>认证安全</h3><ul><li>Token加密存储</li><li>HTTPS通信加密</li><li>访问权限控制</li></ul><h3 id="数据保护"><a href="#数据保护" class="headerlink" title="数据保护"></a>数据保护</h3><ul><li>敏感信息过滤</li><li>日志记录审计</li><li>异常行为监控</li></ul><h2 id="扩展功能"><a href="#扩展功能" class="headerlink" title="扩展功能"></a>扩展功能</h2><h3 id="插件扩展"><a href="#插件扩展" class="headerlink" title="插件扩展"></a>插件扩展</h3><ul><li>支持自定义通知模板</li><li>支持多种推送服务</li><li>支持条件触发规则</li></ul><h3 id="集成能力"><a href="#集成能力" class="headerlink" title="集成能力"></a>集成能力</h3><ul><li>与现有通知系统集成</li><li>支持Webhook回调</li><li>支持第三方服务集成</li></ul><h2 id="故障排除"><a href="#故障排除" class="headerlink" title="故障排除"></a>故障排除</h2><h3 id="常见问题"><a href="#常见问题" class="headerlink" title="常见问题"></a>常见问题</h3><ol><li><strong>连接失败</strong>：检查网络和服务器状态</li><li><strong>认证错误</strong>：验证Token配置</li><li><strong>推送延迟</strong>：检查服务器负载</li></ol><h3 id="调试方法"><a href="#调试方法" class="headerlink" title="调试方法"></a>调试方法</h3><ul><li>启用详细日志</li><li>检查网络连接</li><li>验证API响应</li></ul><hr><p><em>GotifyNotify让ongwu博客通知更智能、更及时！</em></p>]]></content>
      
      
      <categories>
          
          <category> tech </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ongwu插件 </tag>
            
            <tag> 通知系统 </tag>
            
            <tag> Gotify </tag>
            
            <tag> 消息推送 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>GotifyNotify</title>
      <link href="/2025/01/10/10%20-%20%E5%89%AF%E6%9C%AC%20(28)/"/>
      <url>/2025/01/10/10%20-%20%E5%89%AF%E6%9C%AC%20(28)/</url>
      
        <content type="html"><![CDATA[<h1 id="GotifyNotify-ongwu通知插件"><a href="#GotifyNotify-ongwu通知插件" class="headerlink" title="GotifyNotify - ongwu通知插件"></a>GotifyNotify - ongwu通知插件</h1><h2 id="插件概述"><a href="#插件概述" class="headerlink" title="插件概述"></a>插件概述</h2><p>GotifyNotify是一个专为ongwu博客开发的通知插件，通过集成Gotify服务，为博客管理员和用户提供实时的消息推送功能。无论是新评论、新文章还是系统通知，都能及时推送到指定设备。</p><h2 id="主要功能"><a href="#主要功能" class="headerlink" title="主要功能"></a>主要功能</h2><h3 id="通知类型"><a href="#通知类型" class="headerlink" title="通知类型"></a>通知类型</h3><ul><li><strong>评论通知</strong>：新评论发布时自动推送</li><li><strong>文章通知</strong>：新文章发布时通知订阅用户</li><li><strong>系统通知</strong>：重要系统事件实时推送</li><li><strong>自定义通知</strong>：支持自定义消息内容</li></ul><h3 id="推送方式"><a href="#推送方式" class="headerlink" title="推送方式"></a>推送方式</h3><ul><li><strong>Gotify服务</strong>：通过Gotify API推送消息</li><li><strong>多设备支持</strong>：支持Android、iOS、Web等平台</li><li><strong>实时推送</strong>：毫秒级消息传递</li><li><strong>离线存储</strong>：消息持久化存储</li></ul><h2 id="技术架构"><a href="#技术架构" class="headerlink" title="技术架构"></a>技术架构</h2><h3 id="系统架构图"><a href="#系统架构图" class="headerlink" title="系统架构图"></a>系统架构图</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ongwu博客 → GotifyNotify插件 → Gotify服务器 → 客户端设备</span><br><span class="line">     ↓              ↓              ↓           ↓</span><br><span class="line">   事件触发     消息处理      消息分发     消息接收</span><br></pre></td></tr></table></figure><h3 id="核心代码实现"><a href="#核心代码实现" class="headerlink" title="核心代码实现"></a>核心代码实现</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 通知处理类</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">GotifyNotify_Handler</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$gotifyUrl</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$appToken</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$url</span>, <span class="variable">$token</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;gotifyUrl = <span class="variable">$url</span>;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;appToken = <span class="variable">$token</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 发送通知</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">sendNotification</span>(<span class="params"><span class="variable">$title</span>, <span class="variable">$message</span>, <span class="variable">$priority</span> = <span class="number">0</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable">$data</span> = <span class="keyword">array</span>(</span><br><span class="line">            <span class="string">&#x27;title&#x27;</span> =&gt; <span class="variable">$title</span>,</span><br><span class="line">            <span class="string">&#x27;message&#x27;</span> =&gt; <span class="variable">$message</span>,</span><br><span class="line">            <span class="string">&#x27;priority&#x27;</span> =&gt; <span class="variable">$priority</span></span><br><span class="line">        );</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">postToGotify</span>(<span class="variable">$data</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 推送到Gotify</span></span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">postToGotify</span>(<span class="params"><span class="variable">$data</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable">$ch</span> = <span class="title function_ invoke__">curl_init</span>();</span><br><span class="line">        <span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$ch</span>, CURLOPT_URL, <span class="variable">$this</span>-&gt;gotifyUrl . <span class="string">&#x27;/message&#x27;</span>);</span><br><span class="line">        <span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$ch</span>, CURLOPT_POST, <span class="literal">true</span>);</span><br><span class="line">        <span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$ch</span>, CURLOPT_POSTFIELDS, <span class="title function_ invoke__">json_encode</span>(<span class="variable">$data</span>));</span><br><span class="line">        <span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$ch</span>, CURLOPT_HTTPHEADER, <span class="keyword">array</span>(</span><br><span class="line">            <span class="string">&#x27;X-Gotify-Key: &#x27;</span> . <span class="variable">$this</span>-&gt;appToken,</span><br><span class="line">            <span class="string">&#x27;Content-Type: application/json&#x27;</span></span><br><span class="line">        ));</span><br><span class="line">        </span><br><span class="line">        <span class="variable">$response</span> = <span class="title function_ invoke__">curl_exec</span>(<span class="variable">$ch</span>);</span><br><span class="line">        <span class="title function_ invoke__">curl_close</span>(<span class="variable">$ch</span>);</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$response</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="安装配置"><a href="#安装配置" class="headerlink" title="安装配置"></a>安装配置</h2><h3 id="1-安装Gotify服务器"><a href="#1-安装Gotify服务器" class="headerlink" title="1. 安装Gotify服务器"></a>1. 安装Gotify服务器</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Docker安装方式</span></span><br><span class="line">docker run -p 80:80 -p 443:443 \</span><br><span class="line">  -v /var/gotify:/app/data \</span><br><span class="line">  gotify/server</span><br></pre></td></tr></table></figure><h3 id="2-配置插件"><a href="#2-配置插件" class="headerlink" title="2. 配置插件"></a>2. 配置插件</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 插件配置</span></span><br><span class="line"><span class="keyword">return</span> <span class="keyword">array</span>(</span><br><span class="line">    <span class="string">&#x27;gotify_url&#x27;</span> =&gt; <span class="string">&#x27;https://your-gotify-server.com&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;app_token&#x27;</span> =&gt; <span class="string">&#x27;your-app-token&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;enable_comments&#x27;</span> =&gt; <span class="literal">true</span>,</span><br><span class="line">    <span class="string">&#x27;enable_posts&#x27;</span> =&gt; <span class="literal">true</span>,</span><br><span class="line">    <span class="string">&#x27;enable_system&#x27;</span> =&gt; <span class="literal">true</span>,</span><br><span class="line">    <span class="string">&#x27;notification_priority&#x27;</span> =&gt; <span class="number">0</span></span><br><span class="line">);</span><br></pre></td></tr></table></figure><h3 id="3-客户端配置"><a href="#3-客户端配置" class="headerlink" title="3. 客户端配置"></a>3. 客户端配置</h3><ul><li>下载Gotify客户端应用</li><li>配置服务器地址和认证信息</li><li>设置通知偏好</li></ul><h2 id="使用场景"><a href="#使用场景" class="headerlink" title="使用场景"></a>使用场景</h2><h3 id="博客管理"><a href="#博客管理" class="headerlink" title="博客管理"></a>博客管理</h3><ul><li>新评论实时提醒</li><li>系统状态监控</li><li>安全事件通知</li></ul><h3 id="用户服务"><a href="#用户服务" class="headerlink" title="用户服务"></a>用户服务</h3><ul><li>文章更新提醒</li><li>回复通知</li><li>重要公告推送</li></ul><h2 id="性能优化"><a href="#性能优化" class="headerlink" title="性能优化"></a>性能优化</h2><h3 id="推送优化"><a href="#推送优化" class="headerlink" title="推送优化"></a>推送优化</h3><ul><li>批量消息处理</li><li>智能重试机制</li><li>消息队列缓冲</li></ul><h3 id="资源管理"><a href="#资源管理" class="headerlink" title="资源管理"></a>资源管理</h3><ul><li>连接池复用</li><li>内存使用优化</li><li>数据库查询优化</li></ul><h2 id="安全考虑"><a href="#安全考虑" class="headerlink" title="安全考虑"></a>安全考虑</h2><h3 id="认证安全"><a href="#认证安全" class="headerlink" title="认证安全"></a>认证安全</h3><ul><li>Token加密存储</li><li>HTTPS通信加密</li><li>访问权限控制</li></ul><h3 id="数据保护"><a href="#数据保护" class="headerlink" title="数据保护"></a>数据保护</h3><ul><li>敏感信息过滤</li><li>日志记录审计</li><li>异常行为监控</li></ul><h2 id="扩展功能"><a href="#扩展功能" class="headerlink" title="扩展功能"></a>扩展功能</h2><h3 id="插件扩展"><a href="#插件扩展" class="headerlink" title="插件扩展"></a>插件扩展</h3><ul><li>支持自定义通知模板</li><li>支持多种推送服务</li><li>支持条件触发规则</li></ul><h3 id="集成能力"><a href="#集成能力" class="headerlink" title="集成能力"></a>集成能力</h3><ul><li>与现有通知系统集成</li><li>支持Webhook回调</li><li>支持第三方服务集成</li></ul><h2 id="故障排除"><a href="#故障排除" class="headerlink" title="故障排除"></a>故障排除</h2><h3 id="常见问题"><a href="#常见问题" class="headerlink" title="常见问题"></a>常见问题</h3><ol><li><strong>连接失败</strong>：检查网络和服务器状态</li><li><strong>认证错误</strong>：验证Token配置</li><li><strong>推送延迟</strong>：检查服务器负载</li></ol><h3 id="调试方法"><a href="#调试方法" class="headerlink" title="调试方法"></a>调试方法</h3><ul><li>启用详细日志</li><li>检查网络连接</li><li>验证API响应</li></ul><hr><p><em>GotifyNotify让ongwu博客通知更智能、更及时！</em></p>]]></content>
      
      
      <categories>
          
          <category> tech </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ongwu插件 </tag>
            
            <tag> 通知系统 </tag>
            
            <tag> Gotify </tag>
            
            <tag> 消息推送 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>GotifyNotify</title>
      <link href="/2025/01/10/10%20-%20%E5%89%AF%E6%9C%AC%20(29)/"/>
      <url>/2025/01/10/10%20-%20%E5%89%AF%E6%9C%AC%20(29)/</url>
      
        <content type="html"><![CDATA[<h1 id="GotifyNotify-ongwu通知插件"><a href="#GotifyNotify-ongwu通知插件" class="headerlink" title="GotifyNotify - ongwu通知插件"></a>GotifyNotify - ongwu通知插件</h1><h2 id="插件概述"><a href="#插件概述" class="headerlink" title="插件概述"></a>插件概述</h2><p>GotifyNotify是一个专为ongwu博客开发的通知插件，通过集成Gotify服务，为博客管理员和用户提供实时的消息推送功能。无论是新评论、新文章还是系统通知，都能及时推送到指定设备。</p><h2 id="主要功能"><a href="#主要功能" class="headerlink" title="主要功能"></a>主要功能</h2><h3 id="通知类型"><a href="#通知类型" class="headerlink" title="通知类型"></a>通知类型</h3><ul><li><strong>评论通知</strong>：新评论发布时自动推送</li><li><strong>文章通知</strong>：新文章发布时通知订阅用户</li><li><strong>系统通知</strong>：重要系统事件实时推送</li><li><strong>自定义通知</strong>：支持自定义消息内容</li></ul><h3 id="推送方式"><a href="#推送方式" class="headerlink" title="推送方式"></a>推送方式</h3><ul><li><strong>Gotify服务</strong>：通过Gotify API推送消息</li><li><strong>多设备支持</strong>：支持Android、iOS、Web等平台</li><li><strong>实时推送</strong>：毫秒级消息传递</li><li><strong>离线存储</strong>：消息持久化存储</li></ul><h2 id="技术架构"><a href="#技术架构" class="headerlink" title="技术架构"></a>技术架构</h2><h3 id="系统架构图"><a href="#系统架构图" class="headerlink" title="系统架构图"></a>系统架构图</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ongwu博客 → GotifyNotify插件 → Gotify服务器 → 客户端设备</span><br><span class="line">     ↓              ↓              ↓           ↓</span><br><span class="line">   事件触发     消息处理      消息分发     消息接收</span><br></pre></td></tr></table></figure><h3 id="核心代码实现"><a href="#核心代码实现" class="headerlink" title="核心代码实现"></a>核心代码实现</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 通知处理类</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">GotifyNotify_Handler</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$gotifyUrl</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$appToken</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$url</span>, <span class="variable">$token</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;gotifyUrl = <span class="variable">$url</span>;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;appToken = <span class="variable">$token</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 发送通知</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">sendNotification</span>(<span class="params"><span class="variable">$title</span>, <span class="variable">$message</span>, <span class="variable">$priority</span> = <span class="number">0</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable">$data</span> = <span class="keyword">array</span>(</span><br><span class="line">            <span class="string">&#x27;title&#x27;</span> =&gt; <span class="variable">$title</span>,</span><br><span class="line">            <span class="string">&#x27;message&#x27;</span> =&gt; <span class="variable">$message</span>,</span><br><span class="line">            <span class="string">&#x27;priority&#x27;</span> =&gt; <span class="variable">$priority</span></span><br><span class="line">        );</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">postToGotify</span>(<span class="variable">$data</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 推送到Gotify</span></span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">postToGotify</span>(<span class="params"><span class="variable">$data</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable">$ch</span> = <span class="title function_ invoke__">curl_init</span>();</span><br><span class="line">        <span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$ch</span>, CURLOPT_URL, <span class="variable">$this</span>-&gt;gotifyUrl . <span class="string">&#x27;/message&#x27;</span>);</span><br><span class="line">        <span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$ch</span>, CURLOPT_POST, <span class="literal">true</span>);</span><br><span class="line">        <span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$ch</span>, CURLOPT_POSTFIELDS, <span class="title function_ invoke__">json_encode</span>(<span class="variable">$data</span>));</span><br><span class="line">        <span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$ch</span>, CURLOPT_HTTPHEADER, <span class="keyword">array</span>(</span><br><span class="line">            <span class="string">&#x27;X-Gotify-Key: &#x27;</span> . <span class="variable">$this</span>-&gt;appToken,</span><br><span class="line">            <span class="string">&#x27;Content-Type: application/json&#x27;</span></span><br><span class="line">        ));</span><br><span class="line">        </span><br><span class="line">        <span class="variable">$response</span> = <span class="title function_ invoke__">curl_exec</span>(<span class="variable">$ch</span>);</span><br><span class="line">        <span class="title function_ invoke__">curl_close</span>(<span class="variable">$ch</span>);</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$response</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="安装配置"><a href="#安装配置" class="headerlink" title="安装配置"></a>安装配置</h2><h3 id="1-安装Gotify服务器"><a href="#1-安装Gotify服务器" class="headerlink" title="1. 安装Gotify服务器"></a>1. 安装Gotify服务器</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Docker安装方式</span></span><br><span class="line">docker run -p 80:80 -p 443:443 \</span><br><span class="line">  -v /var/gotify:/app/data \</span><br><span class="line">  gotify/server</span><br></pre></td></tr></table></figure><h3 id="2-配置插件"><a href="#2-配置插件" class="headerlink" title="2. 配置插件"></a>2. 配置插件</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 插件配置</span></span><br><span class="line"><span class="keyword">return</span> <span class="keyword">array</span>(</span><br><span class="line">    <span class="string">&#x27;gotify_url&#x27;</span> =&gt; <span class="string">&#x27;https://your-gotify-server.com&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;app_token&#x27;</span> =&gt; <span class="string">&#x27;your-app-token&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;enable_comments&#x27;</span> =&gt; <span class="literal">true</span>,</span><br><span class="line">    <span class="string">&#x27;enable_posts&#x27;</span> =&gt; <span class="literal">true</span>,</span><br><span class="line">    <span class="string">&#x27;enable_system&#x27;</span> =&gt; <span class="literal">true</span>,</span><br><span class="line">    <span class="string">&#x27;notification_priority&#x27;</span> =&gt; <span class="number">0</span></span><br><span class="line">);</span><br></pre></td></tr></table></figure><h3 id="3-客户端配置"><a href="#3-客户端配置" class="headerlink" title="3. 客户端配置"></a>3. 客户端配置</h3><ul><li>下载Gotify客户端应用</li><li>配置服务器地址和认证信息</li><li>设置通知偏好</li></ul><h2 id="使用场景"><a href="#使用场景" class="headerlink" title="使用场景"></a>使用场景</h2><h3 id="博客管理"><a href="#博客管理" class="headerlink" title="博客管理"></a>博客管理</h3><ul><li>新评论实时提醒</li><li>系统状态监控</li><li>安全事件通知</li></ul><h3 id="用户服务"><a href="#用户服务" class="headerlink" title="用户服务"></a>用户服务</h3><ul><li>文章更新提醒</li><li>回复通知</li><li>重要公告推送</li></ul><h2 id="性能优化"><a href="#性能优化" class="headerlink" title="性能优化"></a>性能优化</h2><h3 id="推送优化"><a href="#推送优化" class="headerlink" title="推送优化"></a>推送优化</h3><ul><li>批量消息处理</li><li>智能重试机制</li><li>消息队列缓冲</li></ul><h3 id="资源管理"><a href="#资源管理" class="headerlink" title="资源管理"></a>资源管理</h3><ul><li>连接池复用</li><li>内存使用优化</li><li>数据库查询优化</li></ul><h2 id="安全考虑"><a href="#安全考虑" class="headerlink" title="安全考虑"></a>安全考虑</h2><h3 id="认证安全"><a href="#认证安全" class="headerlink" title="认证安全"></a>认证安全</h3><ul><li>Token加密存储</li><li>HTTPS通信加密</li><li>访问权限控制</li></ul><h3 id="数据保护"><a href="#数据保护" class="headerlink" title="数据保护"></a>数据保护</h3><ul><li>敏感信息过滤</li><li>日志记录审计</li><li>异常行为监控</li></ul><h2 id="扩展功能"><a href="#扩展功能" class="headerlink" title="扩展功能"></a>扩展功能</h2><h3 id="插件扩展"><a href="#插件扩展" class="headerlink" title="插件扩展"></a>插件扩展</h3><ul><li>支持自定义通知模板</li><li>支持多种推送服务</li><li>支持条件触发规则</li></ul><h3 id="集成能力"><a href="#集成能力" class="headerlink" title="集成能力"></a>集成能力</h3><ul><li>与现有通知系统集成</li><li>支持Webhook回调</li><li>支持第三方服务集成</li></ul><h2 id="故障排除"><a href="#故障排除" class="headerlink" title="故障排除"></a>故障排除</h2><h3 id="常见问题"><a href="#常见问题" class="headerlink" title="常见问题"></a>常见问题</h3><ol><li><strong>连接失败</strong>：检查网络和服务器状态</li><li><strong>认证错误</strong>：验证Token配置</li><li><strong>推送延迟</strong>：检查服务器负载</li></ol><h3 id="调试方法"><a href="#调试方法" class="headerlink" title="调试方法"></a>调试方法</h3><ul><li>启用详细日志</li><li>检查网络连接</li><li>验证API响应</li></ul><hr><p><em>GotifyNotify让ongwu博客通知更智能、更及时！</em></p>]]></content>
      
      
      <categories>
          
          <category> tech </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ongwu插件 </tag>
            
            <tag> 通知系统 </tag>
            
            <tag> Gotify </tag>
            
            <tag> 消息推送 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>GotifyNotify</title>
      <link href="/2025/01/10/10%20-%20%E5%89%AF%E6%9C%AC%20(3)/"/>
      <url>/2025/01/10/10%20-%20%E5%89%AF%E6%9C%AC%20(3)/</url>
      
        <content type="html"><![CDATA[<h1 id="GotifyNotify-ongwu通知插件"><a href="#GotifyNotify-ongwu通知插件" class="headerlink" title="GotifyNotify - ongwu通知插件"></a>GotifyNotify - ongwu通知插件</h1><h2 id="插件概述"><a href="#插件概述" class="headerlink" title="插件概述"></a>插件概述</h2><p>GotifyNotify是一个专为ongwu博客开发的通知插件，通过集成Gotify服务，为博客管理员和用户提供实时的消息推送功能。无论是新评论、新文章还是系统通知，都能及时推送到指定设备。</p><h2 id="主要功能"><a href="#主要功能" class="headerlink" title="主要功能"></a>主要功能</h2><h3 id="通知类型"><a href="#通知类型" class="headerlink" title="通知类型"></a>通知类型</h3><ul><li><strong>评论通知</strong>：新评论发布时自动推送</li><li><strong>文章通知</strong>：新文章发布时通知订阅用户</li><li><strong>系统通知</strong>：重要系统事件实时推送</li><li><strong>自定义通知</strong>：支持自定义消息内容</li></ul><h3 id="推送方式"><a href="#推送方式" class="headerlink" title="推送方式"></a>推送方式</h3><ul><li><strong>Gotify服务</strong>：通过Gotify API推送消息</li><li><strong>多设备支持</strong>：支持Android、iOS、Web等平台</li><li><strong>实时推送</strong>：毫秒级消息传递</li><li><strong>离线存储</strong>：消息持久化存储</li></ul><h2 id="技术架构"><a href="#技术架构" class="headerlink" title="技术架构"></a>技术架构</h2><h3 id="系统架构图"><a href="#系统架构图" class="headerlink" title="系统架构图"></a>系统架构图</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ongwu博客 → GotifyNotify插件 → Gotify服务器 → 客户端设备</span><br><span class="line">     ↓              ↓              ↓           ↓</span><br><span class="line">   事件触发     消息处理      消息分发     消息接收</span><br></pre></td></tr></table></figure><h3 id="核心代码实现"><a href="#核心代码实现" class="headerlink" title="核心代码实现"></a>核心代码实现</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 通知处理类</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">GotifyNotify_Handler</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$gotifyUrl</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$appToken</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$url</span>, <span class="variable">$token</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;gotifyUrl = <span class="variable">$url</span>;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;appToken = <span class="variable">$token</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 发送通知</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">sendNotification</span>(<span class="params"><span class="variable">$title</span>, <span class="variable">$message</span>, <span class="variable">$priority</span> = <span class="number">0</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable">$data</span> = <span class="keyword">array</span>(</span><br><span class="line">            <span class="string">&#x27;title&#x27;</span> =&gt; <span class="variable">$title</span>,</span><br><span class="line">            <span class="string">&#x27;message&#x27;</span> =&gt; <span class="variable">$message</span>,</span><br><span class="line">            <span class="string">&#x27;priority&#x27;</span> =&gt; <span class="variable">$priority</span></span><br><span class="line">        );</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">postToGotify</span>(<span class="variable">$data</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 推送到Gotify</span></span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">postToGotify</span>(<span class="params"><span class="variable">$data</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable">$ch</span> = <span class="title function_ invoke__">curl_init</span>();</span><br><span class="line">        <span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$ch</span>, CURLOPT_URL, <span class="variable">$this</span>-&gt;gotifyUrl . <span class="string">&#x27;/message&#x27;</span>);</span><br><span class="line">        <span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$ch</span>, CURLOPT_POST, <span class="literal">true</span>);</span><br><span class="line">        <span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$ch</span>, CURLOPT_POSTFIELDS, <span class="title function_ invoke__">json_encode</span>(<span class="variable">$data</span>));</span><br><span class="line">        <span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$ch</span>, CURLOPT_HTTPHEADER, <span class="keyword">array</span>(</span><br><span class="line">            <span class="string">&#x27;X-Gotify-Key: &#x27;</span> . <span class="variable">$this</span>-&gt;appToken,</span><br><span class="line">            <span class="string">&#x27;Content-Type: application/json&#x27;</span></span><br><span class="line">        ));</span><br><span class="line">        </span><br><span class="line">        <span class="variable">$response</span> = <span class="title function_ invoke__">curl_exec</span>(<span class="variable">$ch</span>);</span><br><span class="line">        <span class="title function_ invoke__">curl_close</span>(<span class="variable">$ch</span>);</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$response</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="安装配置"><a href="#安装配置" class="headerlink" title="安装配置"></a>安装配置</h2><h3 id="1-安装Gotify服务器"><a href="#1-安装Gotify服务器" class="headerlink" title="1. 安装Gotify服务器"></a>1. 安装Gotify服务器</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Docker安装方式</span></span><br><span class="line">docker run -p 80:80 -p 443:443 \</span><br><span class="line">  -v /var/gotify:/app/data \</span><br><span class="line">  gotify/server</span><br></pre></td></tr></table></figure><h3 id="2-配置插件"><a href="#2-配置插件" class="headerlink" title="2. 配置插件"></a>2. 配置插件</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 插件配置</span></span><br><span class="line"><span class="keyword">return</span> <span class="keyword">array</span>(</span><br><span class="line">    <span class="string">&#x27;gotify_url&#x27;</span> =&gt; <span class="string">&#x27;https://your-gotify-server.com&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;app_token&#x27;</span> =&gt; <span class="string">&#x27;your-app-token&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;enable_comments&#x27;</span> =&gt; <span class="literal">true</span>,</span><br><span class="line">    <span class="string">&#x27;enable_posts&#x27;</span> =&gt; <span class="literal">true</span>,</span><br><span class="line">    <span class="string">&#x27;enable_system&#x27;</span> =&gt; <span class="literal">true</span>,</span><br><span class="line">    <span class="string">&#x27;notification_priority&#x27;</span> =&gt; <span class="number">0</span></span><br><span class="line">);</span><br></pre></td></tr></table></figure><h3 id="3-客户端配置"><a href="#3-客户端配置" class="headerlink" title="3. 客户端配置"></a>3. 客户端配置</h3><ul><li>下载Gotify客户端应用</li><li>配置服务器地址和认证信息</li><li>设置通知偏好</li></ul><h2 id="使用场景"><a href="#使用场景" class="headerlink" title="使用场景"></a>使用场景</h2><h3 id="博客管理"><a href="#博客管理" class="headerlink" title="博客管理"></a>博客管理</h3><ul><li>新评论实时提醒</li><li>系统状态监控</li><li>安全事件通知</li></ul><h3 id="用户服务"><a href="#用户服务" class="headerlink" title="用户服务"></a>用户服务</h3><ul><li>文章更新提醒</li><li>回复通知</li><li>重要公告推送</li></ul><h2 id="性能优化"><a href="#性能优化" class="headerlink" title="性能优化"></a>性能优化</h2><h3 id="推送优化"><a href="#推送优化" class="headerlink" title="推送优化"></a>推送优化</h3><ul><li>批量消息处理</li><li>智能重试机制</li><li>消息队列缓冲</li></ul><h3 id="资源管理"><a href="#资源管理" class="headerlink" title="资源管理"></a>资源管理</h3><ul><li>连接池复用</li><li>内存使用优化</li><li>数据库查询优化</li></ul><h2 id="安全考虑"><a href="#安全考虑" class="headerlink" title="安全考虑"></a>安全考虑</h2><h3 id="认证安全"><a href="#认证安全" class="headerlink" title="认证安全"></a>认证安全</h3><ul><li>Token加密存储</li><li>HTTPS通信加密</li><li>访问权限控制</li></ul><h3 id="数据保护"><a href="#数据保护" class="headerlink" title="数据保护"></a>数据保护</h3><ul><li>敏感信息过滤</li><li>日志记录审计</li><li>异常行为监控</li></ul><h2 id="扩展功能"><a href="#扩展功能" class="headerlink" title="扩展功能"></a>扩展功能</h2><h3 id="插件扩展"><a href="#插件扩展" class="headerlink" title="插件扩展"></a>插件扩展</h3><ul><li>支持自定义通知模板</li><li>支持多种推送服务</li><li>支持条件触发规则</li></ul><h3 id="集成能力"><a href="#集成能力" class="headerlink" title="集成能力"></a>集成能力</h3><ul><li>与现有通知系统集成</li><li>支持Webhook回调</li><li>支持第三方服务集成</li></ul><h2 id="故障排除"><a href="#故障排除" class="headerlink" title="故障排除"></a>故障排除</h2><h3 id="常见问题"><a href="#常见问题" class="headerlink" title="常见问题"></a>常见问题</h3><ol><li><strong>连接失败</strong>：检查网络和服务器状态</li><li><strong>认证错误</strong>：验证Token配置</li><li><strong>推送延迟</strong>：检查服务器负载</li></ol><h3 id="调试方法"><a href="#调试方法" class="headerlink" title="调试方法"></a>调试方法</h3><ul><li>启用详细日志</li><li>检查网络连接</li><li>验证API响应</li></ul><hr><p><em>GotifyNotify让ongwu博客通知更智能、更及时！</em></p>]]></content>
      
      
      <categories>
          
          <category> tech </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ongwu插件 </tag>
            
            <tag> 通知系统 </tag>
            
            <tag> Gotify </tag>
            
            <tag> 消息推送 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>GotifyNotify</title>
      <link href="/2025/01/10/10%20-%20%E5%89%AF%E6%9C%AC%20(4)/"/>
      <url>/2025/01/10/10%20-%20%E5%89%AF%E6%9C%AC%20(4)/</url>
      
        <content type="html"><![CDATA[<h1 id="GotifyNotify-ongwu通知插件"><a href="#GotifyNotify-ongwu通知插件" class="headerlink" title="GotifyNotify - ongwu通知插件"></a>GotifyNotify - ongwu通知插件</h1><h2 id="插件概述"><a href="#插件概述" class="headerlink" title="插件概述"></a>插件概述</h2><p>GotifyNotify是一个专为ongwu博客开发的通知插件，通过集成Gotify服务，为博客管理员和用户提供实时的消息推送功能。无论是新评论、新文章还是系统通知，都能及时推送到指定设备。</p><h2 id="主要功能"><a href="#主要功能" class="headerlink" title="主要功能"></a>主要功能</h2><h3 id="通知类型"><a href="#通知类型" class="headerlink" title="通知类型"></a>通知类型</h3><ul><li><strong>评论通知</strong>：新评论发布时自动推送</li><li><strong>文章通知</strong>：新文章发布时通知订阅用户</li><li><strong>系统通知</strong>：重要系统事件实时推送</li><li><strong>自定义通知</strong>：支持自定义消息内容</li></ul><h3 id="推送方式"><a href="#推送方式" class="headerlink" title="推送方式"></a>推送方式</h3><ul><li><strong>Gotify服务</strong>：通过Gotify API推送消息</li><li><strong>多设备支持</strong>：支持Android、iOS、Web等平台</li><li><strong>实时推送</strong>：毫秒级消息传递</li><li><strong>离线存储</strong>：消息持久化存储</li></ul><h2 id="技术架构"><a href="#技术架构" class="headerlink" title="技术架构"></a>技术架构</h2><h3 id="系统架构图"><a href="#系统架构图" class="headerlink" title="系统架构图"></a>系统架构图</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ongwu博客 → GotifyNotify插件 → Gotify服务器 → 客户端设备</span><br><span class="line">     ↓              ↓              ↓           ↓</span><br><span class="line">   事件触发     消息处理      消息分发     消息接收</span><br></pre></td></tr></table></figure><h3 id="核心代码实现"><a href="#核心代码实现" class="headerlink" title="核心代码实现"></a>核心代码实现</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 通知处理类</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">GotifyNotify_Handler</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$gotifyUrl</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$appToken</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$url</span>, <span class="variable">$token</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;gotifyUrl = <span class="variable">$url</span>;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;appToken = <span class="variable">$token</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 发送通知</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">sendNotification</span>(<span class="params"><span class="variable">$title</span>, <span class="variable">$message</span>, <span class="variable">$priority</span> = <span class="number">0</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable">$data</span> = <span class="keyword">array</span>(</span><br><span class="line">            <span class="string">&#x27;title&#x27;</span> =&gt; <span class="variable">$title</span>,</span><br><span class="line">            <span class="string">&#x27;message&#x27;</span> =&gt; <span class="variable">$message</span>,</span><br><span class="line">            <span class="string">&#x27;priority&#x27;</span> =&gt; <span class="variable">$priority</span></span><br><span class="line">        );</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">postToGotify</span>(<span class="variable">$data</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 推送到Gotify</span></span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">postToGotify</span>(<span class="params"><span class="variable">$data</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable">$ch</span> = <span class="title function_ invoke__">curl_init</span>();</span><br><span class="line">        <span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$ch</span>, CURLOPT_URL, <span class="variable">$this</span>-&gt;gotifyUrl . <span class="string">&#x27;/message&#x27;</span>);</span><br><span class="line">        <span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$ch</span>, CURLOPT_POST, <span class="literal">true</span>);</span><br><span class="line">        <span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$ch</span>, CURLOPT_POSTFIELDS, <span class="title function_ invoke__">json_encode</span>(<span class="variable">$data</span>));</span><br><span class="line">        <span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$ch</span>, CURLOPT_HTTPHEADER, <span class="keyword">array</span>(</span><br><span class="line">            <span class="string">&#x27;X-Gotify-Key: &#x27;</span> . <span class="variable">$this</span>-&gt;appToken,</span><br><span class="line">            <span class="string">&#x27;Content-Type: application/json&#x27;</span></span><br><span class="line">        ));</span><br><span class="line">        </span><br><span class="line">        <span class="variable">$response</span> = <span class="title function_ invoke__">curl_exec</span>(<span class="variable">$ch</span>);</span><br><span class="line">        <span class="title function_ invoke__">curl_close</span>(<span class="variable">$ch</span>);</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$response</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="安装配置"><a href="#安装配置" class="headerlink" title="安装配置"></a>安装配置</h2><h3 id="1-安装Gotify服务器"><a href="#1-安装Gotify服务器" class="headerlink" title="1. 安装Gotify服务器"></a>1. 安装Gotify服务器</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Docker安装方式</span></span><br><span class="line">docker run -p 80:80 -p 443:443 \</span><br><span class="line">  -v /var/gotify:/app/data \</span><br><span class="line">  gotify/server</span><br></pre></td></tr></table></figure><h3 id="2-配置插件"><a href="#2-配置插件" class="headerlink" title="2. 配置插件"></a>2. 配置插件</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 插件配置</span></span><br><span class="line"><span class="keyword">return</span> <span class="keyword">array</span>(</span><br><span class="line">    <span class="string">&#x27;gotify_url&#x27;</span> =&gt; <span class="string">&#x27;https://your-gotify-server.com&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;app_token&#x27;</span> =&gt; <span class="string">&#x27;your-app-token&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;enable_comments&#x27;</span> =&gt; <span class="literal">true</span>,</span><br><span class="line">    <span class="string">&#x27;enable_posts&#x27;</span> =&gt; <span class="literal">true</span>,</span><br><span class="line">    <span class="string">&#x27;enable_system&#x27;</span> =&gt; <span class="literal">true</span>,</span><br><span class="line">    <span class="string">&#x27;notification_priority&#x27;</span> =&gt; <span class="number">0</span></span><br><span class="line">);</span><br></pre></td></tr></table></figure><h3 id="3-客户端配置"><a href="#3-客户端配置" class="headerlink" title="3. 客户端配置"></a>3. 客户端配置</h3><ul><li>下载Gotify客户端应用</li><li>配置服务器地址和认证信息</li><li>设置通知偏好</li></ul><h2 id="使用场景"><a href="#使用场景" class="headerlink" title="使用场景"></a>使用场景</h2><h3 id="博客管理"><a href="#博客管理" class="headerlink" title="博客管理"></a>博客管理</h3><ul><li>新评论实时提醒</li><li>系统状态监控</li><li>安全事件通知</li></ul><h3 id="用户服务"><a href="#用户服务" class="headerlink" title="用户服务"></a>用户服务</h3><ul><li>文章更新提醒</li><li>回复通知</li><li>重要公告推送</li></ul><h2 id="性能优化"><a href="#性能优化" class="headerlink" title="性能优化"></a>性能优化</h2><h3 id="推送优化"><a href="#推送优化" class="headerlink" title="推送优化"></a>推送优化</h3><ul><li>批量消息处理</li><li>智能重试机制</li><li>消息队列缓冲</li></ul><h3 id="资源管理"><a href="#资源管理" class="headerlink" title="资源管理"></a>资源管理</h3><ul><li>连接池复用</li><li>内存使用优化</li><li>数据库查询优化</li></ul><h2 id="安全考虑"><a href="#安全考虑" class="headerlink" title="安全考虑"></a>安全考虑</h2><h3 id="认证安全"><a href="#认证安全" class="headerlink" title="认证安全"></a>认证安全</h3><ul><li>Token加密存储</li><li>HTTPS通信加密</li><li>访问权限控制</li></ul><h3 id="数据保护"><a href="#数据保护" class="headerlink" title="数据保护"></a>数据保护</h3><ul><li>敏感信息过滤</li><li>日志记录审计</li><li>异常行为监控</li></ul><h2 id="扩展功能"><a href="#扩展功能" class="headerlink" title="扩展功能"></a>扩展功能</h2><h3 id="插件扩展"><a href="#插件扩展" class="headerlink" title="插件扩展"></a>插件扩展</h3><ul><li>支持自定义通知模板</li><li>支持多种推送服务</li><li>支持条件触发规则</li></ul><h3 id="集成能力"><a href="#集成能力" class="headerlink" title="集成能力"></a>集成能力</h3><ul><li>与现有通知系统集成</li><li>支持Webhook回调</li><li>支持第三方服务集成</li></ul><h2 id="故障排除"><a href="#故障排除" class="headerlink" title="故障排除"></a>故障排除</h2><h3 id="常见问题"><a href="#常见问题" class="headerlink" title="常见问题"></a>常见问题</h3><ol><li><strong>连接失败</strong>：检查网络和服务器状态</li><li><strong>认证错误</strong>：验证Token配置</li><li><strong>推送延迟</strong>：检查服务器负载</li></ol><h3 id="调试方法"><a href="#调试方法" class="headerlink" title="调试方法"></a>调试方法</h3><ul><li>启用详细日志</li><li>检查网络连接</li><li>验证API响应</li></ul><hr><p><em>GotifyNotify让ongwu博客通知更智能、更及时！</em></p>]]></content>
      
      
      <categories>
          
          <category> tech </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ongwu插件 </tag>
            
            <tag> 通知系统 </tag>
            
            <tag> Gotify </tag>
            
            <tag> 消息推送 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>GotifyNotify</title>
      <link href="/2025/01/10/10%20-%20%E5%89%AF%E6%9C%AC%20(5)/"/>
      <url>/2025/01/10/10%20-%20%E5%89%AF%E6%9C%AC%20(5)/</url>
      
        <content type="html"><![CDATA[<h1 id="GotifyNotify-ongwu通知插件"><a href="#GotifyNotify-ongwu通知插件" class="headerlink" title="GotifyNotify - ongwu通知插件"></a>GotifyNotify - ongwu通知插件</h1><h2 id="插件概述"><a href="#插件概述" class="headerlink" title="插件概述"></a>插件概述</h2><p>GotifyNotify是一个专为ongwu博客开发的通知插件，通过集成Gotify服务，为博客管理员和用户提供实时的消息推送功能。无论是新评论、新文章还是系统通知，都能及时推送到指定设备。</p><h2 id="主要功能"><a href="#主要功能" class="headerlink" title="主要功能"></a>主要功能</h2><h3 id="通知类型"><a href="#通知类型" class="headerlink" title="通知类型"></a>通知类型</h3><ul><li><strong>评论通知</strong>：新评论发布时自动推送</li><li><strong>文章通知</strong>：新文章发布时通知订阅用户</li><li><strong>系统通知</strong>：重要系统事件实时推送</li><li><strong>自定义通知</strong>：支持自定义消息内容</li></ul><h3 id="推送方式"><a href="#推送方式" class="headerlink" title="推送方式"></a>推送方式</h3><ul><li><strong>Gotify服务</strong>：通过Gotify API推送消息</li><li><strong>多设备支持</strong>：支持Android、iOS、Web等平台</li><li><strong>实时推送</strong>：毫秒级消息传递</li><li><strong>离线存储</strong>：消息持久化存储</li></ul><h2 id="技术架构"><a href="#技术架构" class="headerlink" title="技术架构"></a>技术架构</h2><h3 id="系统架构图"><a href="#系统架构图" class="headerlink" title="系统架构图"></a>系统架构图</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ongwu博客 → GotifyNotify插件 → Gotify服务器 → 客户端设备</span><br><span class="line">     ↓              ↓              ↓           ↓</span><br><span class="line">   事件触发     消息处理      消息分发     消息接收</span><br></pre></td></tr></table></figure><h3 id="核心代码实现"><a href="#核心代码实现" class="headerlink" title="核心代码实现"></a>核心代码实现</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 通知处理类</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">GotifyNotify_Handler</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$gotifyUrl</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$appToken</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$url</span>, <span class="variable">$token</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;gotifyUrl = <span class="variable">$url</span>;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;appToken = <span class="variable">$token</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 发送通知</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">sendNotification</span>(<span class="params"><span class="variable">$title</span>, <span class="variable">$message</span>, <span class="variable">$priority</span> = <span class="number">0</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable">$data</span> = <span class="keyword">array</span>(</span><br><span class="line">            <span class="string">&#x27;title&#x27;</span> =&gt; <span class="variable">$title</span>,</span><br><span class="line">            <span class="string">&#x27;message&#x27;</span> =&gt; <span class="variable">$message</span>,</span><br><span class="line">            <span class="string">&#x27;priority&#x27;</span> =&gt; <span class="variable">$priority</span></span><br><span class="line">        );</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">postToGotify</span>(<span class="variable">$data</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 推送到Gotify</span></span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">postToGotify</span>(<span class="params"><span class="variable">$data</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable">$ch</span> = <span class="title function_ invoke__">curl_init</span>();</span><br><span class="line">        <span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$ch</span>, CURLOPT_URL, <span class="variable">$this</span>-&gt;gotifyUrl . <span class="string">&#x27;/message&#x27;</span>);</span><br><span class="line">        <span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$ch</span>, CURLOPT_POST, <span class="literal">true</span>);</span><br><span class="line">        <span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$ch</span>, CURLOPT_POSTFIELDS, <span class="title function_ invoke__">json_encode</span>(<span class="variable">$data</span>));</span><br><span class="line">        <span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$ch</span>, CURLOPT_HTTPHEADER, <span class="keyword">array</span>(</span><br><span class="line">            <span class="string">&#x27;X-Gotify-Key: &#x27;</span> . <span class="variable">$this</span>-&gt;appToken,</span><br><span class="line">            <span class="string">&#x27;Content-Type: application/json&#x27;</span></span><br><span class="line">        ));</span><br><span class="line">        </span><br><span class="line">        <span class="variable">$response</span> = <span class="title function_ invoke__">curl_exec</span>(<span class="variable">$ch</span>);</span><br><span class="line">        <span class="title function_ invoke__">curl_close</span>(<span class="variable">$ch</span>);</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$response</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="安装配置"><a href="#安装配置" class="headerlink" title="安装配置"></a>安装配置</h2><h3 id="1-安装Gotify服务器"><a href="#1-安装Gotify服务器" class="headerlink" title="1. 安装Gotify服务器"></a>1. 安装Gotify服务器</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Docker安装方式</span></span><br><span class="line">docker run -p 80:80 -p 443:443 \</span><br><span class="line">  -v /var/gotify:/app/data \</span><br><span class="line">  gotify/server</span><br></pre></td></tr></table></figure><h3 id="2-配置插件"><a href="#2-配置插件" class="headerlink" title="2. 配置插件"></a>2. 配置插件</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 插件配置</span></span><br><span class="line"><span class="keyword">return</span> <span class="keyword">array</span>(</span><br><span class="line">    <span class="string">&#x27;gotify_url&#x27;</span> =&gt; <span class="string">&#x27;https://your-gotify-server.com&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;app_token&#x27;</span> =&gt; <span class="string">&#x27;your-app-token&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;enable_comments&#x27;</span> =&gt; <span class="literal">true</span>,</span><br><span class="line">    <span class="string">&#x27;enable_posts&#x27;</span> =&gt; <span class="literal">true</span>,</span><br><span class="line">    <span class="string">&#x27;enable_system&#x27;</span> =&gt; <span class="literal">true</span>,</span><br><span class="line">    <span class="string">&#x27;notification_priority&#x27;</span> =&gt; <span class="number">0</span></span><br><span class="line">);</span><br></pre></td></tr></table></figure><h3 id="3-客户端配置"><a href="#3-客户端配置" class="headerlink" title="3. 客户端配置"></a>3. 客户端配置</h3><ul><li>下载Gotify客户端应用</li><li>配置服务器地址和认证信息</li><li>设置通知偏好</li></ul><h2 id="使用场景"><a href="#使用场景" class="headerlink" title="使用场景"></a>使用场景</h2><h3 id="博客管理"><a href="#博客管理" class="headerlink" title="博客管理"></a>博客管理</h3><ul><li>新评论实时提醒</li><li>系统状态监控</li><li>安全事件通知</li></ul><h3 id="用户服务"><a href="#用户服务" class="headerlink" title="用户服务"></a>用户服务</h3><ul><li>文章更新提醒</li><li>回复通知</li><li>重要公告推送</li></ul><h2 id="性能优化"><a href="#性能优化" class="headerlink" title="性能优化"></a>性能优化</h2><h3 id="推送优化"><a href="#推送优化" class="headerlink" title="推送优化"></a>推送优化</h3><ul><li>批量消息处理</li><li>智能重试机制</li><li>消息队列缓冲</li></ul><h3 id="资源管理"><a href="#资源管理" class="headerlink" title="资源管理"></a>资源管理</h3><ul><li>连接池复用</li><li>内存使用优化</li><li>数据库查询优化</li></ul><h2 id="安全考虑"><a href="#安全考虑" class="headerlink" title="安全考虑"></a>安全考虑</h2><h3 id="认证安全"><a href="#认证安全" class="headerlink" title="认证安全"></a>认证安全</h3><ul><li>Token加密存储</li><li>HTTPS通信加密</li><li>访问权限控制</li></ul><h3 id="数据保护"><a href="#数据保护" class="headerlink" title="数据保护"></a>数据保护</h3><ul><li>敏感信息过滤</li><li>日志记录审计</li><li>异常行为监控</li></ul><h2 id="扩展功能"><a href="#扩展功能" class="headerlink" title="扩展功能"></a>扩展功能</h2><h3 id="插件扩展"><a href="#插件扩展" class="headerlink" title="插件扩展"></a>插件扩展</h3><ul><li>支持自定义通知模板</li><li>支持多种推送服务</li><li>支持条件触发规则</li></ul><h3 id="集成能力"><a href="#集成能力" class="headerlink" title="集成能力"></a>集成能力</h3><ul><li>与现有通知系统集成</li><li>支持Webhook回调</li><li>支持第三方服务集成</li></ul><h2 id="故障排除"><a href="#故障排除" class="headerlink" title="故障排除"></a>故障排除</h2><h3 id="常见问题"><a href="#常见问题" class="headerlink" title="常见问题"></a>常见问题</h3><ol><li><strong>连接失败</strong>：检查网络和服务器状态</li><li><strong>认证错误</strong>：验证Token配置</li><li><strong>推送延迟</strong>：检查服务器负载</li></ol><h3 id="调试方法"><a href="#调试方法" class="headerlink" title="调试方法"></a>调试方法</h3><ul><li>启用详细日志</li><li>检查网络连接</li><li>验证API响应</li></ul><hr><p><em>GotifyNotify让ongwu博客通知更智能、更及时！</em></p>]]></content>
      
      
      <categories>
          
          <category> tech </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ongwu插件 </tag>
            
            <tag> 通知系统 </tag>
            
            <tag> Gotify </tag>
            
            <tag> 消息推送 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>GotifyNotify</title>
      <link href="/2025/01/10/10%20-%20%E5%89%AF%E6%9C%AC%20(6)/"/>
      <url>/2025/01/10/10%20-%20%E5%89%AF%E6%9C%AC%20(6)/</url>
      
        <content type="html"><![CDATA[<h1 id="GotifyNotify-ongwu通知插件"><a href="#GotifyNotify-ongwu通知插件" class="headerlink" title="GotifyNotify - ongwu通知插件"></a>GotifyNotify - ongwu通知插件</h1><h2 id="插件概述"><a href="#插件概述" class="headerlink" title="插件概述"></a>插件概述</h2><p>GotifyNotify是一个专为ongwu博客开发的通知插件，通过集成Gotify服务，为博客管理员和用户提供实时的消息推送功能。无论是新评论、新文章还是系统通知，都能及时推送到指定设备。</p><h2 id="主要功能"><a href="#主要功能" class="headerlink" title="主要功能"></a>主要功能</h2><h3 id="通知类型"><a href="#通知类型" class="headerlink" title="通知类型"></a>通知类型</h3><ul><li><strong>评论通知</strong>：新评论发布时自动推送</li><li><strong>文章通知</strong>：新文章发布时通知订阅用户</li><li><strong>系统通知</strong>：重要系统事件实时推送</li><li><strong>自定义通知</strong>：支持自定义消息内容</li></ul><h3 id="推送方式"><a href="#推送方式" class="headerlink" title="推送方式"></a>推送方式</h3><ul><li><strong>Gotify服务</strong>：通过Gotify API推送消息</li><li><strong>多设备支持</strong>：支持Android、iOS、Web等平台</li><li><strong>实时推送</strong>：毫秒级消息传递</li><li><strong>离线存储</strong>：消息持久化存储</li></ul><h2 id="技术架构"><a href="#技术架构" class="headerlink" title="技术架构"></a>技术架构</h2><h3 id="系统架构图"><a href="#系统架构图" class="headerlink" title="系统架构图"></a>系统架构图</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ongwu博客 → GotifyNotify插件 → Gotify服务器 → 客户端设备</span><br><span class="line">     ↓              ↓              ↓           ↓</span><br><span class="line">   事件触发     消息处理      消息分发     消息接收</span><br></pre></td></tr></table></figure><h3 id="核心代码实现"><a href="#核心代码实现" class="headerlink" title="核心代码实现"></a>核心代码实现</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 通知处理类</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">GotifyNotify_Handler</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$gotifyUrl</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$appToken</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$url</span>, <span class="variable">$token</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;gotifyUrl = <span class="variable">$url</span>;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;appToken = <span class="variable">$token</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 发送通知</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">sendNotification</span>(<span class="params"><span class="variable">$title</span>, <span class="variable">$message</span>, <span class="variable">$priority</span> = <span class="number">0</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable">$data</span> = <span class="keyword">array</span>(</span><br><span class="line">            <span class="string">&#x27;title&#x27;</span> =&gt; <span class="variable">$title</span>,</span><br><span class="line">            <span class="string">&#x27;message&#x27;</span> =&gt; <span class="variable">$message</span>,</span><br><span class="line">            <span class="string">&#x27;priority&#x27;</span> =&gt; <span class="variable">$priority</span></span><br><span class="line">        );</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">postToGotify</span>(<span class="variable">$data</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 推送到Gotify</span></span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">postToGotify</span>(<span class="params"><span class="variable">$data</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable">$ch</span> = <span class="title function_ invoke__">curl_init</span>();</span><br><span class="line">        <span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$ch</span>, CURLOPT_URL, <span class="variable">$this</span>-&gt;gotifyUrl . <span class="string">&#x27;/message&#x27;</span>);</span><br><span class="line">        <span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$ch</span>, CURLOPT_POST, <span class="literal">true</span>);</span><br><span class="line">        <span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$ch</span>, CURLOPT_POSTFIELDS, <span class="title function_ invoke__">json_encode</span>(<span class="variable">$data</span>));</span><br><span class="line">        <span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$ch</span>, CURLOPT_HTTPHEADER, <span class="keyword">array</span>(</span><br><span class="line">            <span class="string">&#x27;X-Gotify-Key: &#x27;</span> . <span class="variable">$this</span>-&gt;appToken,</span><br><span class="line">            <span class="string">&#x27;Content-Type: application/json&#x27;</span></span><br><span class="line">        ));</span><br><span class="line">        </span><br><span class="line">        <span class="variable">$response</span> = <span class="title function_ invoke__">curl_exec</span>(<span class="variable">$ch</span>);</span><br><span class="line">        <span class="title function_ invoke__">curl_close</span>(<span class="variable">$ch</span>);</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$response</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="安装配置"><a href="#安装配置" class="headerlink" title="安装配置"></a>安装配置</h2><h3 id="1-安装Gotify服务器"><a href="#1-安装Gotify服务器" class="headerlink" title="1. 安装Gotify服务器"></a>1. 安装Gotify服务器</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Docker安装方式</span></span><br><span class="line">docker run -p 80:80 -p 443:443 \</span><br><span class="line">  -v /var/gotify:/app/data \</span><br><span class="line">  gotify/server</span><br></pre></td></tr></table></figure><h3 id="2-配置插件"><a href="#2-配置插件" class="headerlink" title="2. 配置插件"></a>2. 配置插件</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 插件配置</span></span><br><span class="line"><span class="keyword">return</span> <span class="keyword">array</span>(</span><br><span class="line">    <span class="string">&#x27;gotify_url&#x27;</span> =&gt; <span class="string">&#x27;https://your-gotify-server.com&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;app_token&#x27;</span> =&gt; <span class="string">&#x27;your-app-token&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;enable_comments&#x27;</span> =&gt; <span class="literal">true</span>,</span><br><span class="line">    <span class="string">&#x27;enable_posts&#x27;</span> =&gt; <span class="literal">true</span>,</span><br><span class="line">    <span class="string">&#x27;enable_system&#x27;</span> =&gt; <span class="literal">true</span>,</span><br><span class="line">    <span class="string">&#x27;notification_priority&#x27;</span> =&gt; <span class="number">0</span></span><br><span class="line">);</span><br></pre></td></tr></table></figure><h3 id="3-客户端配置"><a href="#3-客户端配置" class="headerlink" title="3. 客户端配置"></a>3. 客户端配置</h3><ul><li>下载Gotify客户端应用</li><li>配置服务器地址和认证信息</li><li>设置通知偏好</li></ul><h2 id="使用场景"><a href="#使用场景" class="headerlink" title="使用场景"></a>使用场景</h2><h3 id="博客管理"><a href="#博客管理" class="headerlink" title="博客管理"></a>博客管理</h3><ul><li>新评论实时提醒</li><li>系统状态监控</li><li>安全事件通知</li></ul><h3 id="用户服务"><a href="#用户服务" class="headerlink" title="用户服务"></a>用户服务</h3><ul><li>文章更新提醒</li><li>回复通知</li><li>重要公告推送</li></ul><h2 id="性能优化"><a href="#性能优化" class="headerlink" title="性能优化"></a>性能优化</h2><h3 id="推送优化"><a href="#推送优化" class="headerlink" title="推送优化"></a>推送优化</h3><ul><li>批量消息处理</li><li>智能重试机制</li><li>消息队列缓冲</li></ul><h3 id="资源管理"><a href="#资源管理" class="headerlink" title="资源管理"></a>资源管理</h3><ul><li>连接池复用</li><li>内存使用优化</li><li>数据库查询优化</li></ul><h2 id="安全考虑"><a href="#安全考虑" class="headerlink" title="安全考虑"></a>安全考虑</h2><h3 id="认证安全"><a href="#认证安全" class="headerlink" title="认证安全"></a>认证安全</h3><ul><li>Token加密存储</li><li>HTTPS通信加密</li><li>访问权限控制</li></ul><h3 id="数据保护"><a href="#数据保护" class="headerlink" title="数据保护"></a>数据保护</h3><ul><li>敏感信息过滤</li><li>日志记录审计</li><li>异常行为监控</li></ul><h2 id="扩展功能"><a href="#扩展功能" class="headerlink" title="扩展功能"></a>扩展功能</h2><h3 id="插件扩展"><a href="#插件扩展" class="headerlink" title="插件扩展"></a>插件扩展</h3><ul><li>支持自定义通知模板</li><li>支持多种推送服务</li><li>支持条件触发规则</li></ul><h3 id="集成能力"><a href="#集成能力" class="headerlink" title="集成能力"></a>集成能力</h3><ul><li>与现有通知系统集成</li><li>支持Webhook回调</li><li>支持第三方服务集成</li></ul><h2 id="故障排除"><a href="#故障排除" class="headerlink" title="故障排除"></a>故障排除</h2><h3 id="常见问题"><a href="#常见问题" class="headerlink" title="常见问题"></a>常见问题</h3><ol><li><strong>连接失败</strong>：检查网络和服务器状态</li><li><strong>认证错误</strong>：验证Token配置</li><li><strong>推送延迟</strong>：检查服务器负载</li></ol><h3 id="调试方法"><a href="#调试方法" class="headerlink" title="调试方法"></a>调试方法</h3><ul><li>启用详细日志</li><li>检查网络连接</li><li>验证API响应</li></ul><hr><p><em>GotifyNotify让ongwu博客通知更智能、更及时！</em></p>]]></content>
      
      
      <categories>
          
          <category> tech </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ongwu插件 </tag>
            
            <tag> 通知系统 </tag>
            
            <tag> Gotify </tag>
            
            <tag> 消息推送 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>GotifyNotify</title>
      <link href="/2025/01/10/10%20-%20%E5%89%AF%E6%9C%AC%20(7)/"/>
      <url>/2025/01/10/10%20-%20%E5%89%AF%E6%9C%AC%20(7)/</url>
      
        <content type="html"><![CDATA[<h1 id="GotifyNotify-ongwu通知插件"><a href="#GotifyNotify-ongwu通知插件" class="headerlink" title="GotifyNotify - ongwu通知插件"></a>GotifyNotify - ongwu通知插件</h1><h2 id="插件概述"><a href="#插件概述" class="headerlink" title="插件概述"></a>插件概述</h2><p>GotifyNotify是一个专为ongwu博客开发的通知插件，通过集成Gotify服务，为博客管理员和用户提供实时的消息推送功能。无论是新评论、新文章还是系统通知，都能及时推送到指定设备。</p><h2 id="主要功能"><a href="#主要功能" class="headerlink" title="主要功能"></a>主要功能</h2><h3 id="通知类型"><a href="#通知类型" class="headerlink" title="通知类型"></a>通知类型</h3><ul><li><strong>评论通知</strong>：新评论发布时自动推送</li><li><strong>文章通知</strong>：新文章发布时通知订阅用户</li><li><strong>系统通知</strong>：重要系统事件实时推送</li><li><strong>自定义通知</strong>：支持自定义消息内容</li></ul><h3 id="推送方式"><a href="#推送方式" class="headerlink" title="推送方式"></a>推送方式</h3><ul><li><strong>Gotify服务</strong>：通过Gotify API推送消息</li><li><strong>多设备支持</strong>：支持Android、iOS、Web等平台</li><li><strong>实时推送</strong>：毫秒级消息传递</li><li><strong>离线存储</strong>：消息持久化存储</li></ul><h2 id="技术架构"><a href="#技术架构" class="headerlink" title="技术架构"></a>技术架构</h2><h3 id="系统架构图"><a href="#系统架构图" class="headerlink" title="系统架构图"></a>系统架构图</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ongwu博客 → GotifyNotify插件 → Gotify服务器 → 客户端设备</span><br><span class="line">     ↓              ↓              ↓           ↓</span><br><span class="line">   事件触发     消息处理      消息分发     消息接收</span><br></pre></td></tr></table></figure><h3 id="核心代码实现"><a href="#核心代码实现" class="headerlink" title="核心代码实现"></a>核心代码实现</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 通知处理类</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">GotifyNotify_Handler</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$gotifyUrl</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$appToken</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$url</span>, <span class="variable">$token</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;gotifyUrl = <span class="variable">$url</span>;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;appToken = <span class="variable">$token</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 发送通知</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">sendNotification</span>(<span class="params"><span class="variable">$title</span>, <span class="variable">$message</span>, <span class="variable">$priority</span> = <span class="number">0</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable">$data</span> = <span class="keyword">array</span>(</span><br><span class="line">            <span class="string">&#x27;title&#x27;</span> =&gt; <span class="variable">$title</span>,</span><br><span class="line">            <span class="string">&#x27;message&#x27;</span> =&gt; <span class="variable">$message</span>,</span><br><span class="line">            <span class="string">&#x27;priority&#x27;</span> =&gt; <span class="variable">$priority</span></span><br><span class="line">        );</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">postToGotify</span>(<span class="variable">$data</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 推送到Gotify</span></span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">postToGotify</span>(<span class="params"><span class="variable">$data</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable">$ch</span> = <span class="title function_ invoke__">curl_init</span>();</span><br><span class="line">        <span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$ch</span>, CURLOPT_URL, <span class="variable">$this</span>-&gt;gotifyUrl . <span class="string">&#x27;/message&#x27;</span>);</span><br><span class="line">        <span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$ch</span>, CURLOPT_POST, <span class="literal">true</span>);</span><br><span class="line">        <span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$ch</span>, CURLOPT_POSTFIELDS, <span class="title function_ invoke__">json_encode</span>(<span class="variable">$data</span>));</span><br><span class="line">        <span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$ch</span>, CURLOPT_HTTPHEADER, <span class="keyword">array</span>(</span><br><span class="line">            <span class="string">&#x27;X-Gotify-Key: &#x27;</span> . <span class="variable">$this</span>-&gt;appToken,</span><br><span class="line">            <span class="string">&#x27;Content-Type: application/json&#x27;</span></span><br><span class="line">        ));</span><br><span class="line">        </span><br><span class="line">        <span class="variable">$response</span> = <span class="title function_ invoke__">curl_exec</span>(<span class="variable">$ch</span>);</span><br><span class="line">        <span class="title function_ invoke__">curl_close</span>(<span class="variable">$ch</span>);</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$response</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="安装配置"><a href="#安装配置" class="headerlink" title="安装配置"></a>安装配置</h2><h3 id="1-安装Gotify服务器"><a href="#1-安装Gotify服务器" class="headerlink" title="1. 安装Gotify服务器"></a>1. 安装Gotify服务器</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Docker安装方式</span></span><br><span class="line">docker run -p 80:80 -p 443:443 \</span><br><span class="line">  -v /var/gotify:/app/data \</span><br><span class="line">  gotify/server</span><br></pre></td></tr></table></figure><h3 id="2-配置插件"><a href="#2-配置插件" class="headerlink" title="2. 配置插件"></a>2. 配置插件</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 插件配置</span></span><br><span class="line"><span class="keyword">return</span> <span class="keyword">array</span>(</span><br><span class="line">    <span class="string">&#x27;gotify_url&#x27;</span> =&gt; <span class="string">&#x27;https://your-gotify-server.com&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;app_token&#x27;</span> =&gt; <span class="string">&#x27;your-app-token&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;enable_comments&#x27;</span> =&gt; <span class="literal">true</span>,</span><br><span class="line">    <span class="string">&#x27;enable_posts&#x27;</span> =&gt; <span class="literal">true</span>,</span><br><span class="line">    <span class="string">&#x27;enable_system&#x27;</span> =&gt; <span class="literal">true</span>,</span><br><span class="line">    <span class="string">&#x27;notification_priority&#x27;</span> =&gt; <span class="number">0</span></span><br><span class="line">);</span><br></pre></td></tr></table></figure><h3 id="3-客户端配置"><a href="#3-客户端配置" class="headerlink" title="3. 客户端配置"></a>3. 客户端配置</h3><ul><li>下载Gotify客户端应用</li><li>配置服务器地址和认证信息</li><li>设置通知偏好</li></ul><h2 id="使用场景"><a href="#使用场景" class="headerlink" title="使用场景"></a>使用场景</h2><h3 id="博客管理"><a href="#博客管理" class="headerlink" title="博客管理"></a>博客管理</h3><ul><li>新评论实时提醒</li><li>系统状态监控</li><li>安全事件通知</li></ul><h3 id="用户服务"><a href="#用户服务" class="headerlink" title="用户服务"></a>用户服务</h3><ul><li>文章更新提醒</li><li>回复通知</li><li>重要公告推送</li></ul><h2 id="性能优化"><a href="#性能优化" class="headerlink" title="性能优化"></a>性能优化</h2><h3 id="推送优化"><a href="#推送优化" class="headerlink" title="推送优化"></a>推送优化</h3><ul><li>批量消息处理</li><li>智能重试机制</li><li>消息队列缓冲</li></ul><h3 id="资源管理"><a href="#资源管理" class="headerlink" title="资源管理"></a>资源管理</h3><ul><li>连接池复用</li><li>内存使用优化</li><li>数据库查询优化</li></ul><h2 id="安全考虑"><a href="#安全考虑" class="headerlink" title="安全考虑"></a>安全考虑</h2><h3 id="认证安全"><a href="#认证安全" class="headerlink" title="认证安全"></a>认证安全</h3><ul><li>Token加密存储</li><li>HTTPS通信加密</li><li>访问权限控制</li></ul><h3 id="数据保护"><a href="#数据保护" class="headerlink" title="数据保护"></a>数据保护</h3><ul><li>敏感信息过滤</li><li>日志记录审计</li><li>异常行为监控</li></ul><h2 id="扩展功能"><a href="#扩展功能" class="headerlink" title="扩展功能"></a>扩展功能</h2><h3 id="插件扩展"><a href="#插件扩展" class="headerlink" title="插件扩展"></a>插件扩展</h3><ul><li>支持自定义通知模板</li><li>支持多种推送服务</li><li>支持条件触发规则</li></ul><h3 id="集成能力"><a href="#集成能力" class="headerlink" title="集成能力"></a>集成能力</h3><ul><li>与现有通知系统集成</li><li>支持Webhook回调</li><li>支持第三方服务集成</li></ul><h2 id="故障排除"><a href="#故障排除" class="headerlink" title="故障排除"></a>故障排除</h2><h3 id="常见问题"><a href="#常见问题" class="headerlink" title="常见问题"></a>常见问题</h3><ol><li><strong>连接失败</strong>：检查网络和服务器状态</li><li><strong>认证错误</strong>：验证Token配置</li><li><strong>推送延迟</strong>：检查服务器负载</li></ol><h3 id="调试方法"><a href="#调试方法" class="headerlink" title="调试方法"></a>调试方法</h3><ul><li>启用详细日志</li><li>检查网络连接</li><li>验证API响应</li></ul><hr><p><em>GotifyNotify让ongwu博客通知更智能、更及时！</em></p>]]></content>
      
      
      <categories>
          
          <category> tech </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ongwu插件 </tag>
            
            <tag> 通知系统 </tag>
            
            <tag> Gotify </tag>
            
            <tag> 消息推送 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>GotifyNotify</title>
      <link href="/2025/01/10/10%20-%20%E5%89%AF%E6%9C%AC%20(8)/"/>
      <url>/2025/01/10/10%20-%20%E5%89%AF%E6%9C%AC%20(8)/</url>
      
        <content type="html"><![CDATA[<h1 id="GotifyNotify-ongwu通知插件"><a href="#GotifyNotify-ongwu通知插件" class="headerlink" title="GotifyNotify - ongwu通知插件"></a>GotifyNotify - ongwu通知插件</h1><h2 id="插件概述"><a href="#插件概述" class="headerlink" title="插件概述"></a>插件概述</h2><p>GotifyNotify是一个专为ongwu博客开发的通知插件，通过集成Gotify服务，为博客管理员和用户提供实时的消息推送功能。无论是新评论、新文章还是系统通知，都能及时推送到指定设备。</p><h2 id="主要功能"><a href="#主要功能" class="headerlink" title="主要功能"></a>主要功能</h2><h3 id="通知类型"><a href="#通知类型" class="headerlink" title="通知类型"></a>通知类型</h3><ul><li><strong>评论通知</strong>：新评论发布时自动推送</li><li><strong>文章通知</strong>：新文章发布时通知订阅用户</li><li><strong>系统通知</strong>：重要系统事件实时推送</li><li><strong>自定义通知</strong>：支持自定义消息内容</li></ul><h3 id="推送方式"><a href="#推送方式" class="headerlink" title="推送方式"></a>推送方式</h3><ul><li><strong>Gotify服务</strong>：通过Gotify API推送消息</li><li><strong>多设备支持</strong>：支持Android、iOS、Web等平台</li><li><strong>实时推送</strong>：毫秒级消息传递</li><li><strong>离线存储</strong>：消息持久化存储</li></ul><h2 id="技术架构"><a href="#技术架构" class="headerlink" title="技术架构"></a>技术架构</h2><h3 id="系统架构图"><a href="#系统架构图" class="headerlink" title="系统架构图"></a>系统架构图</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ongwu博客 → GotifyNotify插件 → Gotify服务器 → 客户端设备</span><br><span class="line">     ↓              ↓              ↓           ↓</span><br><span class="line">   事件触发     消息处理      消息分发     消息接收</span><br></pre></td></tr></table></figure><h3 id="核心代码实现"><a href="#核心代码实现" class="headerlink" title="核心代码实现"></a>核心代码实现</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 通知处理类</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">GotifyNotify_Handler</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$gotifyUrl</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$appToken</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$url</span>, <span class="variable">$token</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;gotifyUrl = <span class="variable">$url</span>;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;appToken = <span class="variable">$token</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 发送通知</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">sendNotification</span>(<span class="params"><span class="variable">$title</span>, <span class="variable">$message</span>, <span class="variable">$priority</span> = <span class="number">0</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable">$data</span> = <span class="keyword">array</span>(</span><br><span class="line">            <span class="string">&#x27;title&#x27;</span> =&gt; <span class="variable">$title</span>,</span><br><span class="line">            <span class="string">&#x27;message&#x27;</span> =&gt; <span class="variable">$message</span>,</span><br><span class="line">            <span class="string">&#x27;priority&#x27;</span> =&gt; <span class="variable">$priority</span></span><br><span class="line">        );</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">postToGotify</span>(<span class="variable">$data</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 推送到Gotify</span></span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">postToGotify</span>(<span class="params"><span class="variable">$data</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable">$ch</span> = <span class="title function_ invoke__">curl_init</span>();</span><br><span class="line">        <span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$ch</span>, CURLOPT_URL, <span class="variable">$this</span>-&gt;gotifyUrl . <span class="string">&#x27;/message&#x27;</span>);</span><br><span class="line">        <span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$ch</span>, CURLOPT_POST, <span class="literal">true</span>);</span><br><span class="line">        <span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$ch</span>, CURLOPT_POSTFIELDS, <span class="title function_ invoke__">json_encode</span>(<span class="variable">$data</span>));</span><br><span class="line">        <span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$ch</span>, CURLOPT_HTTPHEADER, <span class="keyword">array</span>(</span><br><span class="line">            <span class="string">&#x27;X-Gotify-Key: &#x27;</span> . <span class="variable">$this</span>-&gt;appToken,</span><br><span class="line">            <span class="string">&#x27;Content-Type: application/json&#x27;</span></span><br><span class="line">        ));</span><br><span class="line">        </span><br><span class="line">        <span class="variable">$response</span> = <span class="title function_ invoke__">curl_exec</span>(<span class="variable">$ch</span>);</span><br><span class="line">        <span class="title function_ invoke__">curl_close</span>(<span class="variable">$ch</span>);</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$response</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="安装配置"><a href="#安装配置" class="headerlink" title="安装配置"></a>安装配置</h2><h3 id="1-安装Gotify服务器"><a href="#1-安装Gotify服务器" class="headerlink" title="1. 安装Gotify服务器"></a>1. 安装Gotify服务器</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Docker安装方式</span></span><br><span class="line">docker run -p 80:80 -p 443:443 \</span><br><span class="line">  -v /var/gotify:/app/data \</span><br><span class="line">  gotify/server</span><br></pre></td></tr></table></figure><h3 id="2-配置插件"><a href="#2-配置插件" class="headerlink" title="2. 配置插件"></a>2. 配置插件</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 插件配置</span></span><br><span class="line"><span class="keyword">return</span> <span class="keyword">array</span>(</span><br><span class="line">    <span class="string">&#x27;gotify_url&#x27;</span> =&gt; <span class="string">&#x27;https://your-gotify-server.com&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;app_token&#x27;</span> =&gt; <span class="string">&#x27;your-app-token&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;enable_comments&#x27;</span> =&gt; <span class="literal">true</span>,</span><br><span class="line">    <span class="string">&#x27;enable_posts&#x27;</span> =&gt; <span class="literal">true</span>,</span><br><span class="line">    <span class="string">&#x27;enable_system&#x27;</span> =&gt; <span class="literal">true</span>,</span><br><span class="line">    <span class="string">&#x27;notification_priority&#x27;</span> =&gt; <span class="number">0</span></span><br><span class="line">);</span><br></pre></td></tr></table></figure><h3 id="3-客户端配置"><a href="#3-客户端配置" class="headerlink" title="3. 客户端配置"></a>3. 客户端配置</h3><ul><li>下载Gotify客户端应用</li><li>配置服务器地址和认证信息</li><li>设置通知偏好</li></ul><h2 id="使用场景"><a href="#使用场景" class="headerlink" title="使用场景"></a>使用场景</h2><h3 id="博客管理"><a href="#博客管理" class="headerlink" title="博客管理"></a>博客管理</h3><ul><li>新评论实时提醒</li><li>系统状态监控</li><li>安全事件通知</li></ul><h3 id="用户服务"><a href="#用户服务" class="headerlink" title="用户服务"></a>用户服务</h3><ul><li>文章更新提醒</li><li>回复通知</li><li>重要公告推送</li></ul><h2 id="性能优化"><a href="#性能优化" class="headerlink" title="性能优化"></a>性能优化</h2><h3 id="推送优化"><a href="#推送优化" class="headerlink" title="推送优化"></a>推送优化</h3><ul><li>批量消息处理</li><li>智能重试机制</li><li>消息队列缓冲</li></ul><h3 id="资源管理"><a href="#资源管理" class="headerlink" title="资源管理"></a>资源管理</h3><ul><li>连接池复用</li><li>内存使用优化</li><li>数据库查询优化</li></ul><h2 id="安全考虑"><a href="#安全考虑" class="headerlink" title="安全考虑"></a>安全考虑</h2><h3 id="认证安全"><a href="#认证安全" class="headerlink" title="认证安全"></a>认证安全</h3><ul><li>Token加密存储</li><li>HTTPS通信加密</li><li>访问权限控制</li></ul><h3 id="数据保护"><a href="#数据保护" class="headerlink" title="数据保护"></a>数据保护</h3><ul><li>敏感信息过滤</li><li>日志记录审计</li><li>异常行为监控</li></ul><h2 id="扩展功能"><a href="#扩展功能" class="headerlink" title="扩展功能"></a>扩展功能</h2><h3 id="插件扩展"><a href="#插件扩展" class="headerlink" title="插件扩展"></a>插件扩展</h3><ul><li>支持自定义通知模板</li><li>支持多种推送服务</li><li>支持条件触发规则</li></ul><h3 id="集成能力"><a href="#集成能力" class="headerlink" title="集成能力"></a>集成能力</h3><ul><li>与现有通知系统集成</li><li>支持Webhook回调</li><li>支持第三方服务集成</li></ul><h2 id="故障排除"><a href="#故障排除" class="headerlink" title="故障排除"></a>故障排除</h2><h3 id="常见问题"><a href="#常见问题" class="headerlink" title="常见问题"></a>常见问题</h3><ol><li><strong>连接失败</strong>：检查网络和服务器状态</li><li><strong>认证错误</strong>：验证Token配置</li><li><strong>推送延迟</strong>：检查服务器负载</li></ol><h3 id="调试方法"><a href="#调试方法" class="headerlink" title="调试方法"></a>调试方法</h3><ul><li>启用详细日志</li><li>检查网络连接</li><li>验证API响应</li></ul><hr><p><em>GotifyNotify让ongwu博客通知更智能、更及时！</em></p>]]></content>
      
      
      <categories>
          
          <category> tech </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ongwu插件 </tag>
            
            <tag> 通知系统 </tag>
            
            <tag> Gotify </tag>
            
            <tag> 消息推送 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>GotifyNotify</title>
      <link href="/2025/01/10/10%20-%20%E5%89%AF%E6%9C%AC%20(9)/"/>
      <url>/2025/01/10/10%20-%20%E5%89%AF%E6%9C%AC%20(9)/</url>
      
        <content type="html"><![CDATA[<h1 id="GotifyNotify-ongwu通知插件"><a href="#GotifyNotify-ongwu通知插件" class="headerlink" title="GotifyNotify - ongwu通知插件"></a>GotifyNotify - ongwu通知插件</h1><h2 id="插件概述"><a href="#插件概述" class="headerlink" title="插件概述"></a>插件概述</h2><p>GotifyNotify是一个专为ongwu博客开发的通知插件，通过集成Gotify服务，为博客管理员和用户提供实时的消息推送功能。无论是新评论、新文章还是系统通知，都能及时推送到指定设备。</p><h2 id="主要功能"><a href="#主要功能" class="headerlink" title="主要功能"></a>主要功能</h2><h3 id="通知类型"><a href="#通知类型" class="headerlink" title="通知类型"></a>通知类型</h3><ul><li><strong>评论通知</strong>：新评论发布时自动推送</li><li><strong>文章通知</strong>：新文章发布时通知订阅用户</li><li><strong>系统通知</strong>：重要系统事件实时推送</li><li><strong>自定义通知</strong>：支持自定义消息内容</li></ul><h3 id="推送方式"><a href="#推送方式" class="headerlink" title="推送方式"></a>推送方式</h3><ul><li><strong>Gotify服务</strong>：通过Gotify API推送消息</li><li><strong>多设备支持</strong>：支持Android、iOS、Web等平台</li><li><strong>实时推送</strong>：毫秒级消息传递</li><li><strong>离线存储</strong>：消息持久化存储</li></ul><h2 id="技术架构"><a href="#技术架构" class="headerlink" title="技术架构"></a>技术架构</h2><h3 id="系统架构图"><a href="#系统架构图" class="headerlink" title="系统架构图"></a>系统架构图</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ongwu博客 → GotifyNotify插件 → Gotify服务器 → 客户端设备</span><br><span class="line">     ↓              ↓              ↓           ↓</span><br><span class="line">   事件触发     消息处理      消息分发     消息接收</span><br></pre></td></tr></table></figure><h3 id="核心代码实现"><a href="#核心代码实现" class="headerlink" title="核心代码实现"></a>核心代码实现</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 通知处理类</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">GotifyNotify_Handler</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$gotifyUrl</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$appToken</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$url</span>, <span class="variable">$token</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;gotifyUrl = <span class="variable">$url</span>;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;appToken = <span class="variable">$token</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 发送通知</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">sendNotification</span>(<span class="params"><span class="variable">$title</span>, <span class="variable">$message</span>, <span class="variable">$priority</span> = <span class="number">0</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable">$data</span> = <span class="keyword">array</span>(</span><br><span class="line">            <span class="string">&#x27;title&#x27;</span> =&gt; <span class="variable">$title</span>,</span><br><span class="line">            <span class="string">&#x27;message&#x27;</span> =&gt; <span class="variable">$message</span>,</span><br><span class="line">            <span class="string">&#x27;priority&#x27;</span> =&gt; <span class="variable">$priority</span></span><br><span class="line">        );</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">postToGotify</span>(<span class="variable">$data</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 推送到Gotify</span></span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">postToGotify</span>(<span class="params"><span class="variable">$data</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable">$ch</span> = <span class="title function_ invoke__">curl_init</span>();</span><br><span class="line">        <span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$ch</span>, CURLOPT_URL, <span class="variable">$this</span>-&gt;gotifyUrl . <span class="string">&#x27;/message&#x27;</span>);</span><br><span class="line">        <span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$ch</span>, CURLOPT_POST, <span class="literal">true</span>);</span><br><span class="line">        <span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$ch</span>, CURLOPT_POSTFIELDS, <span class="title function_ invoke__">json_encode</span>(<span class="variable">$data</span>));</span><br><span class="line">        <span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$ch</span>, CURLOPT_HTTPHEADER, <span class="keyword">array</span>(</span><br><span class="line">            <span class="string">&#x27;X-Gotify-Key: &#x27;</span> . <span class="variable">$this</span>-&gt;appToken,</span><br><span class="line">            <span class="string">&#x27;Content-Type: application/json&#x27;</span></span><br><span class="line">        ));</span><br><span class="line">        </span><br><span class="line">        <span class="variable">$response</span> = <span class="title function_ invoke__">curl_exec</span>(<span class="variable">$ch</span>);</span><br><span class="line">        <span class="title function_ invoke__">curl_close</span>(<span class="variable">$ch</span>);</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$response</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="安装配置"><a href="#安装配置" class="headerlink" title="安装配置"></a>安装配置</h2><h3 id="1-安装Gotify服务器"><a href="#1-安装Gotify服务器" class="headerlink" title="1. 安装Gotify服务器"></a>1. 安装Gotify服务器</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Docker安装方式</span></span><br><span class="line">docker run -p 80:80 -p 443:443 \</span><br><span class="line">  -v /var/gotify:/app/data \</span><br><span class="line">  gotify/server</span><br></pre></td></tr></table></figure><h3 id="2-配置插件"><a href="#2-配置插件" class="headerlink" title="2. 配置插件"></a>2. 配置插件</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 插件配置</span></span><br><span class="line"><span class="keyword">return</span> <span class="keyword">array</span>(</span><br><span class="line">    <span class="string">&#x27;gotify_url&#x27;</span> =&gt; <span class="string">&#x27;https://your-gotify-server.com&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;app_token&#x27;</span> =&gt; <span class="string">&#x27;your-app-token&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;enable_comments&#x27;</span> =&gt; <span class="literal">true</span>,</span><br><span class="line">    <span class="string">&#x27;enable_posts&#x27;</span> =&gt; <span class="literal">true</span>,</span><br><span class="line">    <span class="string">&#x27;enable_system&#x27;</span> =&gt; <span class="literal">true</span>,</span><br><span class="line">    <span class="string">&#x27;notification_priority&#x27;</span> =&gt; <span class="number">0</span></span><br><span class="line">);</span><br></pre></td></tr></table></figure><h3 id="3-客户端配置"><a href="#3-客户端配置" class="headerlink" title="3. 客户端配置"></a>3. 客户端配置</h3><ul><li>下载Gotify客户端应用</li><li>配置服务器地址和认证信息</li><li>设置通知偏好</li></ul><h2 id="使用场景"><a href="#使用场景" class="headerlink" title="使用场景"></a>使用场景</h2><h3 id="博客管理"><a href="#博客管理" class="headerlink" title="博客管理"></a>博客管理</h3><ul><li>新评论实时提醒</li><li>系统状态监控</li><li>安全事件通知</li></ul><h3 id="用户服务"><a href="#用户服务" class="headerlink" title="用户服务"></a>用户服务</h3><ul><li>文章更新提醒</li><li>回复通知</li><li>重要公告推送</li></ul><h2 id="性能优化"><a href="#性能优化" class="headerlink" title="性能优化"></a>性能优化</h2><h3 id="推送优化"><a href="#推送优化" class="headerlink" title="推送优化"></a>推送优化</h3><ul><li>批量消息处理</li><li>智能重试机制</li><li>消息队列缓冲</li></ul><h3 id="资源管理"><a href="#资源管理" class="headerlink" title="资源管理"></a>资源管理</h3><ul><li>连接池复用</li><li>内存使用优化</li><li>数据库查询优化</li></ul><h2 id="安全考虑"><a href="#安全考虑" class="headerlink" title="安全考虑"></a>安全考虑</h2><h3 id="认证安全"><a href="#认证安全" class="headerlink" title="认证安全"></a>认证安全</h3><ul><li>Token加密存储</li><li>HTTPS通信加密</li><li>访问权限控制</li></ul><h3 id="数据保护"><a href="#数据保护" class="headerlink" title="数据保护"></a>数据保护</h3><ul><li>敏感信息过滤</li><li>日志记录审计</li><li>异常行为监控</li></ul><h2 id="扩展功能"><a href="#扩展功能" class="headerlink" title="扩展功能"></a>扩展功能</h2><h3 id="插件扩展"><a href="#插件扩展" class="headerlink" title="插件扩展"></a>插件扩展</h3><ul><li>支持自定义通知模板</li><li>支持多种推送服务</li><li>支持条件触发规则</li></ul><h3 id="集成能力"><a href="#集成能力" class="headerlink" title="集成能力"></a>集成能力</h3><ul><li>与现有通知系统集成</li><li>支持Webhook回调</li><li>支持第三方服务集成</li></ul><h2 id="故障排除"><a href="#故障排除" class="headerlink" title="故障排除"></a>故障排除</h2><h3 id="常见问题"><a href="#常见问题" class="headerlink" title="常见问题"></a>常见问题</h3><ol><li><strong>连接失败</strong>：检查网络和服务器状态</li><li><strong>认证错误</strong>：验证Token配置</li><li><strong>推送延迟</strong>：检查服务器负载</li></ol><h3 id="调试方法"><a href="#调试方法" class="headerlink" title="调试方法"></a>调试方法</h3><ul><li>启用详细日志</li><li>检查网络连接</li><li>验证API响应</li></ul><hr><p><em>GotifyNotify让ongwu博客通知更智能、更及时！</em></p>]]></content>
      
      
      <categories>
          
          <category> tech </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ongwu插件 </tag>
            
            <tag> 通知系统 </tag>
            
            <tag> Gotify </tag>
            
            <tag> 消息推送 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>GotifyNotify</title>
      <link href="/2025/01/10/10%20-%20%E5%89%AF%E6%9C%AC/"/>
      <url>/2025/01/10/10%20-%20%E5%89%AF%E6%9C%AC/</url>
      
        <content type="html"><![CDATA[<h1 id="GotifyNotify-ongwu通知插件"><a href="#GotifyNotify-ongwu通知插件" class="headerlink" title="GotifyNotify - ongwu通知插件"></a>GotifyNotify - ongwu通知插件</h1><h2 id="插件概述"><a href="#插件概述" class="headerlink" title="插件概述"></a>插件概述</h2><p>GotifyNotify是一个专为ongwu博客开发的通知插件，通过集成Gotify服务，为博客管理员和用户提供实时的消息推送功能。无论是新评论、新文章还是系统通知，都能及时推送到指定设备。</p><h2 id="主要功能"><a href="#主要功能" class="headerlink" title="主要功能"></a>主要功能</h2><h3 id="通知类型"><a href="#通知类型" class="headerlink" title="通知类型"></a>通知类型</h3><ul><li><strong>评论通知</strong>：新评论发布时自动推送</li><li><strong>文章通知</strong>：新文章发布时通知订阅用户</li><li><strong>系统通知</strong>：重要系统事件实时推送</li><li><strong>自定义通知</strong>：支持自定义消息内容</li></ul><h3 id="推送方式"><a href="#推送方式" class="headerlink" title="推送方式"></a>推送方式</h3><ul><li><strong>Gotify服务</strong>：通过Gotify API推送消息</li><li><strong>多设备支持</strong>：支持Android、iOS、Web等平台</li><li><strong>实时推送</strong>：毫秒级消息传递</li><li><strong>离线存储</strong>：消息持久化存储</li></ul><h2 id="技术架构"><a href="#技术架构" class="headerlink" title="技术架构"></a>技术架构</h2><h3 id="系统架构图"><a href="#系统架构图" class="headerlink" title="系统架构图"></a>系统架构图</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ongwu博客 → GotifyNotify插件 → Gotify服务器 → 客户端设备</span><br><span class="line">     ↓              ↓              ↓           ↓</span><br><span class="line">   事件触发     消息处理      消息分发     消息接收</span><br></pre></td></tr></table></figure><h3 id="核心代码实现"><a href="#核心代码实现" class="headerlink" title="核心代码实现"></a>核心代码实现</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 通知处理类</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">GotifyNotify_Handler</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$gotifyUrl</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$appToken</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$url</span>, <span class="variable">$token</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;gotifyUrl = <span class="variable">$url</span>;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;appToken = <span class="variable">$token</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 发送通知</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">sendNotification</span>(<span class="params"><span class="variable">$title</span>, <span class="variable">$message</span>, <span class="variable">$priority</span> = <span class="number">0</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable">$data</span> = <span class="keyword">array</span>(</span><br><span class="line">            <span class="string">&#x27;title&#x27;</span> =&gt; <span class="variable">$title</span>,</span><br><span class="line">            <span class="string">&#x27;message&#x27;</span> =&gt; <span class="variable">$message</span>,</span><br><span class="line">            <span class="string">&#x27;priority&#x27;</span> =&gt; <span class="variable">$priority</span></span><br><span class="line">        );</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">postToGotify</span>(<span class="variable">$data</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 推送到Gotify</span></span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">postToGotify</span>(<span class="params"><span class="variable">$data</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable">$ch</span> = <span class="title function_ invoke__">curl_init</span>();</span><br><span class="line">        <span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$ch</span>, CURLOPT_URL, <span class="variable">$this</span>-&gt;gotifyUrl . <span class="string">&#x27;/message&#x27;</span>);</span><br><span class="line">        <span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$ch</span>, CURLOPT_POST, <span class="literal">true</span>);</span><br><span class="line">        <span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$ch</span>, CURLOPT_POSTFIELDS, <span class="title function_ invoke__">json_encode</span>(<span class="variable">$data</span>));</span><br><span class="line">        <span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$ch</span>, CURLOPT_HTTPHEADER, <span class="keyword">array</span>(</span><br><span class="line">            <span class="string">&#x27;X-Gotify-Key: &#x27;</span> . <span class="variable">$this</span>-&gt;appToken,</span><br><span class="line">            <span class="string">&#x27;Content-Type: application/json&#x27;</span></span><br><span class="line">        ));</span><br><span class="line">        </span><br><span class="line">        <span class="variable">$response</span> = <span class="title function_ invoke__">curl_exec</span>(<span class="variable">$ch</span>);</span><br><span class="line">        <span class="title function_ invoke__">curl_close</span>(<span class="variable">$ch</span>);</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$response</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="安装配置"><a href="#安装配置" class="headerlink" title="安装配置"></a>安装配置</h2><h3 id="1-安装Gotify服务器"><a href="#1-安装Gotify服务器" class="headerlink" title="1. 安装Gotify服务器"></a>1. 安装Gotify服务器</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Docker安装方式</span></span><br><span class="line">docker run -p 80:80 -p 443:443 \</span><br><span class="line">  -v /var/gotify:/app/data \</span><br><span class="line">  gotify/server</span><br></pre></td></tr></table></figure><h3 id="2-配置插件"><a href="#2-配置插件" class="headerlink" title="2. 配置插件"></a>2. 配置插件</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 插件配置</span></span><br><span class="line"><span class="keyword">return</span> <span class="keyword">array</span>(</span><br><span class="line">    <span class="string">&#x27;gotify_url&#x27;</span> =&gt; <span class="string">&#x27;https://your-gotify-server.com&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;app_token&#x27;</span> =&gt; <span class="string">&#x27;your-app-token&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;enable_comments&#x27;</span> =&gt; <span class="literal">true</span>,</span><br><span class="line">    <span class="string">&#x27;enable_posts&#x27;</span> =&gt; <span class="literal">true</span>,</span><br><span class="line">    <span class="string">&#x27;enable_system&#x27;</span> =&gt; <span class="literal">true</span>,</span><br><span class="line">    <span class="string">&#x27;notification_priority&#x27;</span> =&gt; <span class="number">0</span></span><br><span class="line">);</span><br></pre></td></tr></table></figure><h3 id="3-客户端配置"><a href="#3-客户端配置" class="headerlink" title="3. 客户端配置"></a>3. 客户端配置</h3><ul><li>下载Gotify客户端应用</li><li>配置服务器地址和认证信息</li><li>设置通知偏好</li></ul><h2 id="使用场景"><a href="#使用场景" class="headerlink" title="使用场景"></a>使用场景</h2><h3 id="博客管理"><a href="#博客管理" class="headerlink" title="博客管理"></a>博客管理</h3><ul><li>新评论实时提醒</li><li>系统状态监控</li><li>安全事件通知</li></ul><h3 id="用户服务"><a href="#用户服务" class="headerlink" title="用户服务"></a>用户服务</h3><ul><li>文章更新提醒</li><li>回复通知</li><li>重要公告推送</li></ul><h2 id="性能优化"><a href="#性能优化" class="headerlink" title="性能优化"></a>性能优化</h2><h3 id="推送优化"><a href="#推送优化" class="headerlink" title="推送优化"></a>推送优化</h3><ul><li>批量消息处理</li><li>智能重试机制</li><li>消息队列缓冲</li></ul><h3 id="资源管理"><a href="#资源管理" class="headerlink" title="资源管理"></a>资源管理</h3><ul><li>连接池复用</li><li>内存使用优化</li><li>数据库查询优化</li></ul><h2 id="安全考虑"><a href="#安全考虑" class="headerlink" title="安全考虑"></a>安全考虑</h2><h3 id="认证安全"><a href="#认证安全" class="headerlink" title="认证安全"></a>认证安全</h3><ul><li>Token加密存储</li><li>HTTPS通信加密</li><li>访问权限控制</li></ul><h3 id="数据保护"><a href="#数据保护" class="headerlink" title="数据保护"></a>数据保护</h3><ul><li>敏感信息过滤</li><li>日志记录审计</li><li>异常行为监控</li></ul><h2 id="扩展功能"><a href="#扩展功能" class="headerlink" title="扩展功能"></a>扩展功能</h2><h3 id="插件扩展"><a href="#插件扩展" class="headerlink" title="插件扩展"></a>插件扩展</h3><ul><li>支持自定义通知模板</li><li>支持多种推送服务</li><li>支持条件触发规则</li></ul><h3 id="集成能力"><a href="#集成能力" class="headerlink" title="集成能力"></a>集成能力</h3><ul><li>与现有通知系统集成</li><li>支持Webhook回调</li><li>支持第三方服务集成</li></ul><h2 id="故障排除"><a href="#故障排除" class="headerlink" title="故障排除"></a>故障排除</h2><h3 id="常见问题"><a href="#常见问题" class="headerlink" title="常见问题"></a>常见问题</h3><ol><li><strong>连接失败</strong>：检查网络和服务器状态</li><li><strong>认证错误</strong>：验证Token配置</li><li><strong>推送延迟</strong>：检查服务器负载</li></ol><h3 id="调试方法"><a href="#调试方法" class="headerlink" title="调试方法"></a>调试方法</h3><ul><li>启用详细日志</li><li>检查网络连接</li><li>验证API响应</li></ul><hr><p><em>GotifyNotify让ongwu博客通知更智能、更及时！</em></p>]]></content>
      
      
      <categories>
          
          <category> tech </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ongwu插件 </tag>
            
            <tag> 通知系统 </tag>
            
            <tag> Gotify </tag>
            
            <tag> 消息推送 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>GotifyNotify</title>
      <link href="/2025/01/10/10/"/>
      <url>/2025/01/10/10/</url>
      
        <content type="html"><![CDATA[<h1 id="GotifyNotify-ongwu通知插件"><a href="#GotifyNotify-ongwu通知插件" class="headerlink" title="GotifyNotify - ongwu通知插件"></a>GotifyNotify - ongwu通知插件</h1><h2 id="插件概述"><a href="#插件概述" class="headerlink" title="插件概述"></a>插件概述</h2><p>GotifyNotify是一个专为ongwu博客开发的通知插件，通过集成Gotify服务，为博客管理员和用户提供实时的消息推送功能。无论是新评论、新文章还是系统通知，都能及时推送到指定设备。</p><h2 id="主要功能"><a href="#主要功能" class="headerlink" title="主要功能"></a>主要功能</h2><h3 id="通知类型"><a href="#通知类型" class="headerlink" title="通知类型"></a>通知类型</h3><ul><li><strong>评论通知</strong>：新评论发布时自动推送</li><li><strong>文章通知</strong>：新文章发布时通知订阅用户</li><li><strong>系统通知</strong>：重要系统事件实时推送</li><li><strong>自定义通知</strong>：支持自定义消息内容</li></ul><h3 id="推送方式"><a href="#推送方式" class="headerlink" title="推送方式"></a>推送方式</h3><ul><li><strong>Gotify服务</strong>：通过Gotify API推送消息</li><li><strong>多设备支持</strong>：支持Android、iOS、Web等平台</li><li><strong>实时推送</strong>：毫秒级消息传递</li><li><strong>离线存储</strong>：消息持久化存储</li></ul><h2 id="技术架构"><a href="#技术架构" class="headerlink" title="技术架构"></a>技术架构</h2><h3 id="系统架构图"><a href="#系统架构图" class="headerlink" title="系统架构图"></a>系统架构图</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ongwu博客 → GotifyNotify插件 → Gotify服务器 → 客户端设备</span><br><span class="line">     ↓              ↓              ↓           ↓</span><br><span class="line">   事件触发     消息处理      消息分发     消息接收</span><br></pre></td></tr></table></figure><h3 id="核心代码实现"><a href="#核心代码实现" class="headerlink" title="核心代码实现"></a>核心代码实现</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 通知处理类</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">GotifyNotify_Handler</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$gotifyUrl</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$appToken</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$url</span>, <span class="variable">$token</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;gotifyUrl = <span class="variable">$url</span>;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;appToken = <span class="variable">$token</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 发送通知</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">sendNotification</span>(<span class="params"><span class="variable">$title</span>, <span class="variable">$message</span>, <span class="variable">$priority</span> = <span class="number">0</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable">$data</span> = <span class="keyword">array</span>(</span><br><span class="line">            <span class="string">&#x27;title&#x27;</span> =&gt; <span class="variable">$title</span>,</span><br><span class="line">            <span class="string">&#x27;message&#x27;</span> =&gt; <span class="variable">$message</span>,</span><br><span class="line">            <span class="string">&#x27;priority&#x27;</span> =&gt; <span class="variable">$priority</span></span><br><span class="line">        );</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">postToGotify</span>(<span class="variable">$data</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 推送到Gotify</span></span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">postToGotify</span>(<span class="params"><span class="variable">$data</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable">$ch</span> = <span class="title function_ invoke__">curl_init</span>();</span><br><span class="line">        <span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$ch</span>, CURLOPT_URL, <span class="variable">$this</span>-&gt;gotifyUrl . <span class="string">&#x27;/message&#x27;</span>);</span><br><span class="line">        <span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$ch</span>, CURLOPT_POST, <span class="literal">true</span>);</span><br><span class="line">        <span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$ch</span>, CURLOPT_POSTFIELDS, <span class="title function_ invoke__">json_encode</span>(<span class="variable">$data</span>));</span><br><span class="line">        <span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$ch</span>, CURLOPT_HTTPHEADER, <span class="keyword">array</span>(</span><br><span class="line">            <span class="string">&#x27;X-Gotify-Key: &#x27;</span> . <span class="variable">$this</span>-&gt;appToken,</span><br><span class="line">            <span class="string">&#x27;Content-Type: application/json&#x27;</span></span><br><span class="line">        ));</span><br><span class="line">        </span><br><span class="line">        <span class="variable">$response</span> = <span class="title function_ invoke__">curl_exec</span>(<span class="variable">$ch</span>);</span><br><span class="line">        <span class="title function_ invoke__">curl_close</span>(<span class="variable">$ch</span>);</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$response</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="安装配置"><a href="#安装配置" class="headerlink" title="安装配置"></a>安装配置</h2><h3 id="1-安装Gotify服务器"><a href="#1-安装Gotify服务器" class="headerlink" title="1. 安装Gotify服务器"></a>1. 安装Gotify服务器</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Docker安装方式</span></span><br><span class="line">docker run -p 80:80 -p 443:443 \</span><br><span class="line">  -v /var/gotify:/app/data \</span><br><span class="line">  gotify/server</span><br></pre></td></tr></table></figure><h3 id="2-配置插件"><a href="#2-配置插件" class="headerlink" title="2. 配置插件"></a>2. 配置插件</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 插件配置</span></span><br><span class="line"><span class="keyword">return</span> <span class="keyword">array</span>(</span><br><span class="line">    <span class="string">&#x27;gotify_url&#x27;</span> =&gt; <span class="string">&#x27;https://your-gotify-server.com&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;app_token&#x27;</span> =&gt; <span class="string">&#x27;your-app-token&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;enable_comments&#x27;</span> =&gt; <span class="literal">true</span>,</span><br><span class="line">    <span class="string">&#x27;enable_posts&#x27;</span> =&gt; <span class="literal">true</span>,</span><br><span class="line">    <span class="string">&#x27;enable_system&#x27;</span> =&gt; <span class="literal">true</span>,</span><br><span class="line">    <span class="string">&#x27;notification_priority&#x27;</span> =&gt; <span class="number">0</span></span><br><span class="line">);</span><br></pre></td></tr></table></figure><h3 id="3-客户端配置"><a href="#3-客户端配置" class="headerlink" title="3. 客户端配置"></a>3. 客户端配置</h3><ul><li>下载Gotify客户端应用</li><li>配置服务器地址和认证信息</li><li>设置通知偏好</li></ul><h2 id="使用场景"><a href="#使用场景" class="headerlink" title="使用场景"></a>使用场景</h2><h3 id="博客管理"><a href="#博客管理" class="headerlink" title="博客管理"></a>博客管理</h3><ul><li>新评论实时提醒</li><li>系统状态监控</li><li>安全事件通知</li></ul><h3 id="用户服务"><a href="#用户服务" class="headerlink" title="用户服务"></a>用户服务</h3><ul><li>文章更新提醒</li><li>回复通知</li><li>重要公告推送</li></ul><h2 id="性能优化"><a href="#性能优化" class="headerlink" title="性能优化"></a>性能优化</h2><h3 id="推送优化"><a href="#推送优化" class="headerlink" title="推送优化"></a>推送优化</h3><ul><li>批量消息处理</li><li>智能重试机制</li><li>消息队列缓冲</li></ul><h3 id="资源管理"><a href="#资源管理" class="headerlink" title="资源管理"></a>资源管理</h3><ul><li>连接池复用</li><li>内存使用优化</li><li>数据库查询优化</li></ul><h2 id="安全考虑"><a href="#安全考虑" class="headerlink" title="安全考虑"></a>安全考虑</h2><h3 id="认证安全"><a href="#认证安全" class="headerlink" title="认证安全"></a>认证安全</h3><ul><li>Token加密存储</li><li>HTTPS通信加密</li><li>访问权限控制</li></ul><h3 id="数据保护"><a href="#数据保护" class="headerlink" title="数据保护"></a>数据保护</h3><ul><li>敏感信息过滤</li><li>日志记录审计</li><li>异常行为监控</li></ul><h2 id="扩展功能"><a href="#扩展功能" class="headerlink" title="扩展功能"></a>扩展功能</h2><h3 id="插件扩展"><a href="#插件扩展" class="headerlink" title="插件扩展"></a>插件扩展</h3><ul><li>支持自定义通知模板</li><li>支持多种推送服务</li><li>支持条件触发规则</li></ul><h3 id="集成能力"><a href="#集成能力" class="headerlink" title="集成能力"></a>集成能力</h3><ul><li>与现有通知系统集成</li><li>支持Webhook回调</li><li>支持第三方服务集成</li></ul><h2 id="故障排除"><a href="#故障排除" class="headerlink" title="故障排除"></a>故障排除</h2><h3 id="常见问题"><a href="#常见问题" class="headerlink" title="常见问题"></a>常见问题</h3><ol><li><strong>连接失败</strong>：检查网络和服务器状态</li><li><strong>认证错误</strong>：验证Token配置</li><li><strong>推送延迟</strong>：检查服务器负载</li></ol><h3 id="调试方法"><a href="#调试方法" class="headerlink" title="调试方法"></a>调试方法</h3><ul><li>启用详细日志</li><li>检查网络连接</li><li>验证API响应</li></ul><hr><p><em>GotifyNotify让ongwu博客通知更智能、更及时！</em></p>]]></content>
      
      
      <categories>
          
          <category> tech </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ongwu插件 </tag>
            
            <tag> 通知系统 </tag>
            
            <tag> Gotify </tag>
            
            <tag> 消息推送 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>GotifyNotify</title>
      <link href="/2025/01/10/11/"/>
      <url>/2025/01/10/11/</url>
      
        <content type="html"><![CDATA[<h1 id="GotifyNotify-ongwu通知插件"><a href="#GotifyNotify-ongwu通知插件" class="headerlink" title="GotifyNotify - ongwu通知插件"></a>GotifyNotify - ongwu通知插件</h1><h2 id="插件概述"><a href="#插件概述" class="headerlink" title="插件概述"></a>插件概述</h2><p>GotifyNotify是一个专为ongwu博客开发的通知插件，通过集成Gotify服务，为博客管理员和用户提供实时的消息推送功能。无论是新评论、新文章还是系统通知，都能及时推送到指定设备。</p><h2 id="主要功能"><a href="#主要功能" class="headerlink" title="主要功能"></a>主要功能</h2><h3 id="通知类型"><a href="#通知类型" class="headerlink" title="通知类型"></a>通知类型</h3><ul><li><strong>评论通知</strong>：新评论发布时自动推送</li><li><strong>文章通知</strong>：新文章发布时通知订阅用户</li><li><strong>系统通知</strong>：重要系统事件实时推送</li><li><strong>自定义通知</strong>：支持自定义消息内容</li></ul><h3 id="推送方式"><a href="#推送方式" class="headerlink" title="推送方式"></a>推送方式</h3><ul><li><strong>Gotify服务</strong>：通过Gotify API推送消息</li><li><strong>多设备支持</strong>：支持Android、iOS、Web等平台</li><li><strong>实时推送</strong>：毫秒级消息传递</li><li><strong>离线存储</strong>：消息持久化存储</li></ul><h2 id="技术架构"><a href="#技术架构" class="headerlink" title="技术架构"></a>技术架构</h2><h3 id="系统架构图"><a href="#系统架构图" class="headerlink" title="系统架构图"></a>系统架构图</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ongwu博客 → GotifyNotify插件 → Gotify服务器 → 客户端设备</span><br><span class="line">     ↓              ↓              ↓           ↓</span><br><span class="line">   事件触发     消息处理      消息分发     消息接收</span><br></pre></td></tr></table></figure><h3 id="核心代码实现"><a href="#核心代码实现" class="headerlink" title="核心代码实现"></a>核心代码实现</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 通知处理类</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">GotifyNotify_Handler</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$gotifyUrl</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$appToken</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$url</span>, <span class="variable">$token</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;gotifyUrl = <span class="variable">$url</span>;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;appToken = <span class="variable">$token</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 发送通知</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">sendNotification</span>(<span class="params"><span class="variable">$title</span>, <span class="variable">$message</span>, <span class="variable">$priority</span> = <span class="number">0</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable">$data</span> = <span class="keyword">array</span>(</span><br><span class="line">            <span class="string">&#x27;title&#x27;</span> =&gt; <span class="variable">$title</span>,</span><br><span class="line">            <span class="string">&#x27;message&#x27;</span> =&gt; <span class="variable">$message</span>,</span><br><span class="line">            <span class="string">&#x27;priority&#x27;</span> =&gt; <span class="variable">$priority</span></span><br><span class="line">        );</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">postToGotify</span>(<span class="variable">$data</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 推送到Gotify</span></span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">postToGotify</span>(<span class="params"><span class="variable">$data</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable">$ch</span> = <span class="title function_ invoke__">curl_init</span>();</span><br><span class="line">        <span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$ch</span>, CURLOPT_URL, <span class="variable">$this</span>-&gt;gotifyUrl . <span class="string">&#x27;/message&#x27;</span>);</span><br><span class="line">        <span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$ch</span>, CURLOPT_POST, <span class="literal">true</span>);</span><br><span class="line">        <span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$ch</span>, CURLOPT_POSTFIELDS, <span class="title function_ invoke__">json_encode</span>(<span class="variable">$data</span>));</span><br><span class="line">        <span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$ch</span>, CURLOPT_HTTPHEADER, <span class="keyword">array</span>(</span><br><span class="line">            <span class="string">&#x27;X-Gotify-Key: &#x27;</span> . <span class="variable">$this</span>-&gt;appToken,</span><br><span class="line">            <span class="string">&#x27;Content-Type: application/json&#x27;</span></span><br><span class="line">        ));</span><br><span class="line">        </span><br><span class="line">        <span class="variable">$response</span> = <span class="title function_ invoke__">curl_exec</span>(<span class="variable">$ch</span>);</span><br><span class="line">        <span class="title function_ invoke__">curl_close</span>(<span class="variable">$ch</span>);</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$response</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="安装配置"><a href="#安装配置" class="headerlink" title="安装配置"></a>安装配置</h2><h3 id="1-安装Gotify服务器"><a href="#1-安装Gotify服务器" class="headerlink" title="1. 安装Gotify服务器"></a>1. 安装Gotify服务器</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Docker安装方式</span></span><br><span class="line">docker run -p 80:80 -p 443:443 \</span><br><span class="line">  -v /var/gotify:/app/data \</span><br><span class="line">  gotify/server</span><br></pre></td></tr></table></figure><h3 id="2-配置插件"><a href="#2-配置插件" class="headerlink" title="2. 配置插件"></a>2. 配置插件</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 插件配置</span></span><br><span class="line"><span class="keyword">return</span> <span class="keyword">array</span>(</span><br><span class="line">    <span class="string">&#x27;gotify_url&#x27;</span> =&gt; <span class="string">&#x27;https://your-gotify-server.com&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;app_token&#x27;</span> =&gt; <span class="string">&#x27;your-app-token&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;enable_comments&#x27;</span> =&gt; <span class="literal">true</span>,</span><br><span class="line">    <span class="string">&#x27;enable_posts&#x27;</span> =&gt; <span class="literal">true</span>,</span><br><span class="line">    <span class="string">&#x27;enable_system&#x27;</span> =&gt; <span class="literal">true</span>,</span><br><span class="line">    <span class="string">&#x27;notification_priority&#x27;</span> =&gt; <span class="number">0</span></span><br><span class="line">);</span><br></pre></td></tr></table></figure><h3 id="3-客户端配置"><a href="#3-客户端配置" class="headerlink" title="3. 客户端配置"></a>3. 客户端配置</h3><ul><li>下载Gotify客户端应用</li><li>配置服务器地址和认证信息</li><li>设置通知偏好</li></ul><h2 id="使用场景"><a href="#使用场景" class="headerlink" title="使用场景"></a>使用场景</h2><h3 id="博客管理"><a href="#博客管理" class="headerlink" title="博客管理"></a>博客管理</h3><ul><li>新评论实时提醒</li><li>系统状态监控</li><li>安全事件通知</li></ul><h3 id="用户服务"><a href="#用户服务" class="headerlink" title="用户服务"></a>用户服务</h3><ul><li>文章更新提醒</li><li>回复通知</li><li>重要公告推送</li></ul><h2 id="性能优化"><a href="#性能优化" class="headerlink" title="性能优化"></a>性能优化</h2><h3 id="推送优化"><a href="#推送优化" class="headerlink" title="推送优化"></a>推送优化</h3><ul><li>批量消息处理</li><li>智能重试机制</li><li>消息队列缓冲</li></ul><h3 id="资源管理"><a href="#资源管理" class="headerlink" title="资源管理"></a>资源管理</h3><ul><li>连接池复用</li><li>内存使用优化</li><li>数据库查询优化</li></ul><h2 id="安全考虑"><a href="#安全考虑" class="headerlink" title="安全考虑"></a>安全考虑</h2><h3 id="认证安全"><a href="#认证安全" class="headerlink" title="认证安全"></a>认证安全</h3><ul><li>Token加密存储</li><li>HTTPS通信加密</li><li>访问权限控制</li></ul><h3 id="数据保护"><a href="#数据保护" class="headerlink" title="数据保护"></a>数据保护</h3><ul><li>敏感信息过滤</li><li>日志记录审计</li><li>异常行为监控</li></ul><h2 id="扩展功能"><a href="#扩展功能" class="headerlink" title="扩展功能"></a>扩展功能</h2><h3 id="插件扩展"><a href="#插件扩展" class="headerlink" title="插件扩展"></a>插件扩展</h3><ul><li>支持自定义通知模板</li><li>支持多种推送服务</li><li>支持条件触发规则</li></ul><h3 id="集成能力"><a href="#集成能力" class="headerlink" title="集成能力"></a>集成能力</h3><ul><li>与现有通知系统集成</li><li>支持Webhook回调</li><li>支持第三方服务集成</li></ul><h2 id="故障排除"><a href="#故障排除" class="headerlink" title="故障排除"></a>故障排除</h2><h3 id="常见问题"><a href="#常见问题" class="headerlink" title="常见问题"></a>常见问题</h3><ol><li><strong>连接失败</strong>：检查网络和服务器状态</li><li><strong>认证错误</strong>：验证Token配置</li><li><strong>推送延迟</strong>：检查服务器负载</li></ol><h3 id="调试方法"><a href="#调试方法" class="headerlink" title="调试方法"></a>调试方法</h3><ul><li>启用详细日志</li><li>检查网络连接</li><li>验证API响应</li></ul><hr><p><em>GotifyNotify让ongwu博客通知更智能、更及时！</em></p>]]></content>
      
      
      <categories>
          
          <category> tech </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ongwu插件 </tag>
            
            <tag> 通知系统 </tag>
            
            <tag> Gotify </tag>
            
            <tag> 消息推送 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>GotifyNotify</title>
      <link href="/2025/01/10/12/"/>
      <url>/2025/01/10/12/</url>
      
        <content type="html"><![CDATA[<h1 id="GotifyNotify-ongwu通知插件"><a href="#GotifyNotify-ongwu通知插件" class="headerlink" title="GotifyNotify - ongwu通知插件"></a>GotifyNotify - ongwu通知插件</h1><h2 id="插件概述"><a href="#插件概述" class="headerlink" title="插件概述"></a>插件概述</h2><p>GotifyNotify是一个专为ongwu博客开发的通知插件，通过集成Gotify服务，为博客管理员和用户提供实时的消息推送功能。无论是新评论、新文章还是系统通知，都能及时推送到指定设备。</p><h2 id="主要功能"><a href="#主要功能" class="headerlink" title="主要功能"></a>主要功能</h2><h3 id="通知类型"><a href="#通知类型" class="headerlink" title="通知类型"></a>通知类型</h3><ul><li><strong>评论通知</strong>：新评论发布时自动推送</li><li><strong>文章通知</strong>：新文章发布时通知订阅用户</li><li><strong>系统通知</strong>：重要系统事件实时推送</li><li><strong>自定义通知</strong>：支持自定义消息内容</li></ul><h3 id="推送方式"><a href="#推送方式" class="headerlink" title="推送方式"></a>推送方式</h3><ul><li><strong>Gotify服务</strong>：通过Gotify API推送消息</li><li><strong>多设备支持</strong>：支持Android、iOS、Web等平台</li><li><strong>实时推送</strong>：毫秒级消息传递</li><li><strong>离线存储</strong>：消息持久化存储</li></ul><h2 id="技术架构"><a href="#技术架构" class="headerlink" title="技术架构"></a>技术架构</h2><h3 id="系统架构图"><a href="#系统架构图" class="headerlink" title="系统架构图"></a>系统架构图</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ongwu博客 → GotifyNotify插件 → Gotify服务器 → 客户端设备</span><br><span class="line">     ↓              ↓              ↓           ↓</span><br><span class="line">   事件触发     消息处理      消息分发     消息接收</span><br></pre></td></tr></table></figure><h3 id="核心代码实现"><a href="#核心代码实现" class="headerlink" title="核心代码实现"></a>核心代码实现</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 通知处理类</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">GotifyNotify_Handler</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$gotifyUrl</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$appToken</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$url</span>, <span class="variable">$token</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;gotifyUrl = <span class="variable">$url</span>;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;appToken = <span class="variable">$token</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 发送通知</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">sendNotification</span>(<span class="params"><span class="variable">$title</span>, <span class="variable">$message</span>, <span class="variable">$priority</span> = <span class="number">0</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable">$data</span> = <span class="keyword">array</span>(</span><br><span class="line">            <span class="string">&#x27;title&#x27;</span> =&gt; <span class="variable">$title</span>,</span><br><span class="line">            <span class="string">&#x27;message&#x27;</span> =&gt; <span class="variable">$message</span>,</span><br><span class="line">            <span class="string">&#x27;priority&#x27;</span> =&gt; <span class="variable">$priority</span></span><br><span class="line">        );</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">postToGotify</span>(<span class="variable">$data</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 推送到Gotify</span></span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">postToGotify</span>(<span class="params"><span class="variable">$data</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable">$ch</span> = <span class="title function_ invoke__">curl_init</span>();</span><br><span class="line">        <span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$ch</span>, CURLOPT_URL, <span class="variable">$this</span>-&gt;gotifyUrl . <span class="string">&#x27;/message&#x27;</span>);</span><br><span class="line">        <span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$ch</span>, CURLOPT_POST, <span class="literal">true</span>);</span><br><span class="line">        <span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$ch</span>, CURLOPT_POSTFIELDS, <span class="title function_ invoke__">json_encode</span>(<span class="variable">$data</span>));</span><br><span class="line">        <span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$ch</span>, CURLOPT_HTTPHEADER, <span class="keyword">array</span>(</span><br><span class="line">            <span class="string">&#x27;X-Gotify-Key: &#x27;</span> . <span class="variable">$this</span>-&gt;appToken,</span><br><span class="line">            <span class="string">&#x27;Content-Type: application/json&#x27;</span></span><br><span class="line">        ));</span><br><span class="line">        </span><br><span class="line">        <span class="variable">$response</span> = <span class="title function_ invoke__">curl_exec</span>(<span class="variable">$ch</span>);</span><br><span class="line">        <span class="title function_ invoke__">curl_close</span>(<span class="variable">$ch</span>);</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$response</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="安装配置"><a href="#安装配置" class="headerlink" title="安装配置"></a>安装配置</h2><h3 id="1-安装Gotify服务器"><a href="#1-安装Gotify服务器" class="headerlink" title="1. 安装Gotify服务器"></a>1. 安装Gotify服务器</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Docker安装方式</span></span><br><span class="line">docker run -p 80:80 -p 443:443 \</span><br><span class="line">  -v /var/gotify:/app/data \</span><br><span class="line">  gotify/server</span><br></pre></td></tr></table></figure><h3 id="2-配置插件"><a href="#2-配置插件" class="headerlink" title="2. 配置插件"></a>2. 配置插件</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 插件配置</span></span><br><span class="line"><span class="keyword">return</span> <span class="keyword">array</span>(</span><br><span class="line">    <span class="string">&#x27;gotify_url&#x27;</span> =&gt; <span class="string">&#x27;https://your-gotify-server.com&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;app_token&#x27;</span> =&gt; <span class="string">&#x27;your-app-token&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;enable_comments&#x27;</span> =&gt; <span class="literal">true</span>,</span><br><span class="line">    <span class="string">&#x27;enable_posts&#x27;</span> =&gt; <span class="literal">true</span>,</span><br><span class="line">    <span class="string">&#x27;enable_system&#x27;</span> =&gt; <span class="literal">true</span>,</span><br><span class="line">    <span class="string">&#x27;notification_priority&#x27;</span> =&gt; <span class="number">0</span></span><br><span class="line">);</span><br></pre></td></tr></table></figure><h3 id="3-客户端配置"><a href="#3-客户端配置" class="headerlink" title="3. 客户端配置"></a>3. 客户端配置</h3><ul><li>下载Gotify客户端应用</li><li>配置服务器地址和认证信息</li><li>设置通知偏好</li></ul><h2 id="使用场景"><a href="#使用场景" class="headerlink" title="使用场景"></a>使用场景</h2><h3 id="博客管理"><a href="#博客管理" class="headerlink" title="博客管理"></a>博客管理</h3><ul><li>新评论实时提醒</li><li>系统状态监控</li><li>安全事件通知</li></ul><h3 id="用户服务"><a href="#用户服务" class="headerlink" title="用户服务"></a>用户服务</h3><ul><li>文章更新提醒</li><li>回复通知</li><li>重要公告推送</li></ul><h2 id="性能优化"><a href="#性能优化" class="headerlink" title="性能优化"></a>性能优化</h2><h3 id="推送优化"><a href="#推送优化" class="headerlink" title="推送优化"></a>推送优化</h3><ul><li>批量消息处理</li><li>智能重试机制</li><li>消息队列缓冲</li></ul><h3 id="资源管理"><a href="#资源管理" class="headerlink" title="资源管理"></a>资源管理</h3><ul><li>连接池复用</li><li>内存使用优化</li><li>数据库查询优化</li></ul><h2 id="安全考虑"><a href="#安全考虑" class="headerlink" title="安全考虑"></a>安全考虑</h2><h3 id="认证安全"><a href="#认证安全" class="headerlink" title="认证安全"></a>认证安全</h3><ul><li>Token加密存储</li><li>HTTPS通信加密</li><li>访问权限控制</li></ul><h3 id="数据保护"><a href="#数据保护" class="headerlink" title="数据保护"></a>数据保护</h3><ul><li>敏感信息过滤</li><li>日志记录审计</li><li>异常行为监控</li></ul><h2 id="扩展功能"><a href="#扩展功能" class="headerlink" title="扩展功能"></a>扩展功能</h2><h3 id="插件扩展"><a href="#插件扩展" class="headerlink" title="插件扩展"></a>插件扩展</h3><ul><li>支持自定义通知模板</li><li>支持多种推送服务</li><li>支持条件触发规则</li></ul><h3 id="集成能力"><a href="#集成能力" class="headerlink" title="集成能力"></a>集成能力</h3><ul><li>与现有通知系统集成</li><li>支持Webhook回调</li><li>支持第三方服务集成</li></ul><h2 id="故障排除"><a href="#故障排除" class="headerlink" title="故障排除"></a>故障排除</h2><h3 id="常见问题"><a href="#常见问题" class="headerlink" title="常见问题"></a>常见问题</h3><ol><li><strong>连接失败</strong>：检查网络和服务器状态</li><li><strong>认证错误</strong>：验证Token配置</li><li><strong>推送延迟</strong>：检查服务器负载</li></ol><h3 id="调试方法"><a href="#调试方法" class="headerlink" title="调试方法"></a>调试方法</h3><ul><li>启用详细日志</li><li>检查网络连接</li><li>验证API响应</li></ul><hr><p><em>GotifyNotify让ongwu博客通知更智能、更及时！</em></p>]]></content>
      
      
      <categories>
          
          <category> tech </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ongwu插件 </tag>
            
            <tag> 通知系统 </tag>
            
            <tag> Gotify </tag>
            
            <tag> 消息推送 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>GotifyNotify</title>
      <link href="/2025/01/10/5/"/>
      <url>/2025/01/10/5/</url>
      
        <content type="html"><![CDATA[<h1 id="GotifyNotify-ongwu通知插件"><a href="#GotifyNotify-ongwu通知插件" class="headerlink" title="GotifyNotify - ongwu通知插件"></a>GotifyNotify - ongwu通知插件</h1><h2 id="插件概述"><a href="#插件概述" class="headerlink" title="插件概述"></a>插件概述</h2><p>GotifyNotify是一个专为ongwu博客开发的通知插件，通过集成Gotify服务，为博客管理员和用户提供实时的消息推送功能。无论是新评论、新文章还是系统通知，都能及时推送到指定设备。</p><h2 id="主要功能"><a href="#主要功能" class="headerlink" title="主要功能"></a>主要功能</h2><h3 id="通知类型"><a href="#通知类型" class="headerlink" title="通知类型"></a>通知类型</h3><ul><li><strong>评论通知</strong>：新评论发布时自动推送</li><li><strong>文章通知</strong>：新文章发布时通知订阅用户</li><li><strong>系统通知</strong>：重要系统事件实时推送</li><li><strong>自定义通知</strong>：支持自定义消息内容</li></ul><h3 id="推送方式"><a href="#推送方式" class="headerlink" title="推送方式"></a>推送方式</h3><ul><li><strong>Gotify服务</strong>：通过Gotify API推送消息</li><li><strong>多设备支持</strong>：支持Android、iOS、Web等平台</li><li><strong>实时推送</strong>：毫秒级消息传递</li><li><strong>离线存储</strong>：消息持久化存储</li></ul><h2 id="技术架构"><a href="#技术架构" class="headerlink" title="技术架构"></a>技术架构</h2><h3 id="系统架构图"><a href="#系统架构图" class="headerlink" title="系统架构图"></a>系统架构图</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ongwu博客 → GotifyNotify插件 → Gotify服务器 → 客户端设备</span><br><span class="line">     ↓              ↓              ↓           ↓</span><br><span class="line">   事件触发     消息处理      消息分发     消息接收</span><br></pre></td></tr></table></figure><h3 id="核心代码实现"><a href="#核心代码实现" class="headerlink" title="核心代码实现"></a>核心代码实现</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 通知处理类</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">GotifyNotify_Handler</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$gotifyUrl</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$appToken</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$url</span>, <span class="variable">$token</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;gotifyUrl = <span class="variable">$url</span>;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;appToken = <span class="variable">$token</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 发送通知</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">sendNotification</span>(<span class="params"><span class="variable">$title</span>, <span class="variable">$message</span>, <span class="variable">$priority</span> = <span class="number">0</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable">$data</span> = <span class="keyword">array</span>(</span><br><span class="line">            <span class="string">&#x27;title&#x27;</span> =&gt; <span class="variable">$title</span>,</span><br><span class="line">            <span class="string">&#x27;message&#x27;</span> =&gt; <span class="variable">$message</span>,</span><br><span class="line">            <span class="string">&#x27;priority&#x27;</span> =&gt; <span class="variable">$priority</span></span><br><span class="line">        );</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">postToGotify</span>(<span class="variable">$data</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 推送到Gotify</span></span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">postToGotify</span>(<span class="params"><span class="variable">$data</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable">$ch</span> = <span class="title function_ invoke__">curl_init</span>();</span><br><span class="line">        <span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$ch</span>, CURLOPT_URL, <span class="variable">$this</span>-&gt;gotifyUrl . <span class="string">&#x27;/message&#x27;</span>);</span><br><span class="line">        <span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$ch</span>, CURLOPT_POST, <span class="literal">true</span>);</span><br><span class="line">        <span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$ch</span>, CURLOPT_POSTFIELDS, <span class="title function_ invoke__">json_encode</span>(<span class="variable">$data</span>));</span><br><span class="line">        <span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$ch</span>, CURLOPT_HTTPHEADER, <span class="keyword">array</span>(</span><br><span class="line">            <span class="string">&#x27;X-Gotify-Key: &#x27;</span> . <span class="variable">$this</span>-&gt;appToken,</span><br><span class="line">            <span class="string">&#x27;Content-Type: application/json&#x27;</span></span><br><span class="line">        ));</span><br><span class="line">        </span><br><span class="line">        <span class="variable">$response</span> = <span class="title function_ invoke__">curl_exec</span>(<span class="variable">$ch</span>);</span><br><span class="line">        <span class="title function_ invoke__">curl_close</span>(<span class="variable">$ch</span>);</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$response</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="安装配置"><a href="#安装配置" class="headerlink" title="安装配置"></a>安装配置</h2><h3 id="1-安装Gotify服务器"><a href="#1-安装Gotify服务器" class="headerlink" title="1. 安装Gotify服务器"></a>1. 安装Gotify服务器</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Docker安装方式</span></span><br><span class="line">docker run -p 80:80 -p 443:443 \</span><br><span class="line">  -v /var/gotify:/app/data \</span><br><span class="line">  gotify/server</span><br></pre></td></tr></table></figure><h3 id="2-配置插件"><a href="#2-配置插件" class="headerlink" title="2. 配置插件"></a>2. 配置插件</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 插件配置</span></span><br><span class="line"><span class="keyword">return</span> <span class="keyword">array</span>(</span><br><span class="line">    <span class="string">&#x27;gotify_url&#x27;</span> =&gt; <span class="string">&#x27;https://your-gotify-server.com&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;app_token&#x27;</span> =&gt; <span class="string">&#x27;your-app-token&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;enable_comments&#x27;</span> =&gt; <span class="literal">true</span>,</span><br><span class="line">    <span class="string">&#x27;enable_posts&#x27;</span> =&gt; <span class="literal">true</span>,</span><br><span class="line">    <span class="string">&#x27;enable_system&#x27;</span> =&gt; <span class="literal">true</span>,</span><br><span class="line">    <span class="string">&#x27;notification_priority&#x27;</span> =&gt; <span class="number">0</span></span><br><span class="line">);</span><br></pre></td></tr></table></figure><h3 id="3-客户端配置"><a href="#3-客户端配置" class="headerlink" title="3. 客户端配置"></a>3. 客户端配置</h3><ul><li>下载Gotify客户端应用</li><li>配置服务器地址和认证信息</li><li>设置通知偏好</li></ul><h2 id="使用场景"><a href="#使用场景" class="headerlink" title="使用场景"></a>使用场景</h2><h3 id="博客管理"><a href="#博客管理" class="headerlink" title="博客管理"></a>博客管理</h3><ul><li>新评论实时提醒</li><li>系统状态监控</li><li>安全事件通知</li></ul><h3 id="用户服务"><a href="#用户服务" class="headerlink" title="用户服务"></a>用户服务</h3><ul><li>文章更新提醒</li><li>回复通知</li><li>重要公告推送</li></ul><h2 id="性能优化"><a href="#性能优化" class="headerlink" title="性能优化"></a>性能优化</h2><h3 id="推送优化"><a href="#推送优化" class="headerlink" title="推送优化"></a>推送优化</h3><ul><li>批量消息处理</li><li>智能重试机制</li><li>消息队列缓冲</li></ul><h3 id="资源管理"><a href="#资源管理" class="headerlink" title="资源管理"></a>资源管理</h3><ul><li>连接池复用</li><li>内存使用优化</li><li>数据库查询优化</li></ul><h2 id="安全考虑"><a href="#安全考虑" class="headerlink" title="安全考虑"></a>安全考虑</h2><h3 id="认证安全"><a href="#认证安全" class="headerlink" title="认证安全"></a>认证安全</h3><ul><li>Token加密存储</li><li>HTTPS通信加密</li><li>访问权限控制</li></ul><h3 id="数据保护"><a href="#数据保护" class="headerlink" title="数据保护"></a>数据保护</h3><ul><li>敏感信息过滤</li><li>日志记录审计</li><li>异常行为监控</li></ul><h2 id="扩展功能"><a href="#扩展功能" class="headerlink" title="扩展功能"></a>扩展功能</h2><h3 id="插件扩展"><a href="#插件扩展" class="headerlink" title="插件扩展"></a>插件扩展</h3><ul><li>支持自定义通知模板</li><li>支持多种推送服务</li><li>支持条件触发规则</li></ul><h3 id="集成能力"><a href="#集成能力" class="headerlink" title="集成能力"></a>集成能力</h3><ul><li>与现有通知系统集成</li><li>支持Webhook回调</li><li>支持第三方服务集成</li></ul><h2 id="故障排除"><a href="#故障排除" class="headerlink" title="故障排除"></a>故障排除</h2><h3 id="常见问题"><a href="#常见问题" class="headerlink" title="常见问题"></a>常见问题</h3><ol><li><strong>连接失败</strong>：检查网络和服务器状态</li><li><strong>认证错误</strong>：验证Token配置</li><li><strong>推送延迟</strong>：检查服务器负载</li></ol><h3 id="调试方法"><a href="#调试方法" class="headerlink" title="调试方法"></a>调试方法</h3><ul><li>启用详细日志</li><li>检查网络连接</li><li>验证API响应</li></ul><hr><p><em>GotifyNotify让ongwu博客通知更智能、更及时！</em></p>]]></content>
      
      
      <categories>
          
          <category> tech </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ongwu插件 </tag>
            
            <tag> 通知系统 </tag>
            
            <tag> Gotify </tag>
            
            <tag> 消息推送 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>GotifyNotify</title>
      <link href="/2025/01/10/8/"/>
      <url>/2025/01/10/8/</url>
      
        <content type="html"><![CDATA[<h1 id="GotifyNotify-ongwu通知插件"><a href="#GotifyNotify-ongwu通知插件" class="headerlink" title="GotifyNotify - ongwu通知插件"></a>GotifyNotify - ongwu通知插件</h1><h2 id="插件概述"><a href="#插件概述" class="headerlink" title="插件概述"></a>插件概述</h2><p>GotifyNotify是一个专为ongwu博客开发的通知插件，通过集成Gotify服务，为博客管理员和用户提供实时的消息推送功能。无论是新评论、新文章还是系统通知，都能及时推送到指定设备。</p><h2 id="主要功能"><a href="#主要功能" class="headerlink" title="主要功能"></a>主要功能</h2><h3 id="通知类型"><a href="#通知类型" class="headerlink" title="通知类型"></a>通知类型</h3><ul><li><strong>评论通知</strong>：新评论发布时自动推送</li><li><strong>文章通知</strong>：新文章发布时通知订阅用户</li><li><strong>系统通知</strong>：重要系统事件实时推送</li><li><strong>自定义通知</strong>：支持自定义消息内容</li></ul><h3 id="推送方式"><a href="#推送方式" class="headerlink" title="推送方式"></a>推送方式</h3><ul><li><strong>Gotify服务</strong>：通过Gotify API推送消息</li><li><strong>多设备支持</strong>：支持Android、iOS、Web等平台</li><li><strong>实时推送</strong>：毫秒级消息传递</li><li><strong>离线存储</strong>：消息持久化存储</li></ul><h2 id="技术架构"><a href="#技术架构" class="headerlink" title="技术架构"></a>技术架构</h2><h3 id="系统架构图"><a href="#系统架构图" class="headerlink" title="系统架构图"></a>系统架构图</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ongwu博客 → GotifyNotify插件 → Gotify服务器 → 客户端设备</span><br><span class="line">     ↓              ↓              ↓           ↓</span><br><span class="line">   事件触发     消息处理      消息分发     消息接收</span><br></pre></td></tr></table></figure><h3 id="核心代码实现"><a href="#核心代码实现" class="headerlink" title="核心代码实现"></a>核心代码实现</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 通知处理类</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">GotifyNotify_Handler</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$gotifyUrl</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$appToken</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$url</span>, <span class="variable">$token</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;gotifyUrl = <span class="variable">$url</span>;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;appToken = <span class="variable">$token</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 发送通知</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">sendNotification</span>(<span class="params"><span class="variable">$title</span>, <span class="variable">$message</span>, <span class="variable">$priority</span> = <span class="number">0</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable">$data</span> = <span class="keyword">array</span>(</span><br><span class="line">            <span class="string">&#x27;title&#x27;</span> =&gt; <span class="variable">$title</span>,</span><br><span class="line">            <span class="string">&#x27;message&#x27;</span> =&gt; <span class="variable">$message</span>,</span><br><span class="line">            <span class="string">&#x27;priority&#x27;</span> =&gt; <span class="variable">$priority</span></span><br><span class="line">        );</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">postToGotify</span>(<span class="variable">$data</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 推送到Gotify</span></span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">postToGotify</span>(<span class="params"><span class="variable">$data</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable">$ch</span> = <span class="title function_ invoke__">curl_init</span>();</span><br><span class="line">        <span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$ch</span>, CURLOPT_URL, <span class="variable">$this</span>-&gt;gotifyUrl . <span class="string">&#x27;/message&#x27;</span>);</span><br><span class="line">        <span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$ch</span>, CURLOPT_POST, <span class="literal">true</span>);</span><br><span class="line">        <span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$ch</span>, CURLOPT_POSTFIELDS, <span class="title function_ invoke__">json_encode</span>(<span class="variable">$data</span>));</span><br><span class="line">        <span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$ch</span>, CURLOPT_HTTPHEADER, <span class="keyword">array</span>(</span><br><span class="line">            <span class="string">&#x27;X-Gotify-Key: &#x27;</span> . <span class="variable">$this</span>-&gt;appToken,</span><br><span class="line">            <span class="string">&#x27;Content-Type: application/json&#x27;</span></span><br><span class="line">        ));</span><br><span class="line">        </span><br><span class="line">        <span class="variable">$response</span> = <span class="title function_ invoke__">curl_exec</span>(<span class="variable">$ch</span>);</span><br><span class="line">        <span class="title function_ invoke__">curl_close</span>(<span class="variable">$ch</span>);</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$response</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="安装配置"><a href="#安装配置" class="headerlink" title="安装配置"></a>安装配置</h2><h3 id="1-安装Gotify服务器"><a href="#1-安装Gotify服务器" class="headerlink" title="1. 安装Gotify服务器"></a>1. 安装Gotify服务器</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Docker安装方式</span></span><br><span class="line">docker run -p 80:80 -p 443:443 \</span><br><span class="line">  -v /var/gotify:/app/data \</span><br><span class="line">  gotify/server</span><br></pre></td></tr></table></figure><h3 id="2-配置插件"><a href="#2-配置插件" class="headerlink" title="2. 配置插件"></a>2. 配置插件</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 插件配置</span></span><br><span class="line"><span class="keyword">return</span> <span class="keyword">array</span>(</span><br><span class="line">    <span class="string">&#x27;gotify_url&#x27;</span> =&gt; <span class="string">&#x27;https://your-gotify-server.com&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;app_token&#x27;</span> =&gt; <span class="string">&#x27;your-app-token&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;enable_comments&#x27;</span> =&gt; <span class="literal">true</span>,</span><br><span class="line">    <span class="string">&#x27;enable_posts&#x27;</span> =&gt; <span class="literal">true</span>,</span><br><span class="line">    <span class="string">&#x27;enable_system&#x27;</span> =&gt; <span class="literal">true</span>,</span><br><span class="line">    <span class="string">&#x27;notification_priority&#x27;</span> =&gt; <span class="number">0</span></span><br><span class="line">);</span><br></pre></td></tr></table></figure><h3 id="3-客户端配置"><a href="#3-客户端配置" class="headerlink" title="3. 客户端配置"></a>3. 客户端配置</h3><ul><li>下载Gotify客户端应用</li><li>配置服务器地址和认证信息</li><li>设置通知偏好</li></ul><h2 id="使用场景"><a href="#使用场景" class="headerlink" title="使用场景"></a>使用场景</h2><h3 id="博客管理"><a href="#博客管理" class="headerlink" title="博客管理"></a>博客管理</h3><ul><li>新评论实时提醒</li><li>系统状态监控</li><li>安全事件通知</li></ul><h3 id="用户服务"><a href="#用户服务" class="headerlink" title="用户服务"></a>用户服务</h3><ul><li>文章更新提醒</li><li>回复通知</li><li>重要公告推送</li></ul><h2 id="性能优化"><a href="#性能优化" class="headerlink" title="性能优化"></a>性能优化</h2><h3 id="推送优化"><a href="#推送优化" class="headerlink" title="推送优化"></a>推送优化</h3><ul><li>批量消息处理</li><li>智能重试机制</li><li>消息队列缓冲</li></ul><h3 id="资源管理"><a href="#资源管理" class="headerlink" title="资源管理"></a>资源管理</h3><ul><li>连接池复用</li><li>内存使用优化</li><li>数据库查询优化</li></ul><h2 id="安全考虑"><a href="#安全考虑" class="headerlink" title="安全考虑"></a>安全考虑</h2><h3 id="认证安全"><a href="#认证安全" class="headerlink" title="认证安全"></a>认证安全</h3><ul><li>Token加密存储</li><li>HTTPS通信加密</li><li>访问权限控制</li></ul><h3 id="数据保护"><a href="#数据保护" class="headerlink" title="数据保护"></a>数据保护</h3><ul><li>敏感信息过滤</li><li>日志记录审计</li><li>异常行为监控</li></ul><h2 id="扩展功能"><a href="#扩展功能" class="headerlink" title="扩展功能"></a>扩展功能</h2><h3 id="插件扩展"><a href="#插件扩展" class="headerlink" title="插件扩展"></a>插件扩展</h3><ul><li>支持自定义通知模板</li><li>支持多种推送服务</li><li>支持条件触发规则</li></ul><h3 id="集成能力"><a href="#集成能力" class="headerlink" title="集成能力"></a>集成能力</h3><ul><li>与现有通知系统集成</li><li>支持Webhook回调</li><li>支持第三方服务集成</li></ul><h2 id="故障排除"><a href="#故障排除" class="headerlink" title="故障排除"></a>故障排除</h2><h3 id="常见问题"><a href="#常见问题" class="headerlink" title="常见问题"></a>常见问题</h3><ol><li><strong>连接失败</strong>：检查网络和服务器状态</li><li><strong>认证错误</strong>：验证Token配置</li><li><strong>推送延迟</strong>：检查服务器负载</li></ol><h3 id="调试方法"><a href="#调试方法" class="headerlink" title="调试方法"></a>调试方法</h3><ul><li>启用详细日志</li><li>检查网络连接</li><li>验证API响应</li></ul><hr><p><em>GotifyNotify让ongwu博客通知更智能、更及时！</em></p>]]></content>
      
      
      <categories>
          
          <category> tech </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ongwu插件 </tag>
            
            <tag> 通知系统 </tag>
            
            <tag> Gotify </tag>
            
            <tag> 消息推送 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>GotifyNotify</title>
      <link href="/2025/01/10/9/"/>
      <url>/2025/01/10/9/</url>
      
        <content type="html"><![CDATA[<h1 id="GotifyNotify-ongwu通知插件"><a href="#GotifyNotify-ongwu通知插件" class="headerlink" title="GotifyNotify - ongwu通知插件"></a>GotifyNotify - ongwu通知插件</h1><h2 id="插件概述"><a href="#插件概述" class="headerlink" title="插件概述"></a>插件概述</h2><p>GotifyNotify是一个专为ongwu博客开发的通知插件，通过集成Gotify服务，为博客管理员和用户提供实时的消息推送功能。无论是新评论、新文章还是系统通知，都能及时推送到指定设备。</p><h2 id="主要功能"><a href="#主要功能" class="headerlink" title="主要功能"></a>主要功能</h2><h3 id="通知类型"><a href="#通知类型" class="headerlink" title="通知类型"></a>通知类型</h3><ul><li><strong>评论通知</strong>：新评论发布时自动推送</li><li><strong>文章通知</strong>：新文章发布时通知订阅用户</li><li><strong>系统通知</strong>：重要系统事件实时推送</li><li><strong>自定义通知</strong>：支持自定义消息内容</li></ul><h3 id="推送方式"><a href="#推送方式" class="headerlink" title="推送方式"></a>推送方式</h3><ul><li><strong>Gotify服务</strong>：通过Gotify API推送消息</li><li><strong>多设备支持</strong>：支持Android、iOS、Web等平台</li><li><strong>实时推送</strong>：毫秒级消息传递</li><li><strong>离线存储</strong>：消息持久化存储</li></ul><h2 id="技术架构"><a href="#技术架构" class="headerlink" title="技术架构"></a>技术架构</h2><h3 id="系统架构图"><a href="#系统架构图" class="headerlink" title="系统架构图"></a>系统架构图</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ongwu博客 → GotifyNotify插件 → Gotify服务器 → 客户端设备</span><br><span class="line">     ↓              ↓              ↓           ↓</span><br><span class="line">   事件触发     消息处理      消息分发     消息接收</span><br></pre></td></tr></table></figure><h3 id="核心代码实现"><a href="#核心代码实现" class="headerlink" title="核心代码实现"></a>核心代码实现</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 通知处理类</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">GotifyNotify_Handler</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$gotifyUrl</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$appToken</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$url</span>, <span class="variable">$token</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;gotifyUrl = <span class="variable">$url</span>;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;appToken = <span class="variable">$token</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 发送通知</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">sendNotification</span>(<span class="params"><span class="variable">$title</span>, <span class="variable">$message</span>, <span class="variable">$priority</span> = <span class="number">0</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable">$data</span> = <span class="keyword">array</span>(</span><br><span class="line">            <span class="string">&#x27;title&#x27;</span> =&gt; <span class="variable">$title</span>,</span><br><span class="line">            <span class="string">&#x27;message&#x27;</span> =&gt; <span class="variable">$message</span>,</span><br><span class="line">            <span class="string">&#x27;priority&#x27;</span> =&gt; <span class="variable">$priority</span></span><br><span class="line">        );</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">postToGotify</span>(<span class="variable">$data</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 推送到Gotify</span></span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">postToGotify</span>(<span class="params"><span class="variable">$data</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable">$ch</span> = <span class="title function_ invoke__">curl_init</span>();</span><br><span class="line">        <span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$ch</span>, CURLOPT_URL, <span class="variable">$this</span>-&gt;gotifyUrl . <span class="string">&#x27;/message&#x27;</span>);</span><br><span class="line">        <span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$ch</span>, CURLOPT_POST, <span class="literal">true</span>);</span><br><span class="line">        <span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$ch</span>, CURLOPT_POSTFIELDS, <span class="title function_ invoke__">json_encode</span>(<span class="variable">$data</span>));</span><br><span class="line">        <span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$ch</span>, CURLOPT_HTTPHEADER, <span class="keyword">array</span>(</span><br><span class="line">            <span class="string">&#x27;X-Gotify-Key: &#x27;</span> . <span class="variable">$this</span>-&gt;appToken,</span><br><span class="line">            <span class="string">&#x27;Content-Type: application/json&#x27;</span></span><br><span class="line">        ));</span><br><span class="line">        </span><br><span class="line">        <span class="variable">$response</span> = <span class="title function_ invoke__">curl_exec</span>(<span class="variable">$ch</span>);</span><br><span class="line">        <span class="title function_ invoke__">curl_close</span>(<span class="variable">$ch</span>);</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$response</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="安装配置"><a href="#安装配置" class="headerlink" title="安装配置"></a>安装配置</h2><h3 id="1-安装Gotify服务器"><a href="#1-安装Gotify服务器" class="headerlink" title="1. 安装Gotify服务器"></a>1. 安装Gotify服务器</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Docker安装方式</span></span><br><span class="line">docker run -p 80:80 -p 443:443 \</span><br><span class="line">  -v /var/gotify:/app/data \</span><br><span class="line">  gotify/server</span><br></pre></td></tr></table></figure><h3 id="2-配置插件"><a href="#2-配置插件" class="headerlink" title="2. 配置插件"></a>2. 配置插件</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 插件配置</span></span><br><span class="line"><span class="keyword">return</span> <span class="keyword">array</span>(</span><br><span class="line">    <span class="string">&#x27;gotify_url&#x27;</span> =&gt; <span class="string">&#x27;https://your-gotify-server.com&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;app_token&#x27;</span> =&gt; <span class="string">&#x27;your-app-token&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;enable_comments&#x27;</span> =&gt; <span class="literal">true</span>,</span><br><span class="line">    <span class="string">&#x27;enable_posts&#x27;</span> =&gt; <span class="literal">true</span>,</span><br><span class="line">    <span class="string">&#x27;enable_system&#x27;</span> =&gt; <span class="literal">true</span>,</span><br><span class="line">    <span class="string">&#x27;notification_priority&#x27;</span> =&gt; <span class="number">0</span></span><br><span class="line">);</span><br></pre></td></tr></table></figure><h3 id="3-客户端配置"><a href="#3-客户端配置" class="headerlink" title="3. 客户端配置"></a>3. 客户端配置</h3><ul><li>下载Gotify客户端应用</li><li>配置服务器地址和认证信息</li><li>设置通知偏好</li></ul><h2 id="使用场景"><a href="#使用场景" class="headerlink" title="使用场景"></a>使用场景</h2><h3 id="博客管理"><a href="#博客管理" class="headerlink" title="博客管理"></a>博客管理</h3><ul><li>新评论实时提醒</li><li>系统状态监控</li><li>安全事件通知</li></ul><h3 id="用户服务"><a href="#用户服务" class="headerlink" title="用户服务"></a>用户服务</h3><ul><li>文章更新提醒</li><li>回复通知</li><li>重要公告推送</li></ul><h2 id="性能优化"><a href="#性能优化" class="headerlink" title="性能优化"></a>性能优化</h2><h3 id="推送优化"><a href="#推送优化" class="headerlink" title="推送优化"></a>推送优化</h3><ul><li>批量消息处理</li><li>智能重试机制</li><li>消息队列缓冲</li></ul><h3 id="资源管理"><a href="#资源管理" class="headerlink" title="资源管理"></a>资源管理</h3><ul><li>连接池复用</li><li>内存使用优化</li><li>数据库查询优化</li></ul><h2 id="安全考虑"><a href="#安全考虑" class="headerlink" title="安全考虑"></a>安全考虑</h2><h3 id="认证安全"><a href="#认证安全" class="headerlink" title="认证安全"></a>认证安全</h3><ul><li>Token加密存储</li><li>HTTPS通信加密</li><li>访问权限控制</li></ul><h3 id="数据保护"><a href="#数据保护" class="headerlink" title="数据保护"></a>数据保护</h3><ul><li>敏感信息过滤</li><li>日志记录审计</li><li>异常行为监控</li></ul><h2 id="扩展功能"><a href="#扩展功能" class="headerlink" title="扩展功能"></a>扩展功能</h2><h3 id="插件扩展"><a href="#插件扩展" class="headerlink" title="插件扩展"></a>插件扩展</h3><ul><li>支持自定义通知模板</li><li>支持多种推送服务</li><li>支持条件触发规则</li></ul><h3 id="集成能力"><a href="#集成能力" class="headerlink" title="集成能力"></a>集成能力</h3><ul><li>与现有通知系统集成</li><li>支持Webhook回调</li><li>支持第三方服务集成</li></ul><h2 id="故障排除"><a href="#故障排除" class="headerlink" title="故障排除"></a>故障排除</h2><h3 id="常见问题"><a href="#常见问题" class="headerlink" title="常见问题"></a>常见问题</h3><ol><li><strong>连接失败</strong>：检查网络和服务器状态</li><li><strong>认证错误</strong>：验证Token配置</li><li><strong>推送延迟</strong>：检查服务器负载</li></ol><h3 id="调试方法"><a href="#调试方法" class="headerlink" title="调试方法"></a>调试方法</h3><ul><li>启用详细日志</li><li>检查网络连接</li><li>验证API响应</li></ul><hr><p><em>GotifyNotify让ongwu博客通知更智能、更及时！</em></p>]]></content>
      
      
      <categories>
          
          <category> tech </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ongwu插件 </tag>
            
            <tag> 通知系统 </tag>
            
            <tag> Gotify </tag>
            
            <tag> 消息推送 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>让ongwu支持搜索符号</title>
      <link href="/2025/01/09/13/"/>
      <url>/2025/01/09/13/</url>
      
        <content type="html"><![CDATA[<h1 id="让ongwu支持搜索符号"><a href="#让ongwu支持搜索符号" class="headerlink" title="让ongwu支持搜索符号"></a>让ongwu支持搜索符号</h1><h2 id="问题背景"><a href="#问题背景" class="headerlink" title="问题背景"></a>问题背景</h2><p>用过ongwu的应该都清楚它本身搜索是不支持符号的，一般都会过滤掉，只会保留文字字母数字进行搜索。这种过滤应该是出于安全考虑的，但如果你的需求需要搜索符号之类的东西，则可以通过修改源码的方式实现。</p><h2 id="修改原理"><a href="#修改原理" class="headerlink" title="修改原理"></a>修改原理</h2><p>ongwu的搜索功能是在<code>var/Widget/Archive.php</code>中实现的，所以需要修改两处代码：</p><h3 id="第一处：关键词过滤逻辑"><a href="#第一处：关键词过滤逻辑" class="headerlink" title="第一处：关键词过滤逻辑"></a>第一处：关键词过滤逻辑</h3><p>在<code>var/Widget/Archive.php</code>文件中找到以下代码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 原始代码</span></span><br><span class="line"><span class="variable">$filterKeywords</span> = <span class="variable language_">$this</span>-&gt;request-&gt;<span class="title function_ invoke__">get</span>(<span class="string">&#x27;keywords&#x27;</span>);</span><br><span class="line"><span class="variable">$filterKeywords</span> = <span class="title function_ invoke__">trim</span>(<span class="variable">$filterKeywords</span>);</span><br><span class="line"><span class="variable">$filterKeywords</span> = <span class="title function_ invoke__">str_replace</span>(<span class="keyword">array</span>(<span class="string">&#x27;+&#x27;</span>, <span class="string">&#x27;-&#x27;</span>, <span class="string">&#x27;&amp;&#x27;</span>, <span class="string">&#x27;|&#x27;</span>, <span class="string">&#x27;!&#x27;</span>, <span class="string">&#x27;(&#x27;</span>, <span class="string">&#x27;)&#x27;</span>, <span class="string">&#x27;&#123;&#x27;</span>, <span class="string">&#x27;&#125;&#x27;</span>, <span class="string">&#x27;[&#x27;</span>, <span class="string">&#x27;]&#x27;</span>, <span class="string">&#x27;^&#x27;</span>, <span class="string">&#x27;&quot;&#x27;</span>, <span class="string">&#x27;~&#x27;</span>, <span class="string">&#x27;*&#x27;</span>, <span class="string">&#x27;?&#x27;</span>, <span class="string">&#x27;:&#x27;</span>, <span class="string">&#x27;\\&#x27;</span>), <span class="string">&#x27;&#x27;</span>, <span class="variable">$filterKeywords</span>);</span><br></pre></td></tr></table></figure><p>修改为：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 修改后的代码</span></span><br><span class="line"><span class="variable">$filterKeywords</span> = <span class="variable language_">$this</span>-&gt;request-&gt;<span class="title function_ invoke__">get</span>(<span class="string">&#x27;keywords&#x27;</span>);</span><br><span class="line"><span class="variable">$filterKeywords</span> = <span class="title function_ invoke__">trim</span>(<span class="variable">$filterKeywords</span>);</span><br><span class="line"><span class="comment">// 注释掉或删除符号过滤代码</span></span><br><span class="line"><span class="comment">// $filterKeywords = str_replace(array(&#x27;+&#x27;, &#x27;-&#x27;, &#x27;&amp;&#x27;, &#x27;|&#x27;, &#x27;!&#x27;, &#x27;(&#x27;, &#x27;)&#x27;, &#x27;&#123;&#x27;, &#x27;&#125;&#x27;, &#x27;[&#x27;, &#x27;]&#x27;, &#x27;^&#x27;, &#x27;&quot;&#x27;, &#x27;~&#x27;, &#x27;*&#x27;, &#x27;?&#x27;, &#x27;:&#x27;, &#x27;\\&#x27;), &#x27;&#x27;, $filterKeywords);</span></span><br></pre></td></tr></table></figure><h3 id="第二处：SQL查询构建"><a href="#第二处：SQL查询构建" class="headerlink" title="第二处：SQL查询构建"></a>第二处：SQL查询构建</h3><p>找到构建SQL查询的部分：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 原始代码</span></span><br><span class="line"><span class="keyword">if</span> (!<span class="keyword">empty</span>(<span class="variable">$filterKeywords</span>)) &#123;</span><br><span class="line">    <span class="variable">$filterKeywords</span> = <span class="string">&#x27;%&#x27;</span> . <span class="variable">$filterKeywords</span> . <span class="string">&#x27;%&#x27;</span>;</span><br><span class="line">    <span class="variable language_">$this</span>-&gt;db-&gt;<span class="title function_ invoke__">where</span>(<span class="string">&#x27;table.contents.title LIKE ? OR table.contents.text LIKE ?&#x27;</span>, <span class="variable">$filterKeywords</span>, <span class="variable">$filterKeywords</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>修改为：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 修改后的代码</span></span><br><span class="line"><span class="keyword">if</span> (!<span class="keyword">empty</span>(<span class="variable">$filterKeywords</span>)) &#123;</span><br><span class="line">    <span class="comment">// 支持特殊符号的搜索</span></span><br><span class="line">    <span class="variable">$filterKeywords</span> = <span class="string">&#x27;%&#x27;</span> . <span class="title function_ invoke__">addslashes</span>(<span class="variable">$filterKeywords</span>) . <span class="string">&#x27;%&#x27;</span>;</span><br><span class="line">    <span class="variable language_">$this</span>-&gt;db-&gt;<span class="title function_ invoke__">where</span>(<span class="string">&#x27;table.contents.title LIKE ? OR table.contents.text LIKE ?&#x27;</span>, <span class="variable">$filterKeywords</span>, <span class="variable">$filterKeywords</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="完整修改示例"><a href="#完整修改示例" class="headerlink" title="完整修改示例"></a>完整修改示例</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">// var/Widget/Archive.php 修改示例</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Widget_Archive</span> <span class="keyword">extends</span> <span class="title">Widget_Abstract_Contents</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="comment">// ... 其他代码 ...</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 执行搜索</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">search</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;db-&gt;<span class="title function_ invoke__">select</span>(<span class="string">&#x27;table.contents.cid&#x27;</span>, <span class="string">&#x27;table.contents.title&#x27;</span>, <span class="string">&#x27;table.contents.slug&#x27;</span>, <span class="string">&#x27;table.contents.created&#x27;</span>, <span class="string">&#x27;table.contents.authorId&#x27;</span>, <span class="string">&#x27;table.contents.modified&#x27;</span>, <span class="string">&#x27;table.contents.type&#x27;</span>, <span class="string">&#x27;table.contents.status&#x27;</span>, <span class="string">&#x27;table.contents.password&#x27;</span>, <span class="string">&#x27;table.contents.commentsNum&#x27;</span>, <span class="string">&#x27;table.contents.order&#x27;</span>, <span class="string">&#x27;table.contents.template&#x27;</span>, <span class="string">&#x27;table.contents.allowComment&#x27;</span>, <span class="string">&#x27;table.contents.allowPing&#x27;</span>, <span class="string">&#x27;table.contents.allowFeed&#x27;</span>);</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;db-&gt;<span class="keyword">from</span>(<span class="string">&#x27;table.contents&#x27;</span>);</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 获取搜索关键词</span></span><br><span class="line">        <span class="variable">$filterKeywords</span> = <span class="variable language_">$this</span>-&gt;request-&gt;<span class="title function_ invoke__">get</span>(<span class="string">&#x27;keywords&#x27;</span>);</span><br><span class="line">        <span class="variable">$filterKeywords</span> = <span class="title function_ invoke__">trim</span>(<span class="variable">$filterKeywords</span>);</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 注释掉符号过滤，支持符号搜索</span></span><br><span class="line">        <span class="comment">// $filterKeywords = str_replace(array(&#x27;+&#x27;, &#x27;-&#x27;, &#x27;&amp;&#x27;, &#x27;|&#x27;, &#x27;!&#x27;, &#x27;(&#x27;, &#x27;)&#x27;, &#x27;&#123;&#x27;, &#x27;&#125;&#x27;, &#x27;[&#x27;, &#x27;]&#x27;, &#x27;^&#x27;, &#x27;&quot;&#x27;, &#x27;~&#x27;, &#x27;*&#x27;, &#x27;?&#x27;, &#x27;:&#x27;, &#x27;\\&#x27;), &#x27;&#x27;, $filterKeywords);</span></span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> (!<span class="keyword">empty</span>(<span class="variable">$filterKeywords</span>)) &#123;</span><br><span class="line">            <span class="comment">// 使用addslashes防止SQL注入，同时支持符号搜索</span></span><br><span class="line">            <span class="variable">$filterKeywords</span> = <span class="string">&#x27;%&#x27;</span> . <span class="title function_ invoke__">addslashes</span>(<span class="variable">$filterKeywords</span>) . <span class="string">&#x27;%&#x27;</span>;</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;db-&gt;<span class="title function_ invoke__">where</span>(<span class="string">&#x27;table.contents.title LIKE ? OR table.contents.text LIKE ?&#x27;</span>, <span class="variable">$filterKeywords</span>, <span class="variable">$filterKeywords</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// ... 其他搜索逻辑 ...</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="安全注意事项"><a href="#安全注意事项" class="headerlink" title="安全注意事项"></a>安全注意事项</h2><h3 id="1-SQL注入防护"><a href="#1-SQL注入防护" class="headerlink" title="1. SQL注入防护"></a>1. SQL注入防护</h3><p>虽然我们允许符号搜索，但必须确保SQL安全：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 使用addslashes或更好的方法处理输入</span></span><br><span class="line"><span class="variable">$filterKeywords</span> = <span class="title function_ invoke__">addslashes</span>(<span class="variable">$filterKeywords</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 或者使用预处理语句</span></span><br><span class="line"><span class="variable">$stmt</span> = <span class="variable language_">$this</span>-&gt;db-&gt;<span class="title function_ invoke__">prepare</span>(<span class="string">&#x27;SELECT * FROM table.contents WHERE title LIKE ? OR text LIKE ?&#x27;</span>);</span><br><span class="line"><span class="variable">$stmt</span>-&gt;<span class="title function_ invoke__">execute</span>(<span class="keyword">array</span>(<span class="variable">$filterKeywords</span>, <span class="variable">$filterKeywords</span>));</span><br></pre></td></tr></table></figure><h3 id="2-输入验证"><a href="#2-输入验证" class="headerlink" title="2. 输入验证"></a>2. 输入验证</h3><p>添加输入长度和内容验证：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 验证搜索关键词长度</span></span><br><span class="line"><span class="keyword">if</span> (<span class="title function_ invoke__">strlen</span>(<span class="variable">$filterKeywords</span>) &gt; <span class="number">100</span>) &#123;</span><br><span class="line">    <span class="variable">$filterKeywords</span> = <span class="title function_ invoke__">substr</span>(<span class="variable">$filterKeywords</span>, <span class="number">0</span>, <span class="number">100</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 验证是否包含恶意内容</span></span><br><span class="line"><span class="keyword">if</span> (<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/&lt;script|javascript|vbscript|onload|onerror/i&#x27;</span>, <span class="variable">$filterKeywords</span>)) &#123;</span><br><span class="line">    <span class="variable">$filterKeywords</span> = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="测试验证"><a href="#测试验证" class="headerlink" title="测试验证"></a>测试验证</h2><h3 id="1-基本符号测试"><a href="#1-基本符号测试" class="headerlink" title="1. 基本符号测试"></a>1. 基本符号测试</h3><p>测试以下符号是否能正常搜索：</p><ul><li><code>+</code> 加号</li><li><code>-</code> 减号</li><li><code>&amp;</code> 与号</li><li><code>|</code> 或号</li><li><code>!</code> 感叹号</li><li><code>()</code> 括号</li><li><code>[]</code> 方括号</li><li><code>&#123;&#125;</code> 花括号</li></ul><h3 id="2-复杂搜索测试"><a href="#2-复杂搜索测试" class="headerlink" title="2. 复杂搜索测试"></a>2. 复杂搜索测试</h3><p>测试复杂搜索表达式：</p><ul><li><code>PHP + MySQL</code></li><li><code>(前端|后端)开发</code></li><li><code>ongwu &amp; 插件</code></li><li><code>[重要] 更新</code></li></ul><h2 id="性能优化建议"><a href="#性能优化建议" class="headerlink" title="性能优化建议"></a>性能优化建议</h2><h3 id="1-索引优化"><a href="#1-索引优化" class="headerlink" title="1. 索引优化"></a>1. 索引优化</h3><p>为搜索字段添加数据库索引：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 为标题和内容字段添加全文索引</span></span><br><span class="line"><span class="keyword">ALTER TABLE</span> ongwu_contents <span class="keyword">ADD</span> FULLTEXT(title, text);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 或者添加普通索引</span></span><br><span class="line"><span class="keyword">CREATE</span> INDEX idx_contents_title <span class="keyword">ON</span> ongwu_contents(title);</span><br><span class="line"><span class="keyword">CREATE</span> INDEX idx_contents_text <span class="keyword">ON</span> ongwu_contents(text);</span><br></pre></td></tr></table></figure><h3 id="2-搜索结果缓存"><a href="#2-搜索结果缓存" class="headerlink" title="2. 搜索结果缓存"></a>2. 搜索结果缓存</h3><p>实现搜索结果缓存机制：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 缓存搜索结果</span></span><br><span class="line"><span class="variable">$cacheKey</span> = <span class="string">&#x27;search_&#x27;</span> . <span class="title function_ invoke__">md5</span>(<span class="variable">$filterKeywords</span>);</span><br><span class="line"><span class="variable">$cachedResult</span> = <span class="variable language_">$this</span>-&gt;cache-&gt;<span class="title function_ invoke__">get</span>(<span class="variable">$cacheKey</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="variable">$cachedResult</span> !== <span class="literal">false</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="variable">$cachedResult</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 执行搜索</span></span><br><span class="line"><span class="variable">$result</span> = <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">performSearch</span>(<span class="variable">$filterKeywords</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 缓存结果</span></span><br><span class="line"><span class="variable language_">$this</span>-&gt;cache-&gt;<span class="title function_ invoke__">set</span>(<span class="variable">$cacheKey</span>, <span class="variable">$result</span>, <span class="number">3600</span>); <span class="comment">// 缓存1小时</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="variable">$result</span>;</span><br></pre></td></tr></table></figure><h2 id="兼容性考虑"><a href="#兼容性考虑" class="headerlink" title="兼容性考虑"></a>兼容性考虑</h2><h3 id="1-版本兼容"><a href="#1-版本兼容" class="headerlink" title="1. 版本兼容"></a>1. 版本兼容</h3><p>确保修改后的代码与ongwu版本兼容：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 检查ongwu版本</span></span><br><span class="line"><span class="keyword">if</span> (<span class="title function_ invoke__">version_compare</span>(ongwu_<span class="title class_">Common</span>::<span class="variable constant_">VERSION</span>, <span class="string">&#x27;1.2.0&#x27;</span>, <span class="string">&#x27;&gt;=&#x27;</span>)) &#123;</span><br><span class="line">    <span class="comment">// 新版本代码</span></span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="comment">// 旧版本兼容代码</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2-插件兼容"><a href="#2-插件兼容" class="headerlink" title="2. 插件兼容"></a>2. 插件兼容</h3><p>如果使用了其他搜索相关插件，需要确保兼容性：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 检查是否有其他搜索插件</span></span><br><span class="line"><span class="keyword">if</span> (<span class="title function_ invoke__">class_exists</span>(<span class="string">&#x27;Widget_Archive_Search&#x27;</span>)) &#123;</span><br><span class="line">    <span class="comment">// 使用插件提供的搜索功能</span></span><br><span class="line">    <span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">pluginSearch</span>(<span class="variable">$filterKeywords</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>通过修改ongwu源码，我们可以实现符号搜索功能，但需要注意：</p><ol><li><strong>安全性</strong>：使用<code>addslashes</code>或预处理语句防止SQL注入</li><li><strong>性能</strong>：添加适当的数据库索引和缓存机制</li><li><strong>兼容性</strong>：确保与ongwu版本和其他插件的兼容性</li><li><strong>维护性</strong>：记录修改内容，便于后续升级</li></ol><p>这样修改后，ongwu就能支持包含符号的搜索了，满足更复杂的搜索需求。</p><hr><p><em>注意：修改源码后，在ongwu升级时需要重新应用这些修改。建议将修改内容记录在文档中，或者创建补丁文件。</em></p>]]></content>
      
      
      <categories>
          
          <category> tutorial </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ongwu </tag>
            
            <tag> 搜索功能 </tag>
            
            <tag> 源码修改 </tag>
            
            <tag> 符号搜索 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>让ongwu支持搜索符号</title>
      <link href="/2025/01/09/14/"/>
      <url>/2025/01/09/14/</url>
      
        <content type="html"><![CDATA[<h1 id="让ongwu支持搜索符号"><a href="#让ongwu支持搜索符号" class="headerlink" title="让ongwu支持搜索符号"></a>让ongwu支持搜索符号</h1><h2 id="问题背景"><a href="#问题背景" class="headerlink" title="问题背景"></a>问题背景</h2><p>用过ongwu的应该都清楚它本身搜索是不支持符号的，一般都会过滤掉，只会保留文字字母数字进行搜索。这种过滤应该是出于安全考虑的，但如果你的需求需要搜索符号之类的东西，则可以通过修改源码的方式实现。</p><h2 id="修改原理"><a href="#修改原理" class="headerlink" title="修改原理"></a>修改原理</h2><p>ongwu的搜索功能是在<code>var/Widget/Archive.php</code>中实现的，所以需要修改两处代码：</p><h3 id="第一处：关键词过滤逻辑"><a href="#第一处：关键词过滤逻辑" class="headerlink" title="第一处：关键词过滤逻辑"></a>第一处：关键词过滤逻辑</h3><p>在<code>var/Widget/Archive.php</code>文件中找到以下代码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 原始代码</span></span><br><span class="line"><span class="variable">$filterKeywords</span> = <span class="variable language_">$this</span>-&gt;request-&gt;<span class="title function_ invoke__">get</span>(<span class="string">&#x27;keywords&#x27;</span>);</span><br><span class="line"><span class="variable">$filterKeywords</span> = <span class="title function_ invoke__">trim</span>(<span class="variable">$filterKeywords</span>);</span><br><span class="line"><span class="variable">$filterKeywords</span> = <span class="title function_ invoke__">str_replace</span>(<span class="keyword">array</span>(<span class="string">&#x27;+&#x27;</span>, <span class="string">&#x27;-&#x27;</span>, <span class="string">&#x27;&amp;&#x27;</span>, <span class="string">&#x27;|&#x27;</span>, <span class="string">&#x27;!&#x27;</span>, <span class="string">&#x27;(&#x27;</span>, <span class="string">&#x27;)&#x27;</span>, <span class="string">&#x27;&#123;&#x27;</span>, <span class="string">&#x27;&#125;&#x27;</span>, <span class="string">&#x27;[&#x27;</span>, <span class="string">&#x27;]&#x27;</span>, <span class="string">&#x27;^&#x27;</span>, <span class="string">&#x27;&quot;&#x27;</span>, <span class="string">&#x27;~&#x27;</span>, <span class="string">&#x27;*&#x27;</span>, <span class="string">&#x27;?&#x27;</span>, <span class="string">&#x27;:&#x27;</span>, <span class="string">&#x27;\\&#x27;</span>), <span class="string">&#x27;&#x27;</span>, <span class="variable">$filterKeywords</span>);</span><br></pre></td></tr></table></figure><p>修改为：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 修改后的代码</span></span><br><span class="line"><span class="variable">$filterKeywords</span> = <span class="variable language_">$this</span>-&gt;request-&gt;<span class="title function_ invoke__">get</span>(<span class="string">&#x27;keywords&#x27;</span>);</span><br><span class="line"><span class="variable">$filterKeywords</span> = <span class="title function_ invoke__">trim</span>(<span class="variable">$filterKeywords</span>);</span><br><span class="line"><span class="comment">// 注释掉或删除符号过滤代码</span></span><br><span class="line"><span class="comment">// $filterKeywords = str_replace(array(&#x27;+&#x27;, &#x27;-&#x27;, &#x27;&amp;&#x27;, &#x27;|&#x27;, &#x27;!&#x27;, &#x27;(&#x27;, &#x27;)&#x27;, &#x27;&#123;&#x27;, &#x27;&#125;&#x27;, &#x27;[&#x27;, &#x27;]&#x27;, &#x27;^&#x27;, &#x27;&quot;&#x27;, &#x27;~&#x27;, &#x27;*&#x27;, &#x27;?&#x27;, &#x27;:&#x27;, &#x27;\\&#x27;), &#x27;&#x27;, $filterKeywords);</span></span><br></pre></td></tr></table></figure><h3 id="第二处：SQL查询构建"><a href="#第二处：SQL查询构建" class="headerlink" title="第二处：SQL查询构建"></a>第二处：SQL查询构建</h3><p>找到构建SQL查询的部分：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 原始代码</span></span><br><span class="line"><span class="keyword">if</span> (!<span class="keyword">empty</span>(<span class="variable">$filterKeywords</span>)) &#123;</span><br><span class="line">    <span class="variable">$filterKeywords</span> = <span class="string">&#x27;%&#x27;</span> . <span class="variable">$filterKeywords</span> . <span class="string">&#x27;%&#x27;</span>;</span><br><span class="line">    <span class="variable language_">$this</span>-&gt;db-&gt;<span class="title function_ invoke__">where</span>(<span class="string">&#x27;table.contents.title LIKE ? OR table.contents.text LIKE ?&#x27;</span>, <span class="variable">$filterKeywords</span>, <span class="variable">$filterKeywords</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>修改为：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 修改后的代码</span></span><br><span class="line"><span class="keyword">if</span> (!<span class="keyword">empty</span>(<span class="variable">$filterKeywords</span>)) &#123;</span><br><span class="line">    <span class="comment">// 支持特殊符号的搜索</span></span><br><span class="line">    <span class="variable">$filterKeywords</span> = <span class="string">&#x27;%&#x27;</span> . <span class="title function_ invoke__">addslashes</span>(<span class="variable">$filterKeywords</span>) . <span class="string">&#x27;%&#x27;</span>;</span><br><span class="line">    <span class="variable language_">$this</span>-&gt;db-&gt;<span class="title function_ invoke__">where</span>(<span class="string">&#x27;table.contents.title LIKE ? OR table.contents.text LIKE ?&#x27;</span>, <span class="variable">$filterKeywords</span>, <span class="variable">$filterKeywords</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="完整修改示例"><a href="#完整修改示例" class="headerlink" title="完整修改示例"></a>完整修改示例</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">// var/Widget/Archive.php 修改示例</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Widget_Archive</span> <span class="keyword">extends</span> <span class="title">Widget_Abstract_Contents</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="comment">// ... 其他代码 ...</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 执行搜索</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">search</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;db-&gt;<span class="title function_ invoke__">select</span>(<span class="string">&#x27;table.contents.cid&#x27;</span>, <span class="string">&#x27;table.contents.title&#x27;</span>, <span class="string">&#x27;table.contents.slug&#x27;</span>, <span class="string">&#x27;table.contents.created&#x27;</span>, <span class="string">&#x27;table.contents.authorId&#x27;</span>, <span class="string">&#x27;table.contents.modified&#x27;</span>, <span class="string">&#x27;table.contents.type&#x27;</span>, <span class="string">&#x27;table.contents.status&#x27;</span>, <span class="string">&#x27;table.contents.password&#x27;</span>, <span class="string">&#x27;table.contents.commentsNum&#x27;</span>, <span class="string">&#x27;table.contents.order&#x27;</span>, <span class="string">&#x27;table.contents.template&#x27;</span>, <span class="string">&#x27;table.contents.allowComment&#x27;</span>, <span class="string">&#x27;table.contents.allowPing&#x27;</span>, <span class="string">&#x27;table.contents.allowFeed&#x27;</span>);</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;db-&gt;<span class="keyword">from</span>(<span class="string">&#x27;table.contents&#x27;</span>);</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 获取搜索关键词</span></span><br><span class="line">        <span class="variable">$filterKeywords</span> = <span class="variable language_">$this</span>-&gt;request-&gt;<span class="title function_ invoke__">get</span>(<span class="string">&#x27;keywords&#x27;</span>);</span><br><span class="line">        <span class="variable">$filterKeywords</span> = <span class="title function_ invoke__">trim</span>(<span class="variable">$filterKeywords</span>);</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 注释掉符号过滤，支持符号搜索</span></span><br><span class="line">        <span class="comment">// $filterKeywords = str_replace(array(&#x27;+&#x27;, &#x27;-&#x27;, &#x27;&amp;&#x27;, &#x27;|&#x27;, &#x27;!&#x27;, &#x27;(&#x27;, &#x27;)&#x27;, &#x27;&#123;&#x27;, &#x27;&#125;&#x27;, &#x27;[&#x27;, &#x27;]&#x27;, &#x27;^&#x27;, &#x27;&quot;&#x27;, &#x27;~&#x27;, &#x27;*&#x27;, &#x27;?&#x27;, &#x27;:&#x27;, &#x27;\\&#x27;), &#x27;&#x27;, $filterKeywords);</span></span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> (!<span class="keyword">empty</span>(<span class="variable">$filterKeywords</span>)) &#123;</span><br><span class="line">            <span class="comment">// 使用addslashes防止SQL注入，同时支持符号搜索</span></span><br><span class="line">            <span class="variable">$filterKeywords</span> = <span class="string">&#x27;%&#x27;</span> . <span class="title function_ invoke__">addslashes</span>(<span class="variable">$filterKeywords</span>) . <span class="string">&#x27;%&#x27;</span>;</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;db-&gt;<span class="title function_ invoke__">where</span>(<span class="string">&#x27;table.contents.title LIKE ? OR table.contents.text LIKE ?&#x27;</span>, <span class="variable">$filterKeywords</span>, <span class="variable">$filterKeywords</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// ... 其他搜索逻辑 ...</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="安全注意事项"><a href="#安全注意事项" class="headerlink" title="安全注意事项"></a>安全注意事项</h2><h3 id="1-SQL注入防护"><a href="#1-SQL注入防护" class="headerlink" title="1. SQL注入防护"></a>1. SQL注入防护</h3><p>虽然我们允许符号搜索，但必须确保SQL安全：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 使用addslashes或更好的方法处理输入</span></span><br><span class="line"><span class="variable">$filterKeywords</span> = <span class="title function_ invoke__">addslashes</span>(<span class="variable">$filterKeywords</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 或者使用预处理语句</span></span><br><span class="line"><span class="variable">$stmt</span> = <span class="variable language_">$this</span>-&gt;db-&gt;<span class="title function_ invoke__">prepare</span>(<span class="string">&#x27;SELECT * FROM table.contents WHERE title LIKE ? OR text LIKE ?&#x27;</span>);</span><br><span class="line"><span class="variable">$stmt</span>-&gt;<span class="title function_ invoke__">execute</span>(<span class="keyword">array</span>(<span class="variable">$filterKeywords</span>, <span class="variable">$filterKeywords</span>));</span><br></pre></td></tr></table></figure><h3 id="2-输入验证"><a href="#2-输入验证" class="headerlink" title="2. 输入验证"></a>2. 输入验证</h3><p>添加输入长度和内容验证：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 验证搜索关键词长度</span></span><br><span class="line"><span class="keyword">if</span> (<span class="title function_ invoke__">strlen</span>(<span class="variable">$filterKeywords</span>) &gt; <span class="number">100</span>) &#123;</span><br><span class="line">    <span class="variable">$filterKeywords</span> = <span class="title function_ invoke__">substr</span>(<span class="variable">$filterKeywords</span>, <span class="number">0</span>, <span class="number">100</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 验证是否包含恶意内容</span></span><br><span class="line"><span class="keyword">if</span> (<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/&lt;script|javascript|vbscript|onload|onerror/i&#x27;</span>, <span class="variable">$filterKeywords</span>)) &#123;</span><br><span class="line">    <span class="variable">$filterKeywords</span> = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="测试验证"><a href="#测试验证" class="headerlink" title="测试验证"></a>测试验证</h2><h3 id="1-基本符号测试"><a href="#1-基本符号测试" class="headerlink" title="1. 基本符号测试"></a>1. 基本符号测试</h3><p>测试以下符号是否能正常搜索：</p><ul><li><code>+</code> 加号</li><li><code>-</code> 减号</li><li><code>&amp;</code> 与号</li><li><code>|</code> 或号</li><li><code>!</code> 感叹号</li><li><code>()</code> 括号</li><li><code>[]</code> 方括号</li><li><code>&#123;&#125;</code> 花括号</li></ul><h3 id="2-复杂搜索测试"><a href="#2-复杂搜索测试" class="headerlink" title="2. 复杂搜索测试"></a>2. 复杂搜索测试</h3><p>测试复杂搜索表达式：</p><ul><li><code>PHP + MySQL</code></li><li><code>(前端|后端)开发</code></li><li><code>ongwu &amp; 插件</code></li><li><code>[重要] 更新</code></li></ul><h2 id="性能优化建议"><a href="#性能优化建议" class="headerlink" title="性能优化建议"></a>性能优化建议</h2><h3 id="1-索引优化"><a href="#1-索引优化" class="headerlink" title="1. 索引优化"></a>1. 索引优化</h3><p>为搜索字段添加数据库索引：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 为标题和内容字段添加全文索引</span></span><br><span class="line"><span class="keyword">ALTER TABLE</span> ongwu_contents <span class="keyword">ADD</span> FULLTEXT(title, text);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 或者添加普通索引</span></span><br><span class="line"><span class="keyword">CREATE</span> INDEX idx_contents_title <span class="keyword">ON</span> ongwu_contents(title);</span><br><span class="line"><span class="keyword">CREATE</span> INDEX idx_contents_text <span class="keyword">ON</span> ongwu_contents(text);</span><br></pre></td></tr></table></figure><h3 id="2-搜索结果缓存"><a href="#2-搜索结果缓存" class="headerlink" title="2. 搜索结果缓存"></a>2. 搜索结果缓存</h3><p>实现搜索结果缓存机制：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 缓存搜索结果</span></span><br><span class="line"><span class="variable">$cacheKey</span> = <span class="string">&#x27;search_&#x27;</span> . <span class="title function_ invoke__">md5</span>(<span class="variable">$filterKeywords</span>);</span><br><span class="line"><span class="variable">$cachedResult</span> = <span class="variable language_">$this</span>-&gt;cache-&gt;<span class="title function_ invoke__">get</span>(<span class="variable">$cacheKey</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="variable">$cachedResult</span> !== <span class="literal">false</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="variable">$cachedResult</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 执行搜索</span></span><br><span class="line"><span class="variable">$result</span> = <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">performSearch</span>(<span class="variable">$filterKeywords</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 缓存结果</span></span><br><span class="line"><span class="variable language_">$this</span>-&gt;cache-&gt;<span class="title function_ invoke__">set</span>(<span class="variable">$cacheKey</span>, <span class="variable">$result</span>, <span class="number">3600</span>); <span class="comment">// 缓存1小时</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="variable">$result</span>;</span><br></pre></td></tr></table></figure><h2 id="兼容性考虑"><a href="#兼容性考虑" class="headerlink" title="兼容性考虑"></a>兼容性考虑</h2><h3 id="1-版本兼容"><a href="#1-版本兼容" class="headerlink" title="1. 版本兼容"></a>1. 版本兼容</h3><p>确保修改后的代码与ongwu版本兼容：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 检查ongwu版本</span></span><br><span class="line"><span class="keyword">if</span> (<span class="title function_ invoke__">version_compare</span>(ongwu_<span class="title class_">Common</span>::<span class="variable constant_">VERSION</span>, <span class="string">&#x27;1.2.0&#x27;</span>, <span class="string">&#x27;&gt;=&#x27;</span>)) &#123;</span><br><span class="line">    <span class="comment">// 新版本代码</span></span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="comment">// 旧版本兼容代码</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2-插件兼容"><a href="#2-插件兼容" class="headerlink" title="2. 插件兼容"></a>2. 插件兼容</h3><p>如果使用了其他搜索相关插件，需要确保兼容性：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 检查是否有其他搜索插件</span></span><br><span class="line"><span class="keyword">if</span> (<span class="title function_ invoke__">class_exists</span>(<span class="string">&#x27;Widget_Archive_Search&#x27;</span>)) &#123;</span><br><span class="line">    <span class="comment">// 使用插件提供的搜索功能</span></span><br><span class="line">    <span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">pluginSearch</span>(<span class="variable">$filterKeywords</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>通过修改ongwu源码，我们可以实现符号搜索功能，但需要注意：</p><ol><li><strong>安全性</strong>：使用<code>addslashes</code>或预处理语句防止SQL注入</li><li><strong>性能</strong>：添加适当的数据库索引和缓存机制</li><li><strong>兼容性</strong>：确保与ongwu版本和其他插件的兼容性</li><li><strong>维护性</strong>：记录修改内容，便于后续升级</li></ol><p>这样修改后，ongwu就能支持包含符号的搜索了，满足更复杂的搜索需求。</p><hr><p><em>注意：修改源码后，在ongwu升级时需要重新应用这些修改。建议将修改内容记录在文档中，或者创建补丁文件。</em></p>]]></content>
      
      
      <categories>
          
          <category> tutorial </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ongwu </tag>
            
            <tag> 搜索功能 </tag>
            
            <tag> 源码修改 </tag>
            
            <tag> 符号搜索 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>让ongwu支持搜索符号</title>
      <link href="/2025/01/09/16/"/>
      <url>/2025/01/09/16/</url>
      
        <content type="html"><![CDATA[<h1 id="让ongwu支持搜索符号"><a href="#让ongwu支持搜索符号" class="headerlink" title="让ongwu支持搜索符号"></a>让ongwu支持搜索符号</h1><h2 id="问题背景"><a href="#问题背景" class="headerlink" title="问题背景"></a>问题背景</h2><p>用过ongwu的应该都清楚它本身搜索是不支持符号的，一般都会过滤掉，只会保留文字字母数字进行搜索。这种过滤应该是出于安全考虑的，但如果你的需求需要搜索符号之类的东西，则可以通过修改源码的方式实现。</p><h2 id="修改原理"><a href="#修改原理" class="headerlink" title="修改原理"></a>修改原理</h2><p>ongwu的搜索功能是在<code>var/Widget/Archive.php</code>中实现的，所以需要修改两处代码：</p><h3 id="第一处：关键词过滤逻辑"><a href="#第一处：关键词过滤逻辑" class="headerlink" title="第一处：关键词过滤逻辑"></a>第一处：关键词过滤逻辑</h3><p>在<code>var/Widget/Archive.php</code>文件中找到以下代码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 原始代码</span></span><br><span class="line"><span class="variable">$filterKeywords</span> = <span class="variable language_">$this</span>-&gt;request-&gt;<span class="title function_ invoke__">get</span>(<span class="string">&#x27;keywords&#x27;</span>);</span><br><span class="line"><span class="variable">$filterKeywords</span> = <span class="title function_ invoke__">trim</span>(<span class="variable">$filterKeywords</span>);</span><br><span class="line"><span class="variable">$filterKeywords</span> = <span class="title function_ invoke__">str_replace</span>(<span class="keyword">array</span>(<span class="string">&#x27;+&#x27;</span>, <span class="string">&#x27;-&#x27;</span>, <span class="string">&#x27;&amp;&#x27;</span>, <span class="string">&#x27;|&#x27;</span>, <span class="string">&#x27;!&#x27;</span>, <span class="string">&#x27;(&#x27;</span>, <span class="string">&#x27;)&#x27;</span>, <span class="string">&#x27;&#123;&#x27;</span>, <span class="string">&#x27;&#125;&#x27;</span>, <span class="string">&#x27;[&#x27;</span>, <span class="string">&#x27;]&#x27;</span>, <span class="string">&#x27;^&#x27;</span>, <span class="string">&#x27;&quot;&#x27;</span>, <span class="string">&#x27;~&#x27;</span>, <span class="string">&#x27;*&#x27;</span>, <span class="string">&#x27;?&#x27;</span>, <span class="string">&#x27;:&#x27;</span>, <span class="string">&#x27;\\&#x27;</span>), <span class="string">&#x27;&#x27;</span>, <span class="variable">$filterKeywords</span>);</span><br></pre></td></tr></table></figure><p>修改为：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 修改后的代码</span></span><br><span class="line"><span class="variable">$filterKeywords</span> = <span class="variable language_">$this</span>-&gt;request-&gt;<span class="title function_ invoke__">get</span>(<span class="string">&#x27;keywords&#x27;</span>);</span><br><span class="line"><span class="variable">$filterKeywords</span> = <span class="title function_ invoke__">trim</span>(<span class="variable">$filterKeywords</span>);</span><br><span class="line"><span class="comment">// 注释掉或删除符号过滤代码</span></span><br><span class="line"><span class="comment">// $filterKeywords = str_replace(array(&#x27;+&#x27;, &#x27;-&#x27;, &#x27;&amp;&#x27;, &#x27;|&#x27;, &#x27;!&#x27;, &#x27;(&#x27;, &#x27;)&#x27;, &#x27;&#123;&#x27;, &#x27;&#125;&#x27;, &#x27;[&#x27;, &#x27;]&#x27;, &#x27;^&#x27;, &#x27;&quot;&#x27;, &#x27;~&#x27;, &#x27;*&#x27;, &#x27;?&#x27;, &#x27;:&#x27;, &#x27;\\&#x27;), &#x27;&#x27;, $filterKeywords);</span></span><br></pre></td></tr></table></figure><h3 id="第二处：SQL查询构建"><a href="#第二处：SQL查询构建" class="headerlink" title="第二处：SQL查询构建"></a>第二处：SQL查询构建</h3><p>找到构建SQL查询的部分：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 原始代码</span></span><br><span class="line"><span class="keyword">if</span> (!<span class="keyword">empty</span>(<span class="variable">$filterKeywords</span>)) &#123;</span><br><span class="line">    <span class="variable">$filterKeywords</span> = <span class="string">&#x27;%&#x27;</span> . <span class="variable">$filterKeywords</span> . <span class="string">&#x27;%&#x27;</span>;</span><br><span class="line">    <span class="variable language_">$this</span>-&gt;db-&gt;<span class="title function_ invoke__">where</span>(<span class="string">&#x27;table.contents.title LIKE ? OR table.contents.text LIKE ?&#x27;</span>, <span class="variable">$filterKeywords</span>, <span class="variable">$filterKeywords</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>修改为：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 修改后的代码</span></span><br><span class="line"><span class="keyword">if</span> (!<span class="keyword">empty</span>(<span class="variable">$filterKeywords</span>)) &#123;</span><br><span class="line">    <span class="comment">// 支持特殊符号的搜索</span></span><br><span class="line">    <span class="variable">$filterKeywords</span> = <span class="string">&#x27;%&#x27;</span> . <span class="title function_ invoke__">addslashes</span>(<span class="variable">$filterKeywords</span>) . <span class="string">&#x27;%&#x27;</span>;</span><br><span class="line">    <span class="variable language_">$this</span>-&gt;db-&gt;<span class="title function_ invoke__">where</span>(<span class="string">&#x27;table.contents.title LIKE ? OR table.contents.text LIKE ?&#x27;</span>, <span class="variable">$filterKeywords</span>, <span class="variable">$filterKeywords</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="完整修改示例"><a href="#完整修改示例" class="headerlink" title="完整修改示例"></a>完整修改示例</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">// var/Widget/Archive.php 修改示例</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Widget_Archive</span> <span class="keyword">extends</span> <span class="title">Widget_Abstract_Contents</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="comment">// ... 其他代码 ...</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 执行搜索</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">search</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;db-&gt;<span class="title function_ invoke__">select</span>(<span class="string">&#x27;table.contents.cid&#x27;</span>, <span class="string">&#x27;table.contents.title&#x27;</span>, <span class="string">&#x27;table.contents.slug&#x27;</span>, <span class="string">&#x27;table.contents.created&#x27;</span>, <span class="string">&#x27;table.contents.authorId&#x27;</span>, <span class="string">&#x27;table.contents.modified&#x27;</span>, <span class="string">&#x27;table.contents.type&#x27;</span>, <span class="string">&#x27;table.contents.status&#x27;</span>, <span class="string">&#x27;table.contents.password&#x27;</span>, <span class="string">&#x27;table.contents.commentsNum&#x27;</span>, <span class="string">&#x27;table.contents.order&#x27;</span>, <span class="string">&#x27;table.contents.template&#x27;</span>, <span class="string">&#x27;table.contents.allowComment&#x27;</span>, <span class="string">&#x27;table.contents.allowPing&#x27;</span>, <span class="string">&#x27;table.contents.allowFeed&#x27;</span>);</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;db-&gt;<span class="keyword">from</span>(<span class="string">&#x27;table.contents&#x27;</span>);</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 获取搜索关键词</span></span><br><span class="line">        <span class="variable">$filterKeywords</span> = <span class="variable language_">$this</span>-&gt;request-&gt;<span class="title function_ invoke__">get</span>(<span class="string">&#x27;keywords&#x27;</span>);</span><br><span class="line">        <span class="variable">$filterKeywords</span> = <span class="title function_ invoke__">trim</span>(<span class="variable">$filterKeywords</span>);</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 注释掉符号过滤，支持符号搜索</span></span><br><span class="line">        <span class="comment">// $filterKeywords = str_replace(array(&#x27;+&#x27;, &#x27;-&#x27;, &#x27;&amp;&#x27;, &#x27;|&#x27;, &#x27;!&#x27;, &#x27;(&#x27;, &#x27;)&#x27;, &#x27;&#123;&#x27;, &#x27;&#125;&#x27;, &#x27;[&#x27;, &#x27;]&#x27;, &#x27;^&#x27;, &#x27;&quot;&#x27;, &#x27;~&#x27;, &#x27;*&#x27;, &#x27;?&#x27;, &#x27;:&#x27;, &#x27;\\&#x27;), &#x27;&#x27;, $filterKeywords);</span></span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> (!<span class="keyword">empty</span>(<span class="variable">$filterKeywords</span>)) &#123;</span><br><span class="line">            <span class="comment">// 使用addslashes防止SQL注入，同时支持符号搜索</span></span><br><span class="line">            <span class="variable">$filterKeywords</span> = <span class="string">&#x27;%&#x27;</span> . <span class="title function_ invoke__">addslashes</span>(<span class="variable">$filterKeywords</span>) . <span class="string">&#x27;%&#x27;</span>;</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;db-&gt;<span class="title function_ invoke__">where</span>(<span class="string">&#x27;table.contents.title LIKE ? OR table.contents.text LIKE ?&#x27;</span>, <span class="variable">$filterKeywords</span>, <span class="variable">$filterKeywords</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// ... 其他搜索逻辑 ...</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="安全注意事项"><a href="#安全注意事项" class="headerlink" title="安全注意事项"></a>安全注意事项</h2><h3 id="1-SQL注入防护"><a href="#1-SQL注入防护" class="headerlink" title="1. SQL注入防护"></a>1. SQL注入防护</h3><p>虽然我们允许符号搜索，但必须确保SQL安全：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 使用addslashes或更好的方法处理输入</span></span><br><span class="line"><span class="variable">$filterKeywords</span> = <span class="title function_ invoke__">addslashes</span>(<span class="variable">$filterKeywords</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 或者使用预处理语句</span></span><br><span class="line"><span class="variable">$stmt</span> = <span class="variable language_">$this</span>-&gt;db-&gt;<span class="title function_ invoke__">prepare</span>(<span class="string">&#x27;SELECT * FROM table.contents WHERE title LIKE ? OR text LIKE ?&#x27;</span>);</span><br><span class="line"><span class="variable">$stmt</span>-&gt;<span class="title function_ invoke__">execute</span>(<span class="keyword">array</span>(<span class="variable">$filterKeywords</span>, <span class="variable">$filterKeywords</span>));</span><br></pre></td></tr></table></figure><h3 id="2-输入验证"><a href="#2-输入验证" class="headerlink" title="2. 输入验证"></a>2. 输入验证</h3><p>添加输入长度和内容验证：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 验证搜索关键词长度</span></span><br><span class="line"><span class="keyword">if</span> (<span class="title function_ invoke__">strlen</span>(<span class="variable">$filterKeywords</span>) &gt; <span class="number">100</span>) &#123;</span><br><span class="line">    <span class="variable">$filterKeywords</span> = <span class="title function_ invoke__">substr</span>(<span class="variable">$filterKeywords</span>, <span class="number">0</span>, <span class="number">100</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 验证是否包含恶意内容</span></span><br><span class="line"><span class="keyword">if</span> (<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/&lt;script|javascript|vbscript|onload|onerror/i&#x27;</span>, <span class="variable">$filterKeywords</span>)) &#123;</span><br><span class="line">    <span class="variable">$filterKeywords</span> = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="测试验证"><a href="#测试验证" class="headerlink" title="测试验证"></a>测试验证</h2><h3 id="1-基本符号测试"><a href="#1-基本符号测试" class="headerlink" title="1. 基本符号测试"></a>1. 基本符号测试</h3><p>测试以下符号是否能正常搜索：</p><ul><li><code>+</code> 加号</li><li><code>-</code> 减号</li><li><code>&amp;</code> 与号</li><li><code>|</code> 或号</li><li><code>!</code> 感叹号</li><li><code>()</code> 括号</li><li><code>[]</code> 方括号</li><li><code>&#123;&#125;</code> 花括号</li></ul><h3 id="2-复杂搜索测试"><a href="#2-复杂搜索测试" class="headerlink" title="2. 复杂搜索测试"></a>2. 复杂搜索测试</h3><p>测试复杂搜索表达式：</p><ul><li><code>PHP + MySQL</code></li><li><code>(前端|后端)开发</code></li><li><code>ongwu &amp; 插件</code></li><li><code>[重要] 更新</code></li></ul><h2 id="性能优化建议"><a href="#性能优化建议" class="headerlink" title="性能优化建议"></a>性能优化建议</h2><h3 id="1-索引优化"><a href="#1-索引优化" class="headerlink" title="1. 索引优化"></a>1. 索引优化</h3><p>为搜索字段添加数据库索引：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 为标题和内容字段添加全文索引</span></span><br><span class="line"><span class="keyword">ALTER TABLE</span> ongwu_contents <span class="keyword">ADD</span> FULLTEXT(title, text);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 或者添加普通索引</span></span><br><span class="line"><span class="keyword">CREATE</span> INDEX idx_contents_title <span class="keyword">ON</span> ongwu_contents(title);</span><br><span class="line"><span class="keyword">CREATE</span> INDEX idx_contents_text <span class="keyword">ON</span> ongwu_contents(text);</span><br></pre></td></tr></table></figure><h3 id="2-搜索结果缓存"><a href="#2-搜索结果缓存" class="headerlink" title="2. 搜索结果缓存"></a>2. 搜索结果缓存</h3><p>实现搜索结果缓存机制：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 缓存搜索结果</span></span><br><span class="line"><span class="variable">$cacheKey</span> = <span class="string">&#x27;search_&#x27;</span> . <span class="title function_ invoke__">md5</span>(<span class="variable">$filterKeywords</span>);</span><br><span class="line"><span class="variable">$cachedResult</span> = <span class="variable language_">$this</span>-&gt;cache-&gt;<span class="title function_ invoke__">get</span>(<span class="variable">$cacheKey</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="variable">$cachedResult</span> !== <span class="literal">false</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="variable">$cachedResult</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 执行搜索</span></span><br><span class="line"><span class="variable">$result</span> = <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">performSearch</span>(<span class="variable">$filterKeywords</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 缓存结果</span></span><br><span class="line"><span class="variable language_">$this</span>-&gt;cache-&gt;<span class="title function_ invoke__">set</span>(<span class="variable">$cacheKey</span>, <span class="variable">$result</span>, <span class="number">3600</span>); <span class="comment">// 缓存1小时</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="variable">$result</span>;</span><br></pre></td></tr></table></figure><h2 id="兼容性考虑"><a href="#兼容性考虑" class="headerlink" title="兼容性考虑"></a>兼容性考虑</h2><h3 id="1-版本兼容"><a href="#1-版本兼容" class="headerlink" title="1. 版本兼容"></a>1. 版本兼容</h3><p>确保修改后的代码与ongwu版本兼容：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 检查ongwu版本</span></span><br><span class="line"><span class="keyword">if</span> (<span class="title function_ invoke__">version_compare</span>(ongwu_<span class="title class_">Common</span>::<span class="variable constant_">VERSION</span>, <span class="string">&#x27;1.2.0&#x27;</span>, <span class="string">&#x27;&gt;=&#x27;</span>)) &#123;</span><br><span class="line">    <span class="comment">// 新版本代码</span></span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="comment">// 旧版本兼容代码</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2-插件兼容"><a href="#2-插件兼容" class="headerlink" title="2. 插件兼容"></a>2. 插件兼容</h3><p>如果使用了其他搜索相关插件，需要确保兼容性：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 检查是否有其他搜索插件</span></span><br><span class="line"><span class="keyword">if</span> (<span class="title function_ invoke__">class_exists</span>(<span class="string">&#x27;Widget_Archive_Search&#x27;</span>)) &#123;</span><br><span class="line">    <span class="comment">// 使用插件提供的搜索功能</span></span><br><span class="line">    <span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">pluginSearch</span>(<span class="variable">$filterKeywords</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>通过修改ongwu源码，我们可以实现符号搜索功能，但需要注意：</p><ol><li><strong>安全性</strong>：使用<code>addslashes</code>或预处理语句防止SQL注入</li><li><strong>性能</strong>：添加适当的数据库索引和缓存机制</li><li><strong>兼容性</strong>：确保与ongwu版本和其他插件的兼容性</li><li><strong>维护性</strong>：记录修改内容，便于后续升级</li></ol><p>这样修改后，ongwu就能支持包含符号的搜索了，满足更复杂的搜索需求。</p><hr><p><em>注意：修改源码后，在ongwu升级时需要重新应用这些修改。建议将修改内容记录在文档中，或者创建补丁文件。</em></p>]]></content>
      
      
      <categories>
          
          <category> tutorial </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ongwu </tag>
            
            <tag> 搜索功能 </tag>
            
            <tag> 源码修改 </tag>
            
            <tag> 符号搜索 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>让ongwu支持搜索符号</title>
      <link href="/2025/01/09/15/"/>
      <url>/2025/01/09/15/</url>
      
        <content type="html"><![CDATA[<h1 id="让ongwu支持搜索符号"><a href="#让ongwu支持搜索符号" class="headerlink" title="让ongwu支持搜索符号"></a>让ongwu支持搜索符号</h1><h2 id="问题背景"><a href="#问题背景" class="headerlink" title="问题背景"></a>问题背景</h2><p>用过ongwu的应该都清楚它本身搜索是不支持符号的，一般都会过滤掉，只会保留文字字母数字进行搜索。这种过滤应该是出于安全考虑的，但如果你的需求需要搜索符号之类的东西，则可以通过修改源码的方式实现。</p><h2 id="修改原理"><a href="#修改原理" class="headerlink" title="修改原理"></a>修改原理</h2><p>ongwu的搜索功能是在<code>var/Widget/Archive.php</code>中实现的，所以需要修改两处代码：</p><h3 id="第一处：关键词过滤逻辑"><a href="#第一处：关键词过滤逻辑" class="headerlink" title="第一处：关键词过滤逻辑"></a>第一处：关键词过滤逻辑</h3><p>在<code>var/Widget/Archive.php</code>文件中找到以下代码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 原始代码</span></span><br><span class="line"><span class="variable">$filterKeywords</span> = <span class="variable language_">$this</span>-&gt;request-&gt;<span class="title function_ invoke__">get</span>(<span class="string">&#x27;keywords&#x27;</span>);</span><br><span class="line"><span class="variable">$filterKeywords</span> = <span class="title function_ invoke__">trim</span>(<span class="variable">$filterKeywords</span>);</span><br><span class="line"><span class="variable">$filterKeywords</span> = <span class="title function_ invoke__">str_replace</span>(<span class="keyword">array</span>(<span class="string">&#x27;+&#x27;</span>, <span class="string">&#x27;-&#x27;</span>, <span class="string">&#x27;&amp;&#x27;</span>, <span class="string">&#x27;|&#x27;</span>, <span class="string">&#x27;!&#x27;</span>, <span class="string">&#x27;(&#x27;</span>, <span class="string">&#x27;)&#x27;</span>, <span class="string">&#x27;&#123;&#x27;</span>, <span class="string">&#x27;&#125;&#x27;</span>, <span class="string">&#x27;[&#x27;</span>, <span class="string">&#x27;]&#x27;</span>, <span class="string">&#x27;^&#x27;</span>, <span class="string">&#x27;&quot;&#x27;</span>, <span class="string">&#x27;~&#x27;</span>, <span class="string">&#x27;*&#x27;</span>, <span class="string">&#x27;?&#x27;</span>, <span class="string">&#x27;:&#x27;</span>, <span class="string">&#x27;\\&#x27;</span>), <span class="string">&#x27;&#x27;</span>, <span class="variable">$filterKeywords</span>);</span><br></pre></td></tr></table></figure><p>修改为：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 修改后的代码</span></span><br><span class="line"><span class="variable">$filterKeywords</span> = <span class="variable language_">$this</span>-&gt;request-&gt;<span class="title function_ invoke__">get</span>(<span class="string">&#x27;keywords&#x27;</span>);</span><br><span class="line"><span class="variable">$filterKeywords</span> = <span class="title function_ invoke__">trim</span>(<span class="variable">$filterKeywords</span>);</span><br><span class="line"><span class="comment">// 注释掉或删除符号过滤代码</span></span><br><span class="line"><span class="comment">// $filterKeywords = str_replace(array(&#x27;+&#x27;, &#x27;-&#x27;, &#x27;&amp;&#x27;, &#x27;|&#x27;, &#x27;!&#x27;, &#x27;(&#x27;, &#x27;)&#x27;, &#x27;&#123;&#x27;, &#x27;&#125;&#x27;, &#x27;[&#x27;, &#x27;]&#x27;, &#x27;^&#x27;, &#x27;&quot;&#x27;, &#x27;~&#x27;, &#x27;*&#x27;, &#x27;?&#x27;, &#x27;:&#x27;, &#x27;\\&#x27;), &#x27;&#x27;, $filterKeywords);</span></span><br></pre></td></tr></table></figure><h3 id="第二处：SQL查询构建"><a href="#第二处：SQL查询构建" class="headerlink" title="第二处：SQL查询构建"></a>第二处：SQL查询构建</h3><p>找到构建SQL查询的部分：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 原始代码</span></span><br><span class="line"><span class="keyword">if</span> (!<span class="keyword">empty</span>(<span class="variable">$filterKeywords</span>)) &#123;</span><br><span class="line">    <span class="variable">$filterKeywords</span> = <span class="string">&#x27;%&#x27;</span> . <span class="variable">$filterKeywords</span> . <span class="string">&#x27;%&#x27;</span>;</span><br><span class="line">    <span class="variable language_">$this</span>-&gt;db-&gt;<span class="title function_ invoke__">where</span>(<span class="string">&#x27;table.contents.title LIKE ? OR table.contents.text LIKE ?&#x27;</span>, <span class="variable">$filterKeywords</span>, <span class="variable">$filterKeywords</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>修改为：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 修改后的代码</span></span><br><span class="line"><span class="keyword">if</span> (!<span class="keyword">empty</span>(<span class="variable">$filterKeywords</span>)) &#123;</span><br><span class="line">    <span class="comment">// 支持特殊符号的搜索</span></span><br><span class="line">    <span class="variable">$filterKeywords</span> = <span class="string">&#x27;%&#x27;</span> . <span class="title function_ invoke__">addslashes</span>(<span class="variable">$filterKeywords</span>) . <span class="string">&#x27;%&#x27;</span>;</span><br><span class="line">    <span class="variable language_">$this</span>-&gt;db-&gt;<span class="title function_ invoke__">where</span>(<span class="string">&#x27;table.contents.title LIKE ? OR table.contents.text LIKE ?&#x27;</span>, <span class="variable">$filterKeywords</span>, <span class="variable">$filterKeywords</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="完整修改示例"><a href="#完整修改示例" class="headerlink" title="完整修改示例"></a>完整修改示例</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">// var/Widget/Archive.php 修改示例</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Widget_Archive</span> <span class="keyword">extends</span> <span class="title">Widget_Abstract_Contents</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="comment">// ... 其他代码 ...</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 执行搜索</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">search</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;db-&gt;<span class="title function_ invoke__">select</span>(<span class="string">&#x27;table.contents.cid&#x27;</span>, <span class="string">&#x27;table.contents.title&#x27;</span>, <span class="string">&#x27;table.contents.slug&#x27;</span>, <span class="string">&#x27;table.contents.created&#x27;</span>, <span class="string">&#x27;table.contents.authorId&#x27;</span>, <span class="string">&#x27;table.contents.modified&#x27;</span>, <span class="string">&#x27;table.contents.type&#x27;</span>, <span class="string">&#x27;table.contents.status&#x27;</span>, <span class="string">&#x27;table.contents.password&#x27;</span>, <span class="string">&#x27;table.contents.commentsNum&#x27;</span>, <span class="string">&#x27;table.contents.order&#x27;</span>, <span class="string">&#x27;table.contents.template&#x27;</span>, <span class="string">&#x27;table.contents.allowComment&#x27;</span>, <span class="string">&#x27;table.contents.allowPing&#x27;</span>, <span class="string">&#x27;table.contents.allowFeed&#x27;</span>);</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;db-&gt;<span class="keyword">from</span>(<span class="string">&#x27;table.contents&#x27;</span>);</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 获取搜索关键词</span></span><br><span class="line">        <span class="variable">$filterKeywords</span> = <span class="variable language_">$this</span>-&gt;request-&gt;<span class="title function_ invoke__">get</span>(<span class="string">&#x27;keywords&#x27;</span>);</span><br><span class="line">        <span class="variable">$filterKeywords</span> = <span class="title function_ invoke__">trim</span>(<span class="variable">$filterKeywords</span>);</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 注释掉符号过滤，支持符号搜索</span></span><br><span class="line">        <span class="comment">// $filterKeywords = str_replace(array(&#x27;+&#x27;, &#x27;-&#x27;, &#x27;&amp;&#x27;, &#x27;|&#x27;, &#x27;!&#x27;, &#x27;(&#x27;, &#x27;)&#x27;, &#x27;&#123;&#x27;, &#x27;&#125;&#x27;, &#x27;[&#x27;, &#x27;]&#x27;, &#x27;^&#x27;, &#x27;&quot;&#x27;, &#x27;~&#x27;, &#x27;*&#x27;, &#x27;?&#x27;, &#x27;:&#x27;, &#x27;\\&#x27;), &#x27;&#x27;, $filterKeywords);</span></span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> (!<span class="keyword">empty</span>(<span class="variable">$filterKeywords</span>)) &#123;</span><br><span class="line">            <span class="comment">// 使用addslashes防止SQL注入，同时支持符号搜索</span></span><br><span class="line">            <span class="variable">$filterKeywords</span> = <span class="string">&#x27;%&#x27;</span> . <span class="title function_ invoke__">addslashes</span>(<span class="variable">$filterKeywords</span>) . <span class="string">&#x27;%&#x27;</span>;</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;db-&gt;<span class="title function_ invoke__">where</span>(<span class="string">&#x27;table.contents.title LIKE ? OR table.contents.text LIKE ?&#x27;</span>, <span class="variable">$filterKeywords</span>, <span class="variable">$filterKeywords</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// ... 其他搜索逻辑 ...</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="安全注意事项"><a href="#安全注意事项" class="headerlink" title="安全注意事项"></a>安全注意事项</h2><h3 id="1-SQL注入防护"><a href="#1-SQL注入防护" class="headerlink" title="1. SQL注入防护"></a>1. SQL注入防护</h3><p>虽然我们允许符号搜索，但必须确保SQL安全：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 使用addslashes或更好的方法处理输入</span></span><br><span class="line"><span class="variable">$filterKeywords</span> = <span class="title function_ invoke__">addslashes</span>(<span class="variable">$filterKeywords</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 或者使用预处理语句</span></span><br><span class="line"><span class="variable">$stmt</span> = <span class="variable language_">$this</span>-&gt;db-&gt;<span class="title function_ invoke__">prepare</span>(<span class="string">&#x27;SELECT * FROM table.contents WHERE title LIKE ? OR text LIKE ?&#x27;</span>);</span><br><span class="line"><span class="variable">$stmt</span>-&gt;<span class="title function_ invoke__">execute</span>(<span class="keyword">array</span>(<span class="variable">$filterKeywords</span>, <span class="variable">$filterKeywords</span>));</span><br></pre></td></tr></table></figure><h3 id="2-输入验证"><a href="#2-输入验证" class="headerlink" title="2. 输入验证"></a>2. 输入验证</h3><p>添加输入长度和内容验证：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 验证搜索关键词长度</span></span><br><span class="line"><span class="keyword">if</span> (<span class="title function_ invoke__">strlen</span>(<span class="variable">$filterKeywords</span>) &gt; <span class="number">100</span>) &#123;</span><br><span class="line">    <span class="variable">$filterKeywords</span> = <span class="title function_ invoke__">substr</span>(<span class="variable">$filterKeywords</span>, <span class="number">0</span>, <span class="number">100</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 验证是否包含恶意内容</span></span><br><span class="line"><span class="keyword">if</span> (<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/&lt;script|javascript|vbscript|onload|onerror/i&#x27;</span>, <span class="variable">$filterKeywords</span>)) &#123;</span><br><span class="line">    <span class="variable">$filterKeywords</span> = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="测试验证"><a href="#测试验证" class="headerlink" title="测试验证"></a>测试验证</h2><h3 id="1-基本符号测试"><a href="#1-基本符号测试" class="headerlink" title="1. 基本符号测试"></a>1. 基本符号测试</h3><p>测试以下符号是否能正常搜索：</p><ul><li><code>+</code> 加号</li><li><code>-</code> 减号</li><li><code>&amp;</code> 与号</li><li><code>|</code> 或号</li><li><code>!</code> 感叹号</li><li><code>()</code> 括号</li><li><code>[]</code> 方括号</li><li><code>&#123;&#125;</code> 花括号</li></ul><h3 id="2-复杂搜索测试"><a href="#2-复杂搜索测试" class="headerlink" title="2. 复杂搜索测试"></a>2. 复杂搜索测试</h3><p>测试复杂搜索表达式：</p><ul><li><code>PHP + MySQL</code></li><li><code>(前端|后端)开发</code></li><li><code>ongwu &amp; 插件</code></li><li><code>[重要] 更新</code></li></ul><h2 id="性能优化建议"><a href="#性能优化建议" class="headerlink" title="性能优化建议"></a>性能优化建议</h2><h3 id="1-索引优化"><a href="#1-索引优化" class="headerlink" title="1. 索引优化"></a>1. 索引优化</h3><p>为搜索字段添加数据库索引：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 为标题和内容字段添加全文索引</span></span><br><span class="line"><span class="keyword">ALTER TABLE</span> ongwu_contents <span class="keyword">ADD</span> FULLTEXT(title, text);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 或者添加普通索引</span></span><br><span class="line"><span class="keyword">CREATE</span> INDEX idx_contents_title <span class="keyword">ON</span> ongwu_contents(title);</span><br><span class="line"><span class="keyword">CREATE</span> INDEX idx_contents_text <span class="keyword">ON</span> ongwu_contents(text);</span><br></pre></td></tr></table></figure><h3 id="2-搜索结果缓存"><a href="#2-搜索结果缓存" class="headerlink" title="2. 搜索结果缓存"></a>2. 搜索结果缓存</h3><p>实现搜索结果缓存机制：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 缓存搜索结果</span></span><br><span class="line"><span class="variable">$cacheKey</span> = <span class="string">&#x27;search_&#x27;</span> . <span class="title function_ invoke__">md5</span>(<span class="variable">$filterKeywords</span>);</span><br><span class="line"><span class="variable">$cachedResult</span> = <span class="variable language_">$this</span>-&gt;cache-&gt;<span class="title function_ invoke__">get</span>(<span class="variable">$cacheKey</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="variable">$cachedResult</span> !== <span class="literal">false</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="variable">$cachedResult</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 执行搜索</span></span><br><span class="line"><span class="variable">$result</span> = <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">performSearch</span>(<span class="variable">$filterKeywords</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 缓存结果</span></span><br><span class="line"><span class="variable language_">$this</span>-&gt;cache-&gt;<span class="title function_ invoke__">set</span>(<span class="variable">$cacheKey</span>, <span class="variable">$result</span>, <span class="number">3600</span>); <span class="comment">// 缓存1小时</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="variable">$result</span>;</span><br></pre></td></tr></table></figure><h2 id="兼容性考虑"><a href="#兼容性考虑" class="headerlink" title="兼容性考虑"></a>兼容性考虑</h2><h3 id="1-版本兼容"><a href="#1-版本兼容" class="headerlink" title="1. 版本兼容"></a>1. 版本兼容</h3><p>确保修改后的代码与ongwu版本兼容：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 检查ongwu版本</span></span><br><span class="line"><span class="keyword">if</span> (<span class="title function_ invoke__">version_compare</span>(ongwu_<span class="title class_">Common</span>::<span class="variable constant_">VERSION</span>, <span class="string">&#x27;1.2.0&#x27;</span>, <span class="string">&#x27;&gt;=&#x27;</span>)) &#123;</span><br><span class="line">    <span class="comment">// 新版本代码</span></span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="comment">// 旧版本兼容代码</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2-插件兼容"><a href="#2-插件兼容" class="headerlink" title="2. 插件兼容"></a>2. 插件兼容</h3><p>如果使用了其他搜索相关插件，需要确保兼容性：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 检查是否有其他搜索插件</span></span><br><span class="line"><span class="keyword">if</span> (<span class="title function_ invoke__">class_exists</span>(<span class="string">&#x27;Widget_Archive_Search&#x27;</span>)) &#123;</span><br><span class="line">    <span class="comment">// 使用插件提供的搜索功能</span></span><br><span class="line">    <span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">pluginSearch</span>(<span class="variable">$filterKeywords</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>通过修改ongwu源码，我们可以实现符号搜索功能，但需要注意：</p><ol><li><strong>安全性</strong>：使用<code>addslashes</code>或预处理语句防止SQL注入</li><li><strong>性能</strong>：添加适当的数据库索引和缓存机制</li><li><strong>兼容性</strong>：确保与ongwu版本和其他插件的兼容性</li><li><strong>维护性</strong>：记录修改内容，便于后续升级</li></ol><p>这样修改后，ongwu就能支持包含符号的搜索了，满足更复杂的搜索需求。</p><hr><p><em>注意：修改源码后，在ongwu升级时需要重新应用这些修改。建议将修改内容记录在文档中，或者创建补丁文件。</em></p>]]></content>
      
      
      <categories>
          
          <category> tutorial </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ongwu </tag>
            
            <tag> 搜索功能 </tag>
            
            <tag> 源码修改 </tag>
            
            <tag> 符号搜索 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>让ongwu支持搜索符号</title>
      <link href="/2025/01/09/17/"/>
      <url>/2025/01/09/17/</url>
      
        <content type="html"><![CDATA[<h1 id="让ongwu支持搜索符号"><a href="#让ongwu支持搜索符号" class="headerlink" title="让ongwu支持搜索符号"></a>让ongwu支持搜索符号</h1><h2 id="问题背景"><a href="#问题背景" class="headerlink" title="问题背景"></a>问题背景</h2><p>用过ongwu的应该都清楚它本身搜索是不支持符号的，一般都会过滤掉，只会保留文字字母数字进行搜索。这种过滤应该是出于安全考虑的，但如果你的需求需要搜索符号之类的东西，则可以通过修改源码的方式实现。</p><h2 id="修改原理"><a href="#修改原理" class="headerlink" title="修改原理"></a>修改原理</h2><p>ongwu的搜索功能是在<code>var/Widget/Archive.php</code>中实现的，所以需要修改两处代码：</p><h3 id="第一处：关键词过滤逻辑"><a href="#第一处：关键词过滤逻辑" class="headerlink" title="第一处：关键词过滤逻辑"></a>第一处：关键词过滤逻辑</h3><p>在<code>var/Widget/Archive.php</code>文件中找到以下代码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 原始代码</span></span><br><span class="line"><span class="variable">$filterKeywords</span> = <span class="variable language_">$this</span>-&gt;request-&gt;<span class="title function_ invoke__">get</span>(<span class="string">&#x27;keywords&#x27;</span>);</span><br><span class="line"><span class="variable">$filterKeywords</span> = <span class="title function_ invoke__">trim</span>(<span class="variable">$filterKeywords</span>);</span><br><span class="line"><span class="variable">$filterKeywords</span> = <span class="title function_ invoke__">str_replace</span>(<span class="keyword">array</span>(<span class="string">&#x27;+&#x27;</span>, <span class="string">&#x27;-&#x27;</span>, <span class="string">&#x27;&amp;&#x27;</span>, <span class="string">&#x27;|&#x27;</span>, <span class="string">&#x27;!&#x27;</span>, <span class="string">&#x27;(&#x27;</span>, <span class="string">&#x27;)&#x27;</span>, <span class="string">&#x27;&#123;&#x27;</span>, <span class="string">&#x27;&#125;&#x27;</span>, <span class="string">&#x27;[&#x27;</span>, <span class="string">&#x27;]&#x27;</span>, <span class="string">&#x27;^&#x27;</span>, <span class="string">&#x27;&quot;&#x27;</span>, <span class="string">&#x27;~&#x27;</span>, <span class="string">&#x27;*&#x27;</span>, <span class="string">&#x27;?&#x27;</span>, <span class="string">&#x27;:&#x27;</span>, <span class="string">&#x27;\\&#x27;</span>), <span class="string">&#x27;&#x27;</span>, <span class="variable">$filterKeywords</span>);</span><br></pre></td></tr></table></figure><p>修改为：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 修改后的代码</span></span><br><span class="line"><span class="variable">$filterKeywords</span> = <span class="variable language_">$this</span>-&gt;request-&gt;<span class="title function_ invoke__">get</span>(<span class="string">&#x27;keywords&#x27;</span>);</span><br><span class="line"><span class="variable">$filterKeywords</span> = <span class="title function_ invoke__">trim</span>(<span class="variable">$filterKeywords</span>);</span><br><span class="line"><span class="comment">// 注释掉或删除符号过滤代码</span></span><br><span class="line"><span class="comment">// $filterKeywords = str_replace(array(&#x27;+&#x27;, &#x27;-&#x27;, &#x27;&amp;&#x27;, &#x27;|&#x27;, &#x27;!&#x27;, &#x27;(&#x27;, &#x27;)&#x27;, &#x27;&#123;&#x27;, &#x27;&#125;&#x27;, &#x27;[&#x27;, &#x27;]&#x27;, &#x27;^&#x27;, &#x27;&quot;&#x27;, &#x27;~&#x27;, &#x27;*&#x27;, &#x27;?&#x27;, &#x27;:&#x27;, &#x27;\\&#x27;), &#x27;&#x27;, $filterKeywords);</span></span><br></pre></td></tr></table></figure><h3 id="第二处：SQL查询构建"><a href="#第二处：SQL查询构建" class="headerlink" title="第二处：SQL查询构建"></a>第二处：SQL查询构建</h3><p>找到构建SQL查询的部分：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 原始代码</span></span><br><span class="line"><span class="keyword">if</span> (!<span class="keyword">empty</span>(<span class="variable">$filterKeywords</span>)) &#123;</span><br><span class="line">    <span class="variable">$filterKeywords</span> = <span class="string">&#x27;%&#x27;</span> . <span class="variable">$filterKeywords</span> . <span class="string">&#x27;%&#x27;</span>;</span><br><span class="line">    <span class="variable language_">$this</span>-&gt;db-&gt;<span class="title function_ invoke__">where</span>(<span class="string">&#x27;table.contents.title LIKE ? OR table.contents.text LIKE ?&#x27;</span>, <span class="variable">$filterKeywords</span>, <span class="variable">$filterKeywords</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>修改为：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 修改后的代码</span></span><br><span class="line"><span class="keyword">if</span> (!<span class="keyword">empty</span>(<span class="variable">$filterKeywords</span>)) &#123;</span><br><span class="line">    <span class="comment">// 支持特殊符号的搜索</span></span><br><span class="line">    <span class="variable">$filterKeywords</span> = <span class="string">&#x27;%&#x27;</span> . <span class="title function_ invoke__">addslashes</span>(<span class="variable">$filterKeywords</span>) . <span class="string">&#x27;%&#x27;</span>;</span><br><span class="line">    <span class="variable language_">$this</span>-&gt;db-&gt;<span class="title function_ invoke__">where</span>(<span class="string">&#x27;table.contents.title LIKE ? OR table.contents.text LIKE ?&#x27;</span>, <span class="variable">$filterKeywords</span>, <span class="variable">$filterKeywords</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="完整修改示例"><a href="#完整修改示例" class="headerlink" title="完整修改示例"></a>完整修改示例</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">// var/Widget/Archive.php 修改示例</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Widget_Archive</span> <span class="keyword">extends</span> <span class="title">Widget_Abstract_Contents</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="comment">// ... 其他代码 ...</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 执行搜索</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">search</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;db-&gt;<span class="title function_ invoke__">select</span>(<span class="string">&#x27;table.contents.cid&#x27;</span>, <span class="string">&#x27;table.contents.title&#x27;</span>, <span class="string">&#x27;table.contents.slug&#x27;</span>, <span class="string">&#x27;table.contents.created&#x27;</span>, <span class="string">&#x27;table.contents.authorId&#x27;</span>, <span class="string">&#x27;table.contents.modified&#x27;</span>, <span class="string">&#x27;table.contents.type&#x27;</span>, <span class="string">&#x27;table.contents.status&#x27;</span>, <span class="string">&#x27;table.contents.password&#x27;</span>, <span class="string">&#x27;table.contents.commentsNum&#x27;</span>, <span class="string">&#x27;table.contents.order&#x27;</span>, <span class="string">&#x27;table.contents.template&#x27;</span>, <span class="string">&#x27;table.contents.allowComment&#x27;</span>, <span class="string">&#x27;table.contents.allowPing&#x27;</span>, <span class="string">&#x27;table.contents.allowFeed&#x27;</span>);</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;db-&gt;<span class="keyword">from</span>(<span class="string">&#x27;table.contents&#x27;</span>);</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 获取搜索关键词</span></span><br><span class="line">        <span class="variable">$filterKeywords</span> = <span class="variable language_">$this</span>-&gt;request-&gt;<span class="title function_ invoke__">get</span>(<span class="string">&#x27;keywords&#x27;</span>);</span><br><span class="line">        <span class="variable">$filterKeywords</span> = <span class="title function_ invoke__">trim</span>(<span class="variable">$filterKeywords</span>);</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 注释掉符号过滤，支持符号搜索</span></span><br><span class="line">        <span class="comment">// $filterKeywords = str_replace(array(&#x27;+&#x27;, &#x27;-&#x27;, &#x27;&amp;&#x27;, &#x27;|&#x27;, &#x27;!&#x27;, &#x27;(&#x27;, &#x27;)&#x27;, &#x27;&#123;&#x27;, &#x27;&#125;&#x27;, &#x27;[&#x27;, &#x27;]&#x27;, &#x27;^&#x27;, &#x27;&quot;&#x27;, &#x27;~&#x27;, &#x27;*&#x27;, &#x27;?&#x27;, &#x27;:&#x27;, &#x27;\\&#x27;), &#x27;&#x27;, $filterKeywords);</span></span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> (!<span class="keyword">empty</span>(<span class="variable">$filterKeywords</span>)) &#123;</span><br><span class="line">            <span class="comment">// 使用addslashes防止SQL注入，同时支持符号搜索</span></span><br><span class="line">            <span class="variable">$filterKeywords</span> = <span class="string">&#x27;%&#x27;</span> . <span class="title function_ invoke__">addslashes</span>(<span class="variable">$filterKeywords</span>) . <span class="string">&#x27;%&#x27;</span>;</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;db-&gt;<span class="title function_ invoke__">where</span>(<span class="string">&#x27;table.contents.title LIKE ? OR table.contents.text LIKE ?&#x27;</span>, <span class="variable">$filterKeywords</span>, <span class="variable">$filterKeywords</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// ... 其他搜索逻辑 ...</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="安全注意事项"><a href="#安全注意事项" class="headerlink" title="安全注意事项"></a>安全注意事项</h2><h3 id="1-SQL注入防护"><a href="#1-SQL注入防护" class="headerlink" title="1. SQL注入防护"></a>1. SQL注入防护</h3><p>虽然我们允许符号搜索，但必须确保SQL安全：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 使用addslashes或更好的方法处理输入</span></span><br><span class="line"><span class="variable">$filterKeywords</span> = <span class="title function_ invoke__">addslashes</span>(<span class="variable">$filterKeywords</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 或者使用预处理语句</span></span><br><span class="line"><span class="variable">$stmt</span> = <span class="variable language_">$this</span>-&gt;db-&gt;<span class="title function_ invoke__">prepare</span>(<span class="string">&#x27;SELECT * FROM table.contents WHERE title LIKE ? OR text LIKE ?&#x27;</span>);</span><br><span class="line"><span class="variable">$stmt</span>-&gt;<span class="title function_ invoke__">execute</span>(<span class="keyword">array</span>(<span class="variable">$filterKeywords</span>, <span class="variable">$filterKeywords</span>));</span><br></pre></td></tr></table></figure><h3 id="2-输入验证"><a href="#2-输入验证" class="headerlink" title="2. 输入验证"></a>2. 输入验证</h3><p>添加输入长度和内容验证：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 验证搜索关键词长度</span></span><br><span class="line"><span class="keyword">if</span> (<span class="title function_ invoke__">strlen</span>(<span class="variable">$filterKeywords</span>) &gt; <span class="number">100</span>) &#123;</span><br><span class="line">    <span class="variable">$filterKeywords</span> = <span class="title function_ invoke__">substr</span>(<span class="variable">$filterKeywords</span>, <span class="number">0</span>, <span class="number">100</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 验证是否包含恶意内容</span></span><br><span class="line"><span class="keyword">if</span> (<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/&lt;script|javascript|vbscript|onload|onerror/i&#x27;</span>, <span class="variable">$filterKeywords</span>)) &#123;</span><br><span class="line">    <span class="variable">$filterKeywords</span> = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="测试验证"><a href="#测试验证" class="headerlink" title="测试验证"></a>测试验证</h2><h3 id="1-基本符号测试"><a href="#1-基本符号测试" class="headerlink" title="1. 基本符号测试"></a>1. 基本符号测试</h3><p>测试以下符号是否能正常搜索：</p><ul><li><code>+</code> 加号</li><li><code>-</code> 减号</li><li><code>&amp;</code> 与号</li><li><code>|</code> 或号</li><li><code>!</code> 感叹号</li><li><code>()</code> 括号</li><li><code>[]</code> 方括号</li><li><code>&#123;&#125;</code> 花括号</li></ul><h3 id="2-复杂搜索测试"><a href="#2-复杂搜索测试" class="headerlink" title="2. 复杂搜索测试"></a>2. 复杂搜索测试</h3><p>测试复杂搜索表达式：</p><ul><li><code>PHP + MySQL</code></li><li><code>(前端|后端)开发</code></li><li><code>ongwu &amp; 插件</code></li><li><code>[重要] 更新</code></li></ul><h2 id="性能优化建议"><a href="#性能优化建议" class="headerlink" title="性能优化建议"></a>性能优化建议</h2><h3 id="1-索引优化"><a href="#1-索引优化" class="headerlink" title="1. 索引优化"></a>1. 索引优化</h3><p>为搜索字段添加数据库索引：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 为标题和内容字段添加全文索引</span></span><br><span class="line"><span class="keyword">ALTER TABLE</span> ongwu_contents <span class="keyword">ADD</span> FULLTEXT(title, text);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 或者添加普通索引</span></span><br><span class="line"><span class="keyword">CREATE</span> INDEX idx_contents_title <span class="keyword">ON</span> ongwu_contents(title);</span><br><span class="line"><span class="keyword">CREATE</span> INDEX idx_contents_text <span class="keyword">ON</span> ongwu_contents(text);</span><br></pre></td></tr></table></figure><h3 id="2-搜索结果缓存"><a href="#2-搜索结果缓存" class="headerlink" title="2. 搜索结果缓存"></a>2. 搜索结果缓存</h3><p>实现搜索结果缓存机制：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 缓存搜索结果</span></span><br><span class="line"><span class="variable">$cacheKey</span> = <span class="string">&#x27;search_&#x27;</span> . <span class="title function_ invoke__">md5</span>(<span class="variable">$filterKeywords</span>);</span><br><span class="line"><span class="variable">$cachedResult</span> = <span class="variable language_">$this</span>-&gt;cache-&gt;<span class="title function_ invoke__">get</span>(<span class="variable">$cacheKey</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="variable">$cachedResult</span> !== <span class="literal">false</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="variable">$cachedResult</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 执行搜索</span></span><br><span class="line"><span class="variable">$result</span> = <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">performSearch</span>(<span class="variable">$filterKeywords</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 缓存结果</span></span><br><span class="line"><span class="variable language_">$this</span>-&gt;cache-&gt;<span class="title function_ invoke__">set</span>(<span class="variable">$cacheKey</span>, <span class="variable">$result</span>, <span class="number">3600</span>); <span class="comment">// 缓存1小时</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="variable">$result</span>;</span><br></pre></td></tr></table></figure><h2 id="兼容性考虑"><a href="#兼容性考虑" class="headerlink" title="兼容性考虑"></a>兼容性考虑</h2><h3 id="1-版本兼容"><a href="#1-版本兼容" class="headerlink" title="1. 版本兼容"></a>1. 版本兼容</h3><p>确保修改后的代码与ongwu版本兼容：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 检查ongwu版本</span></span><br><span class="line"><span class="keyword">if</span> (<span class="title function_ invoke__">version_compare</span>(ongwu_<span class="title class_">Common</span>::<span class="variable constant_">VERSION</span>, <span class="string">&#x27;1.2.0&#x27;</span>, <span class="string">&#x27;&gt;=&#x27;</span>)) &#123;</span><br><span class="line">    <span class="comment">// 新版本代码</span></span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="comment">// 旧版本兼容代码</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2-插件兼容"><a href="#2-插件兼容" class="headerlink" title="2. 插件兼容"></a>2. 插件兼容</h3><p>如果使用了其他搜索相关插件，需要确保兼容性：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 检查是否有其他搜索插件</span></span><br><span class="line"><span class="keyword">if</span> (<span class="title function_ invoke__">class_exists</span>(<span class="string">&#x27;Widget_Archive_Search&#x27;</span>)) &#123;</span><br><span class="line">    <span class="comment">// 使用插件提供的搜索功能</span></span><br><span class="line">    <span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">pluginSearch</span>(<span class="variable">$filterKeywords</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>通过修改ongwu源码，我们可以实现符号搜索功能，但需要注意：</p><ol><li><strong>安全性</strong>：使用<code>addslashes</code>或预处理语句防止SQL注入</li><li><strong>性能</strong>：添加适当的数据库索引和缓存机制</li><li><strong>兼容性</strong>：确保与ongwu版本和其他插件的兼容性</li><li><strong>维护性</strong>：记录修改内容，便于后续升级</li></ol><p>这样修改后，ongwu就能支持包含符号的搜索了，满足更复杂的搜索需求。</p><hr><p><em>注意：修改源码后，在ongwu升级时需要重新应用这些修改。建议将修改内容记录在文档中，或者创建补丁文件。</em></p>]]></content>
      
      
      <categories>
          
          <category> tutorial </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ongwu </tag>
            
            <tag> 搜索功能 </tag>
            
            <tag> 源码修改 </tag>
            
            <tag> 符号搜索 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>让ongwu支持搜索符号</title>
      <link href="/2025/01/09/7%20-%20%E5%89%AF%E6%9C%AC%20(10)%20-%20%E5%89%AF%E6%9C%AC/"/>
      <url>/2025/01/09/7%20-%20%E5%89%AF%E6%9C%AC%20(10)%20-%20%E5%89%AF%E6%9C%AC/</url>
      
        <content type="html"><![CDATA[<h1 id="让ongwu支持搜索符号"><a href="#让ongwu支持搜索符号" class="headerlink" title="让ongwu支持搜索符号"></a>让ongwu支持搜索符号</h1><h2 id="问题背景"><a href="#问题背景" class="headerlink" title="问题背景"></a>问题背景</h2><p>用过ongwu的应该都清楚它本身搜索是不支持符号的，一般都会过滤掉，只会保留文字字母数字进行搜索。这种过滤应该是出于安全考虑的，但如果你的需求需要搜索符号之类的东西，则可以通过修改源码的方式实现。</p><h2 id="修改原理"><a href="#修改原理" class="headerlink" title="修改原理"></a>修改原理</h2><p>ongwu的搜索功能是在<code>var/Widget/Archive.php</code>中实现的，所以需要修改两处代码：</p><h3 id="第一处：关键词过滤逻辑"><a href="#第一处：关键词过滤逻辑" class="headerlink" title="第一处：关键词过滤逻辑"></a>第一处：关键词过滤逻辑</h3><p>在<code>var/Widget/Archive.php</code>文件中找到以下代码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 原始代码</span></span><br><span class="line"><span class="variable">$filterKeywords</span> = <span class="variable language_">$this</span>-&gt;request-&gt;<span class="title function_ invoke__">get</span>(<span class="string">&#x27;keywords&#x27;</span>);</span><br><span class="line"><span class="variable">$filterKeywords</span> = <span class="title function_ invoke__">trim</span>(<span class="variable">$filterKeywords</span>);</span><br><span class="line"><span class="variable">$filterKeywords</span> = <span class="title function_ invoke__">str_replace</span>(<span class="keyword">array</span>(<span class="string">&#x27;+&#x27;</span>, <span class="string">&#x27;-&#x27;</span>, <span class="string">&#x27;&amp;&#x27;</span>, <span class="string">&#x27;|&#x27;</span>, <span class="string">&#x27;!&#x27;</span>, <span class="string">&#x27;(&#x27;</span>, <span class="string">&#x27;)&#x27;</span>, <span class="string">&#x27;&#123;&#x27;</span>, <span class="string">&#x27;&#125;&#x27;</span>, <span class="string">&#x27;[&#x27;</span>, <span class="string">&#x27;]&#x27;</span>, <span class="string">&#x27;^&#x27;</span>, <span class="string">&#x27;&quot;&#x27;</span>, <span class="string">&#x27;~&#x27;</span>, <span class="string">&#x27;*&#x27;</span>, <span class="string">&#x27;?&#x27;</span>, <span class="string">&#x27;:&#x27;</span>, <span class="string">&#x27;\\&#x27;</span>), <span class="string">&#x27;&#x27;</span>, <span class="variable">$filterKeywords</span>);</span><br></pre></td></tr></table></figure><p>修改为：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 修改后的代码</span></span><br><span class="line"><span class="variable">$filterKeywords</span> = <span class="variable language_">$this</span>-&gt;request-&gt;<span class="title function_ invoke__">get</span>(<span class="string">&#x27;keywords&#x27;</span>);</span><br><span class="line"><span class="variable">$filterKeywords</span> = <span class="title function_ invoke__">trim</span>(<span class="variable">$filterKeywords</span>);</span><br><span class="line"><span class="comment">// 注释掉或删除符号过滤代码</span></span><br><span class="line"><span class="comment">// $filterKeywords = str_replace(array(&#x27;+&#x27;, &#x27;-&#x27;, &#x27;&amp;&#x27;, &#x27;|&#x27;, &#x27;!&#x27;, &#x27;(&#x27;, &#x27;)&#x27;, &#x27;&#123;&#x27;, &#x27;&#125;&#x27;, &#x27;[&#x27;, &#x27;]&#x27;, &#x27;^&#x27;, &#x27;&quot;&#x27;, &#x27;~&#x27;, &#x27;*&#x27;, &#x27;?&#x27;, &#x27;:&#x27;, &#x27;\\&#x27;), &#x27;&#x27;, $filterKeywords);</span></span><br></pre></td></tr></table></figure><h3 id="第二处：SQL查询构建"><a href="#第二处：SQL查询构建" class="headerlink" title="第二处：SQL查询构建"></a>第二处：SQL查询构建</h3><p>找到构建SQL查询的部分：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 原始代码</span></span><br><span class="line"><span class="keyword">if</span> (!<span class="keyword">empty</span>(<span class="variable">$filterKeywords</span>)) &#123;</span><br><span class="line">    <span class="variable">$filterKeywords</span> = <span class="string">&#x27;%&#x27;</span> . <span class="variable">$filterKeywords</span> . <span class="string">&#x27;%&#x27;</span>;</span><br><span class="line">    <span class="variable language_">$this</span>-&gt;db-&gt;<span class="title function_ invoke__">where</span>(<span class="string">&#x27;table.contents.title LIKE ? OR table.contents.text LIKE ?&#x27;</span>, <span class="variable">$filterKeywords</span>, <span class="variable">$filterKeywords</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>修改为：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 修改后的代码</span></span><br><span class="line"><span class="keyword">if</span> (!<span class="keyword">empty</span>(<span class="variable">$filterKeywords</span>)) &#123;</span><br><span class="line">    <span class="comment">// 支持特殊符号的搜索</span></span><br><span class="line">    <span class="variable">$filterKeywords</span> = <span class="string">&#x27;%&#x27;</span> . <span class="title function_ invoke__">addslashes</span>(<span class="variable">$filterKeywords</span>) . <span class="string">&#x27;%&#x27;</span>;</span><br><span class="line">    <span class="variable language_">$this</span>-&gt;db-&gt;<span class="title function_ invoke__">where</span>(<span class="string">&#x27;table.contents.title LIKE ? OR table.contents.text LIKE ?&#x27;</span>, <span class="variable">$filterKeywords</span>, <span class="variable">$filterKeywords</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="完整修改示例"><a href="#完整修改示例" class="headerlink" title="完整修改示例"></a>完整修改示例</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">// var/Widget/Archive.php 修改示例</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Widget_Archive</span> <span class="keyword">extends</span> <span class="title">Widget_Abstract_Contents</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="comment">// ... 其他代码 ...</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 执行搜索</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">search</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;db-&gt;<span class="title function_ invoke__">select</span>(<span class="string">&#x27;table.contents.cid&#x27;</span>, <span class="string">&#x27;table.contents.title&#x27;</span>, <span class="string">&#x27;table.contents.slug&#x27;</span>, <span class="string">&#x27;table.contents.created&#x27;</span>, <span class="string">&#x27;table.contents.authorId&#x27;</span>, <span class="string">&#x27;table.contents.modified&#x27;</span>, <span class="string">&#x27;table.contents.type&#x27;</span>, <span class="string">&#x27;table.contents.status&#x27;</span>, <span class="string">&#x27;table.contents.password&#x27;</span>, <span class="string">&#x27;table.contents.commentsNum&#x27;</span>, <span class="string">&#x27;table.contents.order&#x27;</span>, <span class="string">&#x27;table.contents.template&#x27;</span>, <span class="string">&#x27;table.contents.allowComment&#x27;</span>, <span class="string">&#x27;table.contents.allowPing&#x27;</span>, <span class="string">&#x27;table.contents.allowFeed&#x27;</span>);</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;db-&gt;<span class="keyword">from</span>(<span class="string">&#x27;table.contents&#x27;</span>);</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 获取搜索关键词</span></span><br><span class="line">        <span class="variable">$filterKeywords</span> = <span class="variable language_">$this</span>-&gt;request-&gt;<span class="title function_ invoke__">get</span>(<span class="string">&#x27;keywords&#x27;</span>);</span><br><span class="line">        <span class="variable">$filterKeywords</span> = <span class="title function_ invoke__">trim</span>(<span class="variable">$filterKeywords</span>);</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 注释掉符号过滤，支持符号搜索</span></span><br><span class="line">        <span class="comment">// $filterKeywords = str_replace(array(&#x27;+&#x27;, &#x27;-&#x27;, &#x27;&amp;&#x27;, &#x27;|&#x27;, &#x27;!&#x27;, &#x27;(&#x27;, &#x27;)&#x27;, &#x27;&#123;&#x27;, &#x27;&#125;&#x27;, &#x27;[&#x27;, &#x27;]&#x27;, &#x27;^&#x27;, &#x27;&quot;&#x27;, &#x27;~&#x27;, &#x27;*&#x27;, &#x27;?&#x27;, &#x27;:&#x27;, &#x27;\\&#x27;), &#x27;&#x27;, $filterKeywords);</span></span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> (!<span class="keyword">empty</span>(<span class="variable">$filterKeywords</span>)) &#123;</span><br><span class="line">            <span class="comment">// 使用addslashes防止SQL注入，同时支持符号搜索</span></span><br><span class="line">            <span class="variable">$filterKeywords</span> = <span class="string">&#x27;%&#x27;</span> . <span class="title function_ invoke__">addslashes</span>(<span class="variable">$filterKeywords</span>) . <span class="string">&#x27;%&#x27;</span>;</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;db-&gt;<span class="title function_ invoke__">where</span>(<span class="string">&#x27;table.contents.title LIKE ? OR table.contents.text LIKE ?&#x27;</span>, <span class="variable">$filterKeywords</span>, <span class="variable">$filterKeywords</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// ... 其他搜索逻辑 ...</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="安全注意事项"><a href="#安全注意事项" class="headerlink" title="安全注意事项"></a>安全注意事项</h2><h3 id="1-SQL注入防护"><a href="#1-SQL注入防护" class="headerlink" title="1. SQL注入防护"></a>1. SQL注入防护</h3><p>虽然我们允许符号搜索，但必须确保SQL安全：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 使用addslashes或更好的方法处理输入</span></span><br><span class="line"><span class="variable">$filterKeywords</span> = <span class="title function_ invoke__">addslashes</span>(<span class="variable">$filterKeywords</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 或者使用预处理语句</span></span><br><span class="line"><span class="variable">$stmt</span> = <span class="variable language_">$this</span>-&gt;db-&gt;<span class="title function_ invoke__">prepare</span>(<span class="string">&#x27;SELECT * FROM table.contents WHERE title LIKE ? OR text LIKE ?&#x27;</span>);</span><br><span class="line"><span class="variable">$stmt</span>-&gt;<span class="title function_ invoke__">execute</span>(<span class="keyword">array</span>(<span class="variable">$filterKeywords</span>, <span class="variable">$filterKeywords</span>));</span><br></pre></td></tr></table></figure><h3 id="2-输入验证"><a href="#2-输入验证" class="headerlink" title="2. 输入验证"></a>2. 输入验证</h3><p>添加输入长度和内容验证：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 验证搜索关键词长度</span></span><br><span class="line"><span class="keyword">if</span> (<span class="title function_ invoke__">strlen</span>(<span class="variable">$filterKeywords</span>) &gt; <span class="number">100</span>) &#123;</span><br><span class="line">    <span class="variable">$filterKeywords</span> = <span class="title function_ invoke__">substr</span>(<span class="variable">$filterKeywords</span>, <span class="number">0</span>, <span class="number">100</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 验证是否包含恶意内容</span></span><br><span class="line"><span class="keyword">if</span> (<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/&lt;script|javascript|vbscript|onload|onerror/i&#x27;</span>, <span class="variable">$filterKeywords</span>)) &#123;</span><br><span class="line">    <span class="variable">$filterKeywords</span> = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="测试验证"><a href="#测试验证" class="headerlink" title="测试验证"></a>测试验证</h2><h3 id="1-基本符号测试"><a href="#1-基本符号测试" class="headerlink" title="1. 基本符号测试"></a>1. 基本符号测试</h3><p>测试以下符号是否能正常搜索：</p><ul><li><code>+</code> 加号</li><li><code>-</code> 减号</li><li><code>&amp;</code> 与号</li><li><code>|</code> 或号</li><li><code>!</code> 感叹号</li><li><code>()</code> 括号</li><li><code>[]</code> 方括号</li><li><code>&#123;&#125;</code> 花括号</li></ul><h3 id="2-复杂搜索测试"><a href="#2-复杂搜索测试" class="headerlink" title="2. 复杂搜索测试"></a>2. 复杂搜索测试</h3><p>测试复杂搜索表达式：</p><ul><li><code>PHP + MySQL</code></li><li><code>(前端|后端)开发</code></li><li><code>ongwu &amp; 插件</code></li><li><code>[重要] 更新</code></li></ul><h2 id="性能优化建议"><a href="#性能优化建议" class="headerlink" title="性能优化建议"></a>性能优化建议</h2><h3 id="1-索引优化"><a href="#1-索引优化" class="headerlink" title="1. 索引优化"></a>1. 索引优化</h3><p>为搜索字段添加数据库索引：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 为标题和内容字段添加全文索引</span></span><br><span class="line"><span class="keyword">ALTER TABLE</span> ongwu_contents <span class="keyword">ADD</span> FULLTEXT(title, text);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 或者添加普通索引</span></span><br><span class="line"><span class="keyword">CREATE</span> INDEX idx_contents_title <span class="keyword">ON</span> ongwu_contents(title);</span><br><span class="line"><span class="keyword">CREATE</span> INDEX idx_contents_text <span class="keyword">ON</span> ongwu_contents(text);</span><br></pre></td></tr></table></figure><h3 id="2-搜索结果缓存"><a href="#2-搜索结果缓存" class="headerlink" title="2. 搜索结果缓存"></a>2. 搜索结果缓存</h3><p>实现搜索结果缓存机制：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 缓存搜索结果</span></span><br><span class="line"><span class="variable">$cacheKey</span> = <span class="string">&#x27;search_&#x27;</span> . <span class="title function_ invoke__">md5</span>(<span class="variable">$filterKeywords</span>);</span><br><span class="line"><span class="variable">$cachedResult</span> = <span class="variable language_">$this</span>-&gt;cache-&gt;<span class="title function_ invoke__">get</span>(<span class="variable">$cacheKey</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="variable">$cachedResult</span> !== <span class="literal">false</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="variable">$cachedResult</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 执行搜索</span></span><br><span class="line"><span class="variable">$result</span> = <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">performSearch</span>(<span class="variable">$filterKeywords</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 缓存结果</span></span><br><span class="line"><span class="variable language_">$this</span>-&gt;cache-&gt;<span class="title function_ invoke__">set</span>(<span class="variable">$cacheKey</span>, <span class="variable">$result</span>, <span class="number">3600</span>); <span class="comment">// 缓存1小时</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="variable">$result</span>;</span><br></pre></td></tr></table></figure><h2 id="兼容性考虑"><a href="#兼容性考虑" class="headerlink" title="兼容性考虑"></a>兼容性考虑</h2><h3 id="1-版本兼容"><a href="#1-版本兼容" class="headerlink" title="1. 版本兼容"></a>1. 版本兼容</h3><p>确保修改后的代码与ongwu版本兼容：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 检查ongwu版本</span></span><br><span class="line"><span class="keyword">if</span> (<span class="title function_ invoke__">version_compare</span>(ongwu_<span class="title class_">Common</span>::<span class="variable constant_">VERSION</span>, <span class="string">&#x27;1.2.0&#x27;</span>, <span class="string">&#x27;&gt;=&#x27;</span>)) &#123;</span><br><span class="line">    <span class="comment">// 新版本代码</span></span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="comment">// 旧版本兼容代码</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2-插件兼容"><a href="#2-插件兼容" class="headerlink" title="2. 插件兼容"></a>2. 插件兼容</h3><p>如果使用了其他搜索相关插件，需要确保兼容性：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 检查是否有其他搜索插件</span></span><br><span class="line"><span class="keyword">if</span> (<span class="title function_ invoke__">class_exists</span>(<span class="string">&#x27;Widget_Archive_Search&#x27;</span>)) &#123;</span><br><span class="line">    <span class="comment">// 使用插件提供的搜索功能</span></span><br><span class="line">    <span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">pluginSearch</span>(<span class="variable">$filterKeywords</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>通过修改ongwu源码，我们可以实现符号搜索功能，但需要注意：</p><ol><li><strong>安全性</strong>：使用<code>addslashes</code>或预处理语句防止SQL注入</li><li><strong>性能</strong>：添加适当的数据库索引和缓存机制</li><li><strong>兼容性</strong>：确保与ongwu版本和其他插件的兼容性</li><li><strong>维护性</strong>：记录修改内容，便于后续升级</li></ol><p>这样修改后，ongwu就能支持包含符号的搜索了，满足更复杂的搜索需求。</p><hr><p><em>注意：修改源码后，在ongwu升级时需要重新应用这些修改。建议将修改内容记录在文档中，或者创建补丁文件。</em></p>]]></content>
      
      
      <categories>
          
          <category> tutorial </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ongwu </tag>
            
            <tag> 搜索功能 </tag>
            
            <tag> 源码修改 </tag>
            
            <tag> 符号搜索 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>让ongwu支持搜索符号</title>
      <link href="/2025/01/09/7%20-%20%E5%89%AF%E6%9C%AC%20(10)/"/>
      <url>/2025/01/09/7%20-%20%E5%89%AF%E6%9C%AC%20(10)/</url>
      
        <content type="html"><![CDATA[<h1 id="让ongwu支持搜索符号"><a href="#让ongwu支持搜索符号" class="headerlink" title="让ongwu支持搜索符号"></a>让ongwu支持搜索符号</h1><h2 id="问题背景"><a href="#问题背景" class="headerlink" title="问题背景"></a>问题背景</h2><p>用过ongwu的应该都清楚它本身搜索是不支持符号的，一般都会过滤掉，只会保留文字字母数字进行搜索。这种过滤应该是出于安全考虑的，但如果你的需求需要搜索符号之类的东西，则可以通过修改源码的方式实现。</p><h2 id="修改原理"><a href="#修改原理" class="headerlink" title="修改原理"></a>修改原理</h2><p>ongwu的搜索功能是在<code>var/Widget/Archive.php</code>中实现的，所以需要修改两处代码：</p><h3 id="第一处：关键词过滤逻辑"><a href="#第一处：关键词过滤逻辑" class="headerlink" title="第一处：关键词过滤逻辑"></a>第一处：关键词过滤逻辑</h3><p>在<code>var/Widget/Archive.php</code>文件中找到以下代码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 原始代码</span></span><br><span class="line"><span class="variable">$filterKeywords</span> = <span class="variable language_">$this</span>-&gt;request-&gt;<span class="title function_ invoke__">get</span>(<span class="string">&#x27;keywords&#x27;</span>);</span><br><span class="line"><span class="variable">$filterKeywords</span> = <span class="title function_ invoke__">trim</span>(<span class="variable">$filterKeywords</span>);</span><br><span class="line"><span class="variable">$filterKeywords</span> = <span class="title function_ invoke__">str_replace</span>(<span class="keyword">array</span>(<span class="string">&#x27;+&#x27;</span>, <span class="string">&#x27;-&#x27;</span>, <span class="string">&#x27;&amp;&#x27;</span>, <span class="string">&#x27;|&#x27;</span>, <span class="string">&#x27;!&#x27;</span>, <span class="string">&#x27;(&#x27;</span>, <span class="string">&#x27;)&#x27;</span>, <span class="string">&#x27;&#123;&#x27;</span>, <span class="string">&#x27;&#125;&#x27;</span>, <span class="string">&#x27;[&#x27;</span>, <span class="string">&#x27;]&#x27;</span>, <span class="string">&#x27;^&#x27;</span>, <span class="string">&#x27;&quot;&#x27;</span>, <span class="string">&#x27;~&#x27;</span>, <span class="string">&#x27;*&#x27;</span>, <span class="string">&#x27;?&#x27;</span>, <span class="string">&#x27;:&#x27;</span>, <span class="string">&#x27;\\&#x27;</span>), <span class="string">&#x27;&#x27;</span>, <span class="variable">$filterKeywords</span>);</span><br></pre></td></tr></table></figure><p>修改为：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 修改后的代码</span></span><br><span class="line"><span class="variable">$filterKeywords</span> = <span class="variable language_">$this</span>-&gt;request-&gt;<span class="title function_ invoke__">get</span>(<span class="string">&#x27;keywords&#x27;</span>);</span><br><span class="line"><span class="variable">$filterKeywords</span> = <span class="title function_ invoke__">trim</span>(<span class="variable">$filterKeywords</span>);</span><br><span class="line"><span class="comment">// 注释掉或删除符号过滤代码</span></span><br><span class="line"><span class="comment">// $filterKeywords = str_replace(array(&#x27;+&#x27;, &#x27;-&#x27;, &#x27;&amp;&#x27;, &#x27;|&#x27;, &#x27;!&#x27;, &#x27;(&#x27;, &#x27;)&#x27;, &#x27;&#123;&#x27;, &#x27;&#125;&#x27;, &#x27;[&#x27;, &#x27;]&#x27;, &#x27;^&#x27;, &#x27;&quot;&#x27;, &#x27;~&#x27;, &#x27;*&#x27;, &#x27;?&#x27;, &#x27;:&#x27;, &#x27;\\&#x27;), &#x27;&#x27;, $filterKeywords);</span></span><br></pre></td></tr></table></figure><h3 id="第二处：SQL查询构建"><a href="#第二处：SQL查询构建" class="headerlink" title="第二处：SQL查询构建"></a>第二处：SQL查询构建</h3><p>找到构建SQL查询的部分：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 原始代码</span></span><br><span class="line"><span class="keyword">if</span> (!<span class="keyword">empty</span>(<span class="variable">$filterKeywords</span>)) &#123;</span><br><span class="line">    <span class="variable">$filterKeywords</span> = <span class="string">&#x27;%&#x27;</span> . <span class="variable">$filterKeywords</span> . <span class="string">&#x27;%&#x27;</span>;</span><br><span class="line">    <span class="variable language_">$this</span>-&gt;db-&gt;<span class="title function_ invoke__">where</span>(<span class="string">&#x27;table.contents.title LIKE ? OR table.contents.text LIKE ?&#x27;</span>, <span class="variable">$filterKeywords</span>, <span class="variable">$filterKeywords</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>修改为：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 修改后的代码</span></span><br><span class="line"><span class="keyword">if</span> (!<span class="keyword">empty</span>(<span class="variable">$filterKeywords</span>)) &#123;</span><br><span class="line">    <span class="comment">// 支持特殊符号的搜索</span></span><br><span class="line">    <span class="variable">$filterKeywords</span> = <span class="string">&#x27;%&#x27;</span> . <span class="title function_ invoke__">addslashes</span>(<span class="variable">$filterKeywords</span>) . <span class="string">&#x27;%&#x27;</span>;</span><br><span class="line">    <span class="variable language_">$this</span>-&gt;db-&gt;<span class="title function_ invoke__">where</span>(<span class="string">&#x27;table.contents.title LIKE ? OR table.contents.text LIKE ?&#x27;</span>, <span class="variable">$filterKeywords</span>, <span class="variable">$filterKeywords</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="完整修改示例"><a href="#完整修改示例" class="headerlink" title="完整修改示例"></a>完整修改示例</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">// var/Widget/Archive.php 修改示例</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Widget_Archive</span> <span class="keyword">extends</span> <span class="title">Widget_Abstract_Contents</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="comment">// ... 其他代码 ...</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 执行搜索</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">search</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;db-&gt;<span class="title function_ invoke__">select</span>(<span class="string">&#x27;table.contents.cid&#x27;</span>, <span class="string">&#x27;table.contents.title&#x27;</span>, <span class="string">&#x27;table.contents.slug&#x27;</span>, <span class="string">&#x27;table.contents.created&#x27;</span>, <span class="string">&#x27;table.contents.authorId&#x27;</span>, <span class="string">&#x27;table.contents.modified&#x27;</span>, <span class="string">&#x27;table.contents.type&#x27;</span>, <span class="string">&#x27;table.contents.status&#x27;</span>, <span class="string">&#x27;table.contents.password&#x27;</span>, <span class="string">&#x27;table.contents.commentsNum&#x27;</span>, <span class="string">&#x27;table.contents.order&#x27;</span>, <span class="string">&#x27;table.contents.template&#x27;</span>, <span class="string">&#x27;table.contents.allowComment&#x27;</span>, <span class="string">&#x27;table.contents.allowPing&#x27;</span>, <span class="string">&#x27;table.contents.allowFeed&#x27;</span>);</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;db-&gt;<span class="keyword">from</span>(<span class="string">&#x27;table.contents&#x27;</span>);</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 获取搜索关键词</span></span><br><span class="line">        <span class="variable">$filterKeywords</span> = <span class="variable language_">$this</span>-&gt;request-&gt;<span class="title function_ invoke__">get</span>(<span class="string">&#x27;keywords&#x27;</span>);</span><br><span class="line">        <span class="variable">$filterKeywords</span> = <span class="title function_ invoke__">trim</span>(<span class="variable">$filterKeywords</span>);</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 注释掉符号过滤，支持符号搜索</span></span><br><span class="line">        <span class="comment">// $filterKeywords = str_replace(array(&#x27;+&#x27;, &#x27;-&#x27;, &#x27;&amp;&#x27;, &#x27;|&#x27;, &#x27;!&#x27;, &#x27;(&#x27;, &#x27;)&#x27;, &#x27;&#123;&#x27;, &#x27;&#125;&#x27;, &#x27;[&#x27;, &#x27;]&#x27;, &#x27;^&#x27;, &#x27;&quot;&#x27;, &#x27;~&#x27;, &#x27;*&#x27;, &#x27;?&#x27;, &#x27;:&#x27;, &#x27;\\&#x27;), &#x27;&#x27;, $filterKeywords);</span></span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> (!<span class="keyword">empty</span>(<span class="variable">$filterKeywords</span>)) &#123;</span><br><span class="line">            <span class="comment">// 使用addslashes防止SQL注入，同时支持符号搜索</span></span><br><span class="line">            <span class="variable">$filterKeywords</span> = <span class="string">&#x27;%&#x27;</span> . <span class="title function_ invoke__">addslashes</span>(<span class="variable">$filterKeywords</span>) . <span class="string">&#x27;%&#x27;</span>;</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;db-&gt;<span class="title function_ invoke__">where</span>(<span class="string">&#x27;table.contents.title LIKE ? OR table.contents.text LIKE ?&#x27;</span>, <span class="variable">$filterKeywords</span>, <span class="variable">$filterKeywords</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// ... 其他搜索逻辑 ...</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="安全注意事项"><a href="#安全注意事项" class="headerlink" title="安全注意事项"></a>安全注意事项</h2><h3 id="1-SQL注入防护"><a href="#1-SQL注入防护" class="headerlink" title="1. SQL注入防护"></a>1. SQL注入防护</h3><p>虽然我们允许符号搜索，但必须确保SQL安全：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 使用addslashes或更好的方法处理输入</span></span><br><span class="line"><span class="variable">$filterKeywords</span> = <span class="title function_ invoke__">addslashes</span>(<span class="variable">$filterKeywords</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 或者使用预处理语句</span></span><br><span class="line"><span class="variable">$stmt</span> = <span class="variable language_">$this</span>-&gt;db-&gt;<span class="title function_ invoke__">prepare</span>(<span class="string">&#x27;SELECT * FROM table.contents WHERE title LIKE ? OR text LIKE ?&#x27;</span>);</span><br><span class="line"><span class="variable">$stmt</span>-&gt;<span class="title function_ invoke__">execute</span>(<span class="keyword">array</span>(<span class="variable">$filterKeywords</span>, <span class="variable">$filterKeywords</span>));</span><br></pre></td></tr></table></figure><h3 id="2-输入验证"><a href="#2-输入验证" class="headerlink" title="2. 输入验证"></a>2. 输入验证</h3><p>添加输入长度和内容验证：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 验证搜索关键词长度</span></span><br><span class="line"><span class="keyword">if</span> (<span class="title function_ invoke__">strlen</span>(<span class="variable">$filterKeywords</span>) &gt; <span class="number">100</span>) &#123;</span><br><span class="line">    <span class="variable">$filterKeywords</span> = <span class="title function_ invoke__">substr</span>(<span class="variable">$filterKeywords</span>, <span class="number">0</span>, <span class="number">100</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 验证是否包含恶意内容</span></span><br><span class="line"><span class="keyword">if</span> (<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/&lt;script|javascript|vbscript|onload|onerror/i&#x27;</span>, <span class="variable">$filterKeywords</span>)) &#123;</span><br><span class="line">    <span class="variable">$filterKeywords</span> = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="测试验证"><a href="#测试验证" class="headerlink" title="测试验证"></a>测试验证</h2><h3 id="1-基本符号测试"><a href="#1-基本符号测试" class="headerlink" title="1. 基本符号测试"></a>1. 基本符号测试</h3><p>测试以下符号是否能正常搜索：</p><ul><li><code>+</code> 加号</li><li><code>-</code> 减号</li><li><code>&amp;</code> 与号</li><li><code>|</code> 或号</li><li><code>!</code> 感叹号</li><li><code>()</code> 括号</li><li><code>[]</code> 方括号</li><li><code>&#123;&#125;</code> 花括号</li></ul><h3 id="2-复杂搜索测试"><a href="#2-复杂搜索测试" class="headerlink" title="2. 复杂搜索测试"></a>2. 复杂搜索测试</h3><p>测试复杂搜索表达式：</p><ul><li><code>PHP + MySQL</code></li><li><code>(前端|后端)开发</code></li><li><code>ongwu &amp; 插件</code></li><li><code>[重要] 更新</code></li></ul><h2 id="性能优化建议"><a href="#性能优化建议" class="headerlink" title="性能优化建议"></a>性能优化建议</h2><h3 id="1-索引优化"><a href="#1-索引优化" class="headerlink" title="1. 索引优化"></a>1. 索引优化</h3><p>为搜索字段添加数据库索引：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 为标题和内容字段添加全文索引</span></span><br><span class="line"><span class="keyword">ALTER TABLE</span> ongwu_contents <span class="keyword">ADD</span> FULLTEXT(title, text);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 或者添加普通索引</span></span><br><span class="line"><span class="keyword">CREATE</span> INDEX idx_contents_title <span class="keyword">ON</span> ongwu_contents(title);</span><br><span class="line"><span class="keyword">CREATE</span> INDEX idx_contents_text <span class="keyword">ON</span> ongwu_contents(text);</span><br></pre></td></tr></table></figure><h3 id="2-搜索结果缓存"><a href="#2-搜索结果缓存" class="headerlink" title="2. 搜索结果缓存"></a>2. 搜索结果缓存</h3><p>实现搜索结果缓存机制：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 缓存搜索结果</span></span><br><span class="line"><span class="variable">$cacheKey</span> = <span class="string">&#x27;search_&#x27;</span> . <span class="title function_ invoke__">md5</span>(<span class="variable">$filterKeywords</span>);</span><br><span class="line"><span class="variable">$cachedResult</span> = <span class="variable language_">$this</span>-&gt;cache-&gt;<span class="title function_ invoke__">get</span>(<span class="variable">$cacheKey</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="variable">$cachedResult</span> !== <span class="literal">false</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="variable">$cachedResult</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 执行搜索</span></span><br><span class="line"><span class="variable">$result</span> = <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">performSearch</span>(<span class="variable">$filterKeywords</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 缓存结果</span></span><br><span class="line"><span class="variable language_">$this</span>-&gt;cache-&gt;<span class="title function_ invoke__">set</span>(<span class="variable">$cacheKey</span>, <span class="variable">$result</span>, <span class="number">3600</span>); <span class="comment">// 缓存1小时</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="variable">$result</span>;</span><br></pre></td></tr></table></figure><h2 id="兼容性考虑"><a href="#兼容性考虑" class="headerlink" title="兼容性考虑"></a>兼容性考虑</h2><h3 id="1-版本兼容"><a href="#1-版本兼容" class="headerlink" title="1. 版本兼容"></a>1. 版本兼容</h3><p>确保修改后的代码与ongwu版本兼容：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 检查ongwu版本</span></span><br><span class="line"><span class="keyword">if</span> (<span class="title function_ invoke__">version_compare</span>(ongwu_<span class="title class_">Common</span>::<span class="variable constant_">VERSION</span>, <span class="string">&#x27;1.2.0&#x27;</span>, <span class="string">&#x27;&gt;=&#x27;</span>)) &#123;</span><br><span class="line">    <span class="comment">// 新版本代码</span></span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="comment">// 旧版本兼容代码</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2-插件兼容"><a href="#2-插件兼容" class="headerlink" title="2. 插件兼容"></a>2. 插件兼容</h3><p>如果使用了其他搜索相关插件，需要确保兼容性：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 检查是否有其他搜索插件</span></span><br><span class="line"><span class="keyword">if</span> (<span class="title function_ invoke__">class_exists</span>(<span class="string">&#x27;Widget_Archive_Search&#x27;</span>)) &#123;</span><br><span class="line">    <span class="comment">// 使用插件提供的搜索功能</span></span><br><span class="line">    <span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">pluginSearch</span>(<span class="variable">$filterKeywords</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>通过修改ongwu源码，我们可以实现符号搜索功能，但需要注意：</p><ol><li><strong>安全性</strong>：使用<code>addslashes</code>或预处理语句防止SQL注入</li><li><strong>性能</strong>：添加适当的数据库索引和缓存机制</li><li><strong>兼容性</strong>：确保与ongwu版本和其他插件的兼容性</li><li><strong>维护性</strong>：记录修改内容，便于后续升级</li></ol><p>这样修改后，ongwu就能支持包含符号的搜索了，满足更复杂的搜索需求。</p><hr><p><em>注意：修改源码后，在ongwu升级时需要重新应用这些修改。建议将修改内容记录在文档中，或者创建补丁文件。</em></p>]]></content>
      
      
      <categories>
          
          <category> tutorial </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ongwu </tag>
            
            <tag> 搜索功能 </tag>
            
            <tag> 源码修改 </tag>
            
            <tag> 符号搜索 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>让ongwu支持搜索符号</title>
      <link href="/2025/01/09/7%20-%20%E5%89%AF%E6%9C%AC%20(11)%20-%20%E5%89%AF%E6%9C%AC/"/>
      <url>/2025/01/09/7%20-%20%E5%89%AF%E6%9C%AC%20(11)%20-%20%E5%89%AF%E6%9C%AC/</url>
      
        <content type="html"><![CDATA[<h1 id="让ongwu支持搜索符号"><a href="#让ongwu支持搜索符号" class="headerlink" title="让ongwu支持搜索符号"></a>让ongwu支持搜索符号</h1><h2 id="问题背景"><a href="#问题背景" class="headerlink" title="问题背景"></a>问题背景</h2><p>用过ongwu的应该都清楚它本身搜索是不支持符号的，一般都会过滤掉，只会保留文字字母数字进行搜索。这种过滤应该是出于安全考虑的，但如果你的需求需要搜索符号之类的东西，则可以通过修改源码的方式实现。</p><h2 id="修改原理"><a href="#修改原理" class="headerlink" title="修改原理"></a>修改原理</h2><p>ongwu的搜索功能是在<code>var/Widget/Archive.php</code>中实现的，所以需要修改两处代码：</p><h3 id="第一处：关键词过滤逻辑"><a href="#第一处：关键词过滤逻辑" class="headerlink" title="第一处：关键词过滤逻辑"></a>第一处：关键词过滤逻辑</h3><p>在<code>var/Widget/Archive.php</code>文件中找到以下代码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 原始代码</span></span><br><span class="line"><span class="variable">$filterKeywords</span> = <span class="variable language_">$this</span>-&gt;request-&gt;<span class="title function_ invoke__">get</span>(<span class="string">&#x27;keywords&#x27;</span>);</span><br><span class="line"><span class="variable">$filterKeywords</span> = <span class="title function_ invoke__">trim</span>(<span class="variable">$filterKeywords</span>);</span><br><span class="line"><span class="variable">$filterKeywords</span> = <span class="title function_ invoke__">str_replace</span>(<span class="keyword">array</span>(<span class="string">&#x27;+&#x27;</span>, <span class="string">&#x27;-&#x27;</span>, <span class="string">&#x27;&amp;&#x27;</span>, <span class="string">&#x27;|&#x27;</span>, <span class="string">&#x27;!&#x27;</span>, <span class="string">&#x27;(&#x27;</span>, <span class="string">&#x27;)&#x27;</span>, <span class="string">&#x27;&#123;&#x27;</span>, <span class="string">&#x27;&#125;&#x27;</span>, <span class="string">&#x27;[&#x27;</span>, <span class="string">&#x27;]&#x27;</span>, <span class="string">&#x27;^&#x27;</span>, <span class="string">&#x27;&quot;&#x27;</span>, <span class="string">&#x27;~&#x27;</span>, <span class="string">&#x27;*&#x27;</span>, <span class="string">&#x27;?&#x27;</span>, <span class="string">&#x27;:&#x27;</span>, <span class="string">&#x27;\\&#x27;</span>), <span class="string">&#x27;&#x27;</span>, <span class="variable">$filterKeywords</span>);</span><br></pre></td></tr></table></figure><p>修改为：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 修改后的代码</span></span><br><span class="line"><span class="variable">$filterKeywords</span> = <span class="variable language_">$this</span>-&gt;request-&gt;<span class="title function_ invoke__">get</span>(<span class="string">&#x27;keywords&#x27;</span>);</span><br><span class="line"><span class="variable">$filterKeywords</span> = <span class="title function_ invoke__">trim</span>(<span class="variable">$filterKeywords</span>);</span><br><span class="line"><span class="comment">// 注释掉或删除符号过滤代码</span></span><br><span class="line"><span class="comment">// $filterKeywords = str_replace(array(&#x27;+&#x27;, &#x27;-&#x27;, &#x27;&amp;&#x27;, &#x27;|&#x27;, &#x27;!&#x27;, &#x27;(&#x27;, &#x27;)&#x27;, &#x27;&#123;&#x27;, &#x27;&#125;&#x27;, &#x27;[&#x27;, &#x27;]&#x27;, &#x27;^&#x27;, &#x27;&quot;&#x27;, &#x27;~&#x27;, &#x27;*&#x27;, &#x27;?&#x27;, &#x27;:&#x27;, &#x27;\\&#x27;), &#x27;&#x27;, $filterKeywords);</span></span><br></pre></td></tr></table></figure><h3 id="第二处：SQL查询构建"><a href="#第二处：SQL查询构建" class="headerlink" title="第二处：SQL查询构建"></a>第二处：SQL查询构建</h3><p>找到构建SQL查询的部分：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 原始代码</span></span><br><span class="line"><span class="keyword">if</span> (!<span class="keyword">empty</span>(<span class="variable">$filterKeywords</span>)) &#123;</span><br><span class="line">    <span class="variable">$filterKeywords</span> = <span class="string">&#x27;%&#x27;</span> . <span class="variable">$filterKeywords</span> . <span class="string">&#x27;%&#x27;</span>;</span><br><span class="line">    <span class="variable language_">$this</span>-&gt;db-&gt;<span class="title function_ invoke__">where</span>(<span class="string">&#x27;table.contents.title LIKE ? OR table.contents.text LIKE ?&#x27;</span>, <span class="variable">$filterKeywords</span>, <span class="variable">$filterKeywords</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>修改为：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 修改后的代码</span></span><br><span class="line"><span class="keyword">if</span> (!<span class="keyword">empty</span>(<span class="variable">$filterKeywords</span>)) &#123;</span><br><span class="line">    <span class="comment">// 支持特殊符号的搜索</span></span><br><span class="line">    <span class="variable">$filterKeywords</span> = <span class="string">&#x27;%&#x27;</span> . <span class="title function_ invoke__">addslashes</span>(<span class="variable">$filterKeywords</span>) . <span class="string">&#x27;%&#x27;</span>;</span><br><span class="line">    <span class="variable language_">$this</span>-&gt;db-&gt;<span class="title function_ invoke__">where</span>(<span class="string">&#x27;table.contents.title LIKE ? OR table.contents.text LIKE ?&#x27;</span>, <span class="variable">$filterKeywords</span>, <span class="variable">$filterKeywords</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="完整修改示例"><a href="#完整修改示例" class="headerlink" title="完整修改示例"></a>完整修改示例</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">// var/Widget/Archive.php 修改示例</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Widget_Archive</span> <span class="keyword">extends</span> <span class="title">Widget_Abstract_Contents</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="comment">// ... 其他代码 ...</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 执行搜索</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">search</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;db-&gt;<span class="title function_ invoke__">select</span>(<span class="string">&#x27;table.contents.cid&#x27;</span>, <span class="string">&#x27;table.contents.title&#x27;</span>, <span class="string">&#x27;table.contents.slug&#x27;</span>, <span class="string">&#x27;table.contents.created&#x27;</span>, <span class="string">&#x27;table.contents.authorId&#x27;</span>, <span class="string">&#x27;table.contents.modified&#x27;</span>, <span class="string">&#x27;table.contents.type&#x27;</span>, <span class="string">&#x27;table.contents.status&#x27;</span>, <span class="string">&#x27;table.contents.password&#x27;</span>, <span class="string">&#x27;table.contents.commentsNum&#x27;</span>, <span class="string">&#x27;table.contents.order&#x27;</span>, <span class="string">&#x27;table.contents.template&#x27;</span>, <span class="string">&#x27;table.contents.allowComment&#x27;</span>, <span class="string">&#x27;table.contents.allowPing&#x27;</span>, <span class="string">&#x27;table.contents.allowFeed&#x27;</span>);</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;db-&gt;<span class="keyword">from</span>(<span class="string">&#x27;table.contents&#x27;</span>);</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 获取搜索关键词</span></span><br><span class="line">        <span class="variable">$filterKeywords</span> = <span class="variable language_">$this</span>-&gt;request-&gt;<span class="title function_ invoke__">get</span>(<span class="string">&#x27;keywords&#x27;</span>);</span><br><span class="line">        <span class="variable">$filterKeywords</span> = <span class="title function_ invoke__">trim</span>(<span class="variable">$filterKeywords</span>);</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 注释掉符号过滤，支持符号搜索</span></span><br><span class="line">        <span class="comment">// $filterKeywords = str_replace(array(&#x27;+&#x27;, &#x27;-&#x27;, &#x27;&amp;&#x27;, &#x27;|&#x27;, &#x27;!&#x27;, &#x27;(&#x27;, &#x27;)&#x27;, &#x27;&#123;&#x27;, &#x27;&#125;&#x27;, &#x27;[&#x27;, &#x27;]&#x27;, &#x27;^&#x27;, &#x27;&quot;&#x27;, &#x27;~&#x27;, &#x27;*&#x27;, &#x27;?&#x27;, &#x27;:&#x27;, &#x27;\\&#x27;), &#x27;&#x27;, $filterKeywords);</span></span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> (!<span class="keyword">empty</span>(<span class="variable">$filterKeywords</span>)) &#123;</span><br><span class="line">            <span class="comment">// 使用addslashes防止SQL注入，同时支持符号搜索</span></span><br><span class="line">            <span class="variable">$filterKeywords</span> = <span class="string">&#x27;%&#x27;</span> . <span class="title function_ invoke__">addslashes</span>(<span class="variable">$filterKeywords</span>) . <span class="string">&#x27;%&#x27;</span>;</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;db-&gt;<span class="title function_ invoke__">where</span>(<span class="string">&#x27;table.contents.title LIKE ? OR table.contents.text LIKE ?&#x27;</span>, <span class="variable">$filterKeywords</span>, <span class="variable">$filterKeywords</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// ... 其他搜索逻辑 ...</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="安全注意事项"><a href="#安全注意事项" class="headerlink" title="安全注意事项"></a>安全注意事项</h2><h3 id="1-SQL注入防护"><a href="#1-SQL注入防护" class="headerlink" title="1. SQL注入防护"></a>1. SQL注入防护</h3><p>虽然我们允许符号搜索，但必须确保SQL安全：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 使用addslashes或更好的方法处理输入</span></span><br><span class="line"><span class="variable">$filterKeywords</span> = <span class="title function_ invoke__">addslashes</span>(<span class="variable">$filterKeywords</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 或者使用预处理语句</span></span><br><span class="line"><span class="variable">$stmt</span> = <span class="variable language_">$this</span>-&gt;db-&gt;<span class="title function_ invoke__">prepare</span>(<span class="string">&#x27;SELECT * FROM table.contents WHERE title LIKE ? OR text LIKE ?&#x27;</span>);</span><br><span class="line"><span class="variable">$stmt</span>-&gt;<span class="title function_ invoke__">execute</span>(<span class="keyword">array</span>(<span class="variable">$filterKeywords</span>, <span class="variable">$filterKeywords</span>));</span><br></pre></td></tr></table></figure><h3 id="2-输入验证"><a href="#2-输入验证" class="headerlink" title="2. 输入验证"></a>2. 输入验证</h3><p>添加输入长度和内容验证：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 验证搜索关键词长度</span></span><br><span class="line"><span class="keyword">if</span> (<span class="title function_ invoke__">strlen</span>(<span class="variable">$filterKeywords</span>) &gt; <span class="number">100</span>) &#123;</span><br><span class="line">    <span class="variable">$filterKeywords</span> = <span class="title function_ invoke__">substr</span>(<span class="variable">$filterKeywords</span>, <span class="number">0</span>, <span class="number">100</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 验证是否包含恶意内容</span></span><br><span class="line"><span class="keyword">if</span> (<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/&lt;script|javascript|vbscript|onload|onerror/i&#x27;</span>, <span class="variable">$filterKeywords</span>)) &#123;</span><br><span class="line">    <span class="variable">$filterKeywords</span> = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="测试验证"><a href="#测试验证" class="headerlink" title="测试验证"></a>测试验证</h2><h3 id="1-基本符号测试"><a href="#1-基本符号测试" class="headerlink" title="1. 基本符号测试"></a>1. 基本符号测试</h3><p>测试以下符号是否能正常搜索：</p><ul><li><code>+</code> 加号</li><li><code>-</code> 减号</li><li><code>&amp;</code> 与号</li><li><code>|</code> 或号</li><li><code>!</code> 感叹号</li><li><code>()</code> 括号</li><li><code>[]</code> 方括号</li><li><code>&#123;&#125;</code> 花括号</li></ul><h3 id="2-复杂搜索测试"><a href="#2-复杂搜索测试" class="headerlink" title="2. 复杂搜索测试"></a>2. 复杂搜索测试</h3><p>测试复杂搜索表达式：</p><ul><li><code>PHP + MySQL</code></li><li><code>(前端|后端)开发</code></li><li><code>ongwu &amp; 插件</code></li><li><code>[重要] 更新</code></li></ul><h2 id="性能优化建议"><a href="#性能优化建议" class="headerlink" title="性能优化建议"></a>性能优化建议</h2><h3 id="1-索引优化"><a href="#1-索引优化" class="headerlink" title="1. 索引优化"></a>1. 索引优化</h3><p>为搜索字段添加数据库索引：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 为标题和内容字段添加全文索引</span></span><br><span class="line"><span class="keyword">ALTER TABLE</span> ongwu_contents <span class="keyword">ADD</span> FULLTEXT(title, text);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 或者添加普通索引</span></span><br><span class="line"><span class="keyword">CREATE</span> INDEX idx_contents_title <span class="keyword">ON</span> ongwu_contents(title);</span><br><span class="line"><span class="keyword">CREATE</span> INDEX idx_contents_text <span class="keyword">ON</span> ongwu_contents(text);</span><br></pre></td></tr></table></figure><h3 id="2-搜索结果缓存"><a href="#2-搜索结果缓存" class="headerlink" title="2. 搜索结果缓存"></a>2. 搜索结果缓存</h3><p>实现搜索结果缓存机制：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 缓存搜索结果</span></span><br><span class="line"><span class="variable">$cacheKey</span> = <span class="string">&#x27;search_&#x27;</span> . <span class="title function_ invoke__">md5</span>(<span class="variable">$filterKeywords</span>);</span><br><span class="line"><span class="variable">$cachedResult</span> = <span class="variable language_">$this</span>-&gt;cache-&gt;<span class="title function_ invoke__">get</span>(<span class="variable">$cacheKey</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="variable">$cachedResult</span> !== <span class="literal">false</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="variable">$cachedResult</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 执行搜索</span></span><br><span class="line"><span class="variable">$result</span> = <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">performSearch</span>(<span class="variable">$filterKeywords</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 缓存结果</span></span><br><span class="line"><span class="variable language_">$this</span>-&gt;cache-&gt;<span class="title function_ invoke__">set</span>(<span class="variable">$cacheKey</span>, <span class="variable">$result</span>, <span class="number">3600</span>); <span class="comment">// 缓存1小时</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="variable">$result</span>;</span><br></pre></td></tr></table></figure><h2 id="兼容性考虑"><a href="#兼容性考虑" class="headerlink" title="兼容性考虑"></a>兼容性考虑</h2><h3 id="1-版本兼容"><a href="#1-版本兼容" class="headerlink" title="1. 版本兼容"></a>1. 版本兼容</h3><p>确保修改后的代码与ongwu版本兼容：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 检查ongwu版本</span></span><br><span class="line"><span class="keyword">if</span> (<span class="title function_ invoke__">version_compare</span>(ongwu_<span class="title class_">Common</span>::<span class="variable constant_">VERSION</span>, <span class="string">&#x27;1.2.0&#x27;</span>, <span class="string">&#x27;&gt;=&#x27;</span>)) &#123;</span><br><span class="line">    <span class="comment">// 新版本代码</span></span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="comment">// 旧版本兼容代码</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2-插件兼容"><a href="#2-插件兼容" class="headerlink" title="2. 插件兼容"></a>2. 插件兼容</h3><p>如果使用了其他搜索相关插件，需要确保兼容性：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 检查是否有其他搜索插件</span></span><br><span class="line"><span class="keyword">if</span> (<span class="title function_ invoke__">class_exists</span>(<span class="string">&#x27;Widget_Archive_Search&#x27;</span>)) &#123;</span><br><span class="line">    <span class="comment">// 使用插件提供的搜索功能</span></span><br><span class="line">    <span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">pluginSearch</span>(<span class="variable">$filterKeywords</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>通过修改ongwu源码，我们可以实现符号搜索功能，但需要注意：</p><ol><li><strong>安全性</strong>：使用<code>addslashes</code>或预处理语句防止SQL注入</li><li><strong>性能</strong>：添加适当的数据库索引和缓存机制</li><li><strong>兼容性</strong>：确保与ongwu版本和其他插件的兼容性</li><li><strong>维护性</strong>：记录修改内容，便于后续升级</li></ol><p>这样修改后，ongwu就能支持包含符号的搜索了，满足更复杂的搜索需求。</p><hr><p><em>注意：修改源码后，在ongwu升级时需要重新应用这些修改。建议将修改内容记录在文档中，或者创建补丁文件。</em></p>]]></content>
      
      
      <categories>
          
          <category> tutorial </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ongwu </tag>
            
            <tag> 搜索功能 </tag>
            
            <tag> 源码修改 </tag>
            
            <tag> 符号搜索 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>让ongwu支持搜索符号</title>
      <link href="/2025/01/09/7%20-%20%E5%89%AF%E6%9C%AC%20(11)/"/>
      <url>/2025/01/09/7%20-%20%E5%89%AF%E6%9C%AC%20(11)/</url>
      
        <content type="html"><![CDATA[<h1 id="让ongwu支持搜索符号"><a href="#让ongwu支持搜索符号" class="headerlink" title="让ongwu支持搜索符号"></a>让ongwu支持搜索符号</h1><h2 id="问题背景"><a href="#问题背景" class="headerlink" title="问题背景"></a>问题背景</h2><p>用过ongwu的应该都清楚它本身搜索是不支持符号的，一般都会过滤掉，只会保留文字字母数字进行搜索。这种过滤应该是出于安全考虑的，但如果你的需求需要搜索符号之类的东西，则可以通过修改源码的方式实现。</p><h2 id="修改原理"><a href="#修改原理" class="headerlink" title="修改原理"></a>修改原理</h2><p>ongwu的搜索功能是在<code>var/Widget/Archive.php</code>中实现的，所以需要修改两处代码：</p><h3 id="第一处：关键词过滤逻辑"><a href="#第一处：关键词过滤逻辑" class="headerlink" title="第一处：关键词过滤逻辑"></a>第一处：关键词过滤逻辑</h3><p>在<code>var/Widget/Archive.php</code>文件中找到以下代码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 原始代码</span></span><br><span class="line"><span class="variable">$filterKeywords</span> = <span class="variable language_">$this</span>-&gt;request-&gt;<span class="title function_ invoke__">get</span>(<span class="string">&#x27;keywords&#x27;</span>);</span><br><span class="line"><span class="variable">$filterKeywords</span> = <span class="title function_ invoke__">trim</span>(<span class="variable">$filterKeywords</span>);</span><br><span class="line"><span class="variable">$filterKeywords</span> = <span class="title function_ invoke__">str_replace</span>(<span class="keyword">array</span>(<span class="string">&#x27;+&#x27;</span>, <span class="string">&#x27;-&#x27;</span>, <span class="string">&#x27;&amp;&#x27;</span>, <span class="string">&#x27;|&#x27;</span>, <span class="string">&#x27;!&#x27;</span>, <span class="string">&#x27;(&#x27;</span>, <span class="string">&#x27;)&#x27;</span>, <span class="string">&#x27;&#123;&#x27;</span>, <span class="string">&#x27;&#125;&#x27;</span>, <span class="string">&#x27;[&#x27;</span>, <span class="string">&#x27;]&#x27;</span>, <span class="string">&#x27;^&#x27;</span>, <span class="string">&#x27;&quot;&#x27;</span>, <span class="string">&#x27;~&#x27;</span>, <span class="string">&#x27;*&#x27;</span>, <span class="string">&#x27;?&#x27;</span>, <span class="string">&#x27;:&#x27;</span>, <span class="string">&#x27;\\&#x27;</span>), <span class="string">&#x27;&#x27;</span>, <span class="variable">$filterKeywords</span>);</span><br></pre></td></tr></table></figure><p>修改为：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 修改后的代码</span></span><br><span class="line"><span class="variable">$filterKeywords</span> = <span class="variable language_">$this</span>-&gt;request-&gt;<span class="title function_ invoke__">get</span>(<span class="string">&#x27;keywords&#x27;</span>);</span><br><span class="line"><span class="variable">$filterKeywords</span> = <span class="title function_ invoke__">trim</span>(<span class="variable">$filterKeywords</span>);</span><br><span class="line"><span class="comment">// 注释掉或删除符号过滤代码</span></span><br><span class="line"><span class="comment">// $filterKeywords = str_replace(array(&#x27;+&#x27;, &#x27;-&#x27;, &#x27;&amp;&#x27;, &#x27;|&#x27;, &#x27;!&#x27;, &#x27;(&#x27;, &#x27;)&#x27;, &#x27;&#123;&#x27;, &#x27;&#125;&#x27;, &#x27;[&#x27;, &#x27;]&#x27;, &#x27;^&#x27;, &#x27;&quot;&#x27;, &#x27;~&#x27;, &#x27;*&#x27;, &#x27;?&#x27;, &#x27;:&#x27;, &#x27;\\&#x27;), &#x27;&#x27;, $filterKeywords);</span></span><br></pre></td></tr></table></figure><h3 id="第二处：SQL查询构建"><a href="#第二处：SQL查询构建" class="headerlink" title="第二处：SQL查询构建"></a>第二处：SQL查询构建</h3><p>找到构建SQL查询的部分：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 原始代码</span></span><br><span class="line"><span class="keyword">if</span> (!<span class="keyword">empty</span>(<span class="variable">$filterKeywords</span>)) &#123;</span><br><span class="line">    <span class="variable">$filterKeywords</span> = <span class="string">&#x27;%&#x27;</span> . <span class="variable">$filterKeywords</span> . <span class="string">&#x27;%&#x27;</span>;</span><br><span class="line">    <span class="variable language_">$this</span>-&gt;db-&gt;<span class="title function_ invoke__">where</span>(<span class="string">&#x27;table.contents.title LIKE ? OR table.contents.text LIKE ?&#x27;</span>, <span class="variable">$filterKeywords</span>, <span class="variable">$filterKeywords</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>修改为：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 修改后的代码</span></span><br><span class="line"><span class="keyword">if</span> (!<span class="keyword">empty</span>(<span class="variable">$filterKeywords</span>)) &#123;</span><br><span class="line">    <span class="comment">// 支持特殊符号的搜索</span></span><br><span class="line">    <span class="variable">$filterKeywords</span> = <span class="string">&#x27;%&#x27;</span> . <span class="title function_ invoke__">addslashes</span>(<span class="variable">$filterKeywords</span>) . <span class="string">&#x27;%&#x27;</span>;</span><br><span class="line">    <span class="variable language_">$this</span>-&gt;db-&gt;<span class="title function_ invoke__">where</span>(<span class="string">&#x27;table.contents.title LIKE ? OR table.contents.text LIKE ?&#x27;</span>, <span class="variable">$filterKeywords</span>, <span class="variable">$filterKeywords</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="完整修改示例"><a href="#完整修改示例" class="headerlink" title="完整修改示例"></a>完整修改示例</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">// var/Widget/Archive.php 修改示例</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Widget_Archive</span> <span class="keyword">extends</span> <span class="title">Widget_Abstract_Contents</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="comment">// ... 其他代码 ...</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 执行搜索</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">search</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;db-&gt;<span class="title function_ invoke__">select</span>(<span class="string">&#x27;table.contents.cid&#x27;</span>, <span class="string">&#x27;table.contents.title&#x27;</span>, <span class="string">&#x27;table.contents.slug&#x27;</span>, <span class="string">&#x27;table.contents.created&#x27;</span>, <span class="string">&#x27;table.contents.authorId&#x27;</span>, <span class="string">&#x27;table.contents.modified&#x27;</span>, <span class="string">&#x27;table.contents.type&#x27;</span>, <span class="string">&#x27;table.contents.status&#x27;</span>, <span class="string">&#x27;table.contents.password&#x27;</span>, <span class="string">&#x27;table.contents.commentsNum&#x27;</span>, <span class="string">&#x27;table.contents.order&#x27;</span>, <span class="string">&#x27;table.contents.template&#x27;</span>, <span class="string">&#x27;table.contents.allowComment&#x27;</span>, <span class="string">&#x27;table.contents.allowPing&#x27;</span>, <span class="string">&#x27;table.contents.allowFeed&#x27;</span>);</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;db-&gt;<span class="keyword">from</span>(<span class="string">&#x27;table.contents&#x27;</span>);</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 获取搜索关键词</span></span><br><span class="line">        <span class="variable">$filterKeywords</span> = <span class="variable language_">$this</span>-&gt;request-&gt;<span class="title function_ invoke__">get</span>(<span class="string">&#x27;keywords&#x27;</span>);</span><br><span class="line">        <span class="variable">$filterKeywords</span> = <span class="title function_ invoke__">trim</span>(<span class="variable">$filterKeywords</span>);</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 注释掉符号过滤，支持符号搜索</span></span><br><span class="line">        <span class="comment">// $filterKeywords = str_replace(array(&#x27;+&#x27;, &#x27;-&#x27;, &#x27;&amp;&#x27;, &#x27;|&#x27;, &#x27;!&#x27;, &#x27;(&#x27;, &#x27;)&#x27;, &#x27;&#123;&#x27;, &#x27;&#125;&#x27;, &#x27;[&#x27;, &#x27;]&#x27;, &#x27;^&#x27;, &#x27;&quot;&#x27;, &#x27;~&#x27;, &#x27;*&#x27;, &#x27;?&#x27;, &#x27;:&#x27;, &#x27;\\&#x27;), &#x27;&#x27;, $filterKeywords);</span></span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> (!<span class="keyword">empty</span>(<span class="variable">$filterKeywords</span>)) &#123;</span><br><span class="line">            <span class="comment">// 使用addslashes防止SQL注入，同时支持符号搜索</span></span><br><span class="line">            <span class="variable">$filterKeywords</span> = <span class="string">&#x27;%&#x27;</span> . <span class="title function_ invoke__">addslashes</span>(<span class="variable">$filterKeywords</span>) . <span class="string">&#x27;%&#x27;</span>;</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;db-&gt;<span class="title function_ invoke__">where</span>(<span class="string">&#x27;table.contents.title LIKE ? OR table.contents.text LIKE ?&#x27;</span>, <span class="variable">$filterKeywords</span>, <span class="variable">$filterKeywords</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// ... 其他搜索逻辑 ...</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="安全注意事项"><a href="#安全注意事项" class="headerlink" title="安全注意事项"></a>安全注意事项</h2><h3 id="1-SQL注入防护"><a href="#1-SQL注入防护" class="headerlink" title="1. SQL注入防护"></a>1. SQL注入防护</h3><p>虽然我们允许符号搜索，但必须确保SQL安全：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 使用addslashes或更好的方法处理输入</span></span><br><span class="line"><span class="variable">$filterKeywords</span> = <span class="title function_ invoke__">addslashes</span>(<span class="variable">$filterKeywords</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 或者使用预处理语句</span></span><br><span class="line"><span class="variable">$stmt</span> = <span class="variable language_">$this</span>-&gt;db-&gt;<span class="title function_ invoke__">prepare</span>(<span class="string">&#x27;SELECT * FROM table.contents WHERE title LIKE ? OR text LIKE ?&#x27;</span>);</span><br><span class="line"><span class="variable">$stmt</span>-&gt;<span class="title function_ invoke__">execute</span>(<span class="keyword">array</span>(<span class="variable">$filterKeywords</span>, <span class="variable">$filterKeywords</span>));</span><br></pre></td></tr></table></figure><h3 id="2-输入验证"><a href="#2-输入验证" class="headerlink" title="2. 输入验证"></a>2. 输入验证</h3><p>添加输入长度和内容验证：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 验证搜索关键词长度</span></span><br><span class="line"><span class="keyword">if</span> (<span class="title function_ invoke__">strlen</span>(<span class="variable">$filterKeywords</span>) &gt; <span class="number">100</span>) &#123;</span><br><span class="line">    <span class="variable">$filterKeywords</span> = <span class="title function_ invoke__">substr</span>(<span class="variable">$filterKeywords</span>, <span class="number">0</span>, <span class="number">100</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 验证是否包含恶意内容</span></span><br><span class="line"><span class="keyword">if</span> (<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/&lt;script|javascript|vbscript|onload|onerror/i&#x27;</span>, <span class="variable">$filterKeywords</span>)) &#123;</span><br><span class="line">    <span class="variable">$filterKeywords</span> = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="测试验证"><a href="#测试验证" class="headerlink" title="测试验证"></a>测试验证</h2><h3 id="1-基本符号测试"><a href="#1-基本符号测试" class="headerlink" title="1. 基本符号测试"></a>1. 基本符号测试</h3><p>测试以下符号是否能正常搜索：</p><ul><li><code>+</code> 加号</li><li><code>-</code> 减号</li><li><code>&amp;</code> 与号</li><li><code>|</code> 或号</li><li><code>!</code> 感叹号</li><li><code>()</code> 括号</li><li><code>[]</code> 方括号</li><li><code>&#123;&#125;</code> 花括号</li></ul><h3 id="2-复杂搜索测试"><a href="#2-复杂搜索测试" class="headerlink" title="2. 复杂搜索测试"></a>2. 复杂搜索测试</h3><p>测试复杂搜索表达式：</p><ul><li><code>PHP + MySQL</code></li><li><code>(前端|后端)开发</code></li><li><code>ongwu &amp; 插件</code></li><li><code>[重要] 更新</code></li></ul><h2 id="性能优化建议"><a href="#性能优化建议" class="headerlink" title="性能优化建议"></a>性能优化建议</h2><h3 id="1-索引优化"><a href="#1-索引优化" class="headerlink" title="1. 索引优化"></a>1. 索引优化</h3><p>为搜索字段添加数据库索引：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 为标题和内容字段添加全文索引</span></span><br><span class="line"><span class="keyword">ALTER TABLE</span> ongwu_contents <span class="keyword">ADD</span> FULLTEXT(title, text);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 或者添加普通索引</span></span><br><span class="line"><span class="keyword">CREATE</span> INDEX idx_contents_title <span class="keyword">ON</span> ongwu_contents(title);</span><br><span class="line"><span class="keyword">CREATE</span> INDEX idx_contents_text <span class="keyword">ON</span> ongwu_contents(text);</span><br></pre></td></tr></table></figure><h3 id="2-搜索结果缓存"><a href="#2-搜索结果缓存" class="headerlink" title="2. 搜索结果缓存"></a>2. 搜索结果缓存</h3><p>实现搜索结果缓存机制：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 缓存搜索结果</span></span><br><span class="line"><span class="variable">$cacheKey</span> = <span class="string">&#x27;search_&#x27;</span> . <span class="title function_ invoke__">md5</span>(<span class="variable">$filterKeywords</span>);</span><br><span class="line"><span class="variable">$cachedResult</span> = <span class="variable language_">$this</span>-&gt;cache-&gt;<span class="title function_ invoke__">get</span>(<span class="variable">$cacheKey</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="variable">$cachedResult</span> !== <span class="literal">false</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="variable">$cachedResult</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 执行搜索</span></span><br><span class="line"><span class="variable">$result</span> = <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">performSearch</span>(<span class="variable">$filterKeywords</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 缓存结果</span></span><br><span class="line"><span class="variable language_">$this</span>-&gt;cache-&gt;<span class="title function_ invoke__">set</span>(<span class="variable">$cacheKey</span>, <span class="variable">$result</span>, <span class="number">3600</span>); <span class="comment">// 缓存1小时</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="variable">$result</span>;</span><br></pre></td></tr></table></figure><h2 id="兼容性考虑"><a href="#兼容性考虑" class="headerlink" title="兼容性考虑"></a>兼容性考虑</h2><h3 id="1-版本兼容"><a href="#1-版本兼容" class="headerlink" title="1. 版本兼容"></a>1. 版本兼容</h3><p>确保修改后的代码与ongwu版本兼容：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 检查ongwu版本</span></span><br><span class="line"><span class="keyword">if</span> (<span class="title function_ invoke__">version_compare</span>(ongwu_<span class="title class_">Common</span>::<span class="variable constant_">VERSION</span>, <span class="string">&#x27;1.2.0&#x27;</span>, <span class="string">&#x27;&gt;=&#x27;</span>)) &#123;</span><br><span class="line">    <span class="comment">// 新版本代码</span></span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="comment">// 旧版本兼容代码</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2-插件兼容"><a href="#2-插件兼容" class="headerlink" title="2. 插件兼容"></a>2. 插件兼容</h3><p>如果使用了其他搜索相关插件，需要确保兼容性：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 检查是否有其他搜索插件</span></span><br><span class="line"><span class="keyword">if</span> (<span class="title function_ invoke__">class_exists</span>(<span class="string">&#x27;Widget_Archive_Search&#x27;</span>)) &#123;</span><br><span class="line">    <span class="comment">// 使用插件提供的搜索功能</span></span><br><span class="line">    <span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">pluginSearch</span>(<span class="variable">$filterKeywords</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>通过修改ongwu源码，我们可以实现符号搜索功能，但需要注意：</p><ol><li><strong>安全性</strong>：使用<code>addslashes</code>或预处理语句防止SQL注入</li><li><strong>性能</strong>：添加适当的数据库索引和缓存机制</li><li><strong>兼容性</strong>：确保与ongwu版本和其他插件的兼容性</li><li><strong>维护性</strong>：记录修改内容，便于后续升级</li></ol><p>这样修改后，ongwu就能支持包含符号的搜索了，满足更复杂的搜索需求。</p><hr><p><em>注意：修改源码后，在ongwu升级时需要重新应用这些修改。建议将修改内容记录在文档中，或者创建补丁文件。</em></p>]]></content>
      
      
      <categories>
          
          <category> tutorial </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ongwu </tag>
            
            <tag> 搜索功能 </tag>
            
            <tag> 源码修改 </tag>
            
            <tag> 符号搜索 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>让ongwu支持搜索符号</title>
      <link href="/2025/01/09/7%20-%20%E5%89%AF%E6%9C%AC%20(12)%20-%20%E5%89%AF%E6%9C%AC/"/>
      <url>/2025/01/09/7%20-%20%E5%89%AF%E6%9C%AC%20(12)%20-%20%E5%89%AF%E6%9C%AC/</url>
      
        <content type="html"><![CDATA[<h1 id="让ongwu支持搜索符号"><a href="#让ongwu支持搜索符号" class="headerlink" title="让ongwu支持搜索符号"></a>让ongwu支持搜索符号</h1><h2 id="问题背景"><a href="#问题背景" class="headerlink" title="问题背景"></a>问题背景</h2><p>用过ongwu的应该都清楚它本身搜索是不支持符号的，一般都会过滤掉，只会保留文字字母数字进行搜索。这种过滤应该是出于安全考虑的，但如果你的需求需要搜索符号之类的东西，则可以通过修改源码的方式实现。</p><h2 id="修改原理"><a href="#修改原理" class="headerlink" title="修改原理"></a>修改原理</h2><p>ongwu的搜索功能是在<code>var/Widget/Archive.php</code>中实现的，所以需要修改两处代码：</p><h3 id="第一处：关键词过滤逻辑"><a href="#第一处：关键词过滤逻辑" class="headerlink" title="第一处：关键词过滤逻辑"></a>第一处：关键词过滤逻辑</h3><p>在<code>var/Widget/Archive.php</code>文件中找到以下代码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 原始代码</span></span><br><span class="line"><span class="variable">$filterKeywords</span> = <span class="variable language_">$this</span>-&gt;request-&gt;<span class="title function_ invoke__">get</span>(<span class="string">&#x27;keywords&#x27;</span>);</span><br><span class="line"><span class="variable">$filterKeywords</span> = <span class="title function_ invoke__">trim</span>(<span class="variable">$filterKeywords</span>);</span><br><span class="line"><span class="variable">$filterKeywords</span> = <span class="title function_ invoke__">str_replace</span>(<span class="keyword">array</span>(<span class="string">&#x27;+&#x27;</span>, <span class="string">&#x27;-&#x27;</span>, <span class="string">&#x27;&amp;&#x27;</span>, <span class="string">&#x27;|&#x27;</span>, <span class="string">&#x27;!&#x27;</span>, <span class="string">&#x27;(&#x27;</span>, <span class="string">&#x27;)&#x27;</span>, <span class="string">&#x27;&#123;&#x27;</span>, <span class="string">&#x27;&#125;&#x27;</span>, <span class="string">&#x27;[&#x27;</span>, <span class="string">&#x27;]&#x27;</span>, <span class="string">&#x27;^&#x27;</span>, <span class="string">&#x27;&quot;&#x27;</span>, <span class="string">&#x27;~&#x27;</span>, <span class="string">&#x27;*&#x27;</span>, <span class="string">&#x27;?&#x27;</span>, <span class="string">&#x27;:&#x27;</span>, <span class="string">&#x27;\\&#x27;</span>), <span class="string">&#x27;&#x27;</span>, <span class="variable">$filterKeywords</span>);</span><br></pre></td></tr></table></figure><p>修改为：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 修改后的代码</span></span><br><span class="line"><span class="variable">$filterKeywords</span> = <span class="variable language_">$this</span>-&gt;request-&gt;<span class="title function_ invoke__">get</span>(<span class="string">&#x27;keywords&#x27;</span>);</span><br><span class="line"><span class="variable">$filterKeywords</span> = <span class="title function_ invoke__">trim</span>(<span class="variable">$filterKeywords</span>);</span><br><span class="line"><span class="comment">// 注释掉或删除符号过滤代码</span></span><br><span class="line"><span class="comment">// $filterKeywords = str_replace(array(&#x27;+&#x27;, &#x27;-&#x27;, &#x27;&amp;&#x27;, &#x27;|&#x27;, &#x27;!&#x27;, &#x27;(&#x27;, &#x27;)&#x27;, &#x27;&#123;&#x27;, &#x27;&#125;&#x27;, &#x27;[&#x27;, &#x27;]&#x27;, &#x27;^&#x27;, &#x27;&quot;&#x27;, &#x27;~&#x27;, &#x27;*&#x27;, &#x27;?&#x27;, &#x27;:&#x27;, &#x27;\\&#x27;), &#x27;&#x27;, $filterKeywords);</span></span><br></pre></td></tr></table></figure><h3 id="第二处：SQL查询构建"><a href="#第二处：SQL查询构建" class="headerlink" title="第二处：SQL查询构建"></a>第二处：SQL查询构建</h3><p>找到构建SQL查询的部分：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 原始代码</span></span><br><span class="line"><span class="keyword">if</span> (!<span class="keyword">empty</span>(<span class="variable">$filterKeywords</span>)) &#123;</span><br><span class="line">    <span class="variable">$filterKeywords</span> = <span class="string">&#x27;%&#x27;</span> . <span class="variable">$filterKeywords</span> . <span class="string">&#x27;%&#x27;</span>;</span><br><span class="line">    <span class="variable language_">$this</span>-&gt;db-&gt;<span class="title function_ invoke__">where</span>(<span class="string">&#x27;table.contents.title LIKE ? OR table.contents.text LIKE ?&#x27;</span>, <span class="variable">$filterKeywords</span>, <span class="variable">$filterKeywords</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>修改为：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 修改后的代码</span></span><br><span class="line"><span class="keyword">if</span> (!<span class="keyword">empty</span>(<span class="variable">$filterKeywords</span>)) &#123;</span><br><span class="line">    <span class="comment">// 支持特殊符号的搜索</span></span><br><span class="line">    <span class="variable">$filterKeywords</span> = <span class="string">&#x27;%&#x27;</span> . <span class="title function_ invoke__">addslashes</span>(<span class="variable">$filterKeywords</span>) . <span class="string">&#x27;%&#x27;</span>;</span><br><span class="line">    <span class="variable language_">$this</span>-&gt;db-&gt;<span class="title function_ invoke__">where</span>(<span class="string">&#x27;table.contents.title LIKE ? OR table.contents.text LIKE ?&#x27;</span>, <span class="variable">$filterKeywords</span>, <span class="variable">$filterKeywords</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="完整修改示例"><a href="#完整修改示例" class="headerlink" title="完整修改示例"></a>完整修改示例</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">// var/Widget/Archive.php 修改示例</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Widget_Archive</span> <span class="keyword">extends</span> <span class="title">Widget_Abstract_Contents</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="comment">// ... 其他代码 ...</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 执行搜索</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">search</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;db-&gt;<span class="title function_ invoke__">select</span>(<span class="string">&#x27;table.contents.cid&#x27;</span>, <span class="string">&#x27;table.contents.title&#x27;</span>, <span class="string">&#x27;table.contents.slug&#x27;</span>, <span class="string">&#x27;table.contents.created&#x27;</span>, <span class="string">&#x27;table.contents.authorId&#x27;</span>, <span class="string">&#x27;table.contents.modified&#x27;</span>, <span class="string">&#x27;table.contents.type&#x27;</span>, <span class="string">&#x27;table.contents.status&#x27;</span>, <span class="string">&#x27;table.contents.password&#x27;</span>, <span class="string">&#x27;table.contents.commentsNum&#x27;</span>, <span class="string">&#x27;table.contents.order&#x27;</span>, <span class="string">&#x27;table.contents.template&#x27;</span>, <span class="string">&#x27;table.contents.allowComment&#x27;</span>, <span class="string">&#x27;table.contents.allowPing&#x27;</span>, <span class="string">&#x27;table.contents.allowFeed&#x27;</span>);</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;db-&gt;<span class="keyword">from</span>(<span class="string">&#x27;table.contents&#x27;</span>);</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 获取搜索关键词</span></span><br><span class="line">        <span class="variable">$filterKeywords</span> = <span class="variable language_">$this</span>-&gt;request-&gt;<span class="title function_ invoke__">get</span>(<span class="string">&#x27;keywords&#x27;</span>);</span><br><span class="line">        <span class="variable">$filterKeywords</span> = <span class="title function_ invoke__">trim</span>(<span class="variable">$filterKeywords</span>);</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 注释掉符号过滤，支持符号搜索</span></span><br><span class="line">        <span class="comment">// $filterKeywords = str_replace(array(&#x27;+&#x27;, &#x27;-&#x27;, &#x27;&amp;&#x27;, &#x27;|&#x27;, &#x27;!&#x27;, &#x27;(&#x27;, &#x27;)&#x27;, &#x27;&#123;&#x27;, &#x27;&#125;&#x27;, &#x27;[&#x27;, &#x27;]&#x27;, &#x27;^&#x27;, &#x27;&quot;&#x27;, &#x27;~&#x27;, &#x27;*&#x27;, &#x27;?&#x27;, &#x27;:&#x27;, &#x27;\\&#x27;), &#x27;&#x27;, $filterKeywords);</span></span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> (!<span class="keyword">empty</span>(<span class="variable">$filterKeywords</span>)) &#123;</span><br><span class="line">            <span class="comment">// 使用addslashes防止SQL注入，同时支持符号搜索</span></span><br><span class="line">            <span class="variable">$filterKeywords</span> = <span class="string">&#x27;%&#x27;</span> . <span class="title function_ invoke__">addslashes</span>(<span class="variable">$filterKeywords</span>) . <span class="string">&#x27;%&#x27;</span>;</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;db-&gt;<span class="title function_ invoke__">where</span>(<span class="string">&#x27;table.contents.title LIKE ? OR table.contents.text LIKE ?&#x27;</span>, <span class="variable">$filterKeywords</span>, <span class="variable">$filterKeywords</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// ... 其他搜索逻辑 ...</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="安全注意事项"><a href="#安全注意事项" class="headerlink" title="安全注意事项"></a>安全注意事项</h2><h3 id="1-SQL注入防护"><a href="#1-SQL注入防护" class="headerlink" title="1. SQL注入防护"></a>1. SQL注入防护</h3><p>虽然我们允许符号搜索，但必须确保SQL安全：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 使用addslashes或更好的方法处理输入</span></span><br><span class="line"><span class="variable">$filterKeywords</span> = <span class="title function_ invoke__">addslashes</span>(<span class="variable">$filterKeywords</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 或者使用预处理语句</span></span><br><span class="line"><span class="variable">$stmt</span> = <span class="variable language_">$this</span>-&gt;db-&gt;<span class="title function_ invoke__">prepare</span>(<span class="string">&#x27;SELECT * FROM table.contents WHERE title LIKE ? OR text LIKE ?&#x27;</span>);</span><br><span class="line"><span class="variable">$stmt</span>-&gt;<span class="title function_ invoke__">execute</span>(<span class="keyword">array</span>(<span class="variable">$filterKeywords</span>, <span class="variable">$filterKeywords</span>));</span><br></pre></td></tr></table></figure><h3 id="2-输入验证"><a href="#2-输入验证" class="headerlink" title="2. 输入验证"></a>2. 输入验证</h3><p>添加输入长度和内容验证：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 验证搜索关键词长度</span></span><br><span class="line"><span class="keyword">if</span> (<span class="title function_ invoke__">strlen</span>(<span class="variable">$filterKeywords</span>) &gt; <span class="number">100</span>) &#123;</span><br><span class="line">    <span class="variable">$filterKeywords</span> = <span class="title function_ invoke__">substr</span>(<span class="variable">$filterKeywords</span>, <span class="number">0</span>, <span class="number">100</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 验证是否包含恶意内容</span></span><br><span class="line"><span class="keyword">if</span> (<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/&lt;script|javascript|vbscript|onload|onerror/i&#x27;</span>, <span class="variable">$filterKeywords</span>)) &#123;</span><br><span class="line">    <span class="variable">$filterKeywords</span> = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="测试验证"><a href="#测试验证" class="headerlink" title="测试验证"></a>测试验证</h2><h3 id="1-基本符号测试"><a href="#1-基本符号测试" class="headerlink" title="1. 基本符号测试"></a>1. 基本符号测试</h3><p>测试以下符号是否能正常搜索：</p><ul><li><code>+</code> 加号</li><li><code>-</code> 减号</li><li><code>&amp;</code> 与号</li><li><code>|</code> 或号</li><li><code>!</code> 感叹号</li><li><code>()</code> 括号</li><li><code>[]</code> 方括号</li><li><code>&#123;&#125;</code> 花括号</li></ul><h3 id="2-复杂搜索测试"><a href="#2-复杂搜索测试" class="headerlink" title="2. 复杂搜索测试"></a>2. 复杂搜索测试</h3><p>测试复杂搜索表达式：</p><ul><li><code>PHP + MySQL</code></li><li><code>(前端|后端)开发</code></li><li><code>ongwu &amp; 插件</code></li><li><code>[重要] 更新</code></li></ul><h2 id="性能优化建议"><a href="#性能优化建议" class="headerlink" title="性能优化建议"></a>性能优化建议</h2><h3 id="1-索引优化"><a href="#1-索引优化" class="headerlink" title="1. 索引优化"></a>1. 索引优化</h3><p>为搜索字段添加数据库索引：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 为标题和内容字段添加全文索引</span></span><br><span class="line"><span class="keyword">ALTER TABLE</span> ongwu_contents <span class="keyword">ADD</span> FULLTEXT(title, text);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 或者添加普通索引</span></span><br><span class="line"><span class="keyword">CREATE</span> INDEX idx_contents_title <span class="keyword">ON</span> ongwu_contents(title);</span><br><span class="line"><span class="keyword">CREATE</span> INDEX idx_contents_text <span class="keyword">ON</span> ongwu_contents(text);</span><br></pre></td></tr></table></figure><h3 id="2-搜索结果缓存"><a href="#2-搜索结果缓存" class="headerlink" title="2. 搜索结果缓存"></a>2. 搜索结果缓存</h3><p>实现搜索结果缓存机制：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 缓存搜索结果</span></span><br><span class="line"><span class="variable">$cacheKey</span> = <span class="string">&#x27;search_&#x27;</span> . <span class="title function_ invoke__">md5</span>(<span class="variable">$filterKeywords</span>);</span><br><span class="line"><span class="variable">$cachedResult</span> = <span class="variable language_">$this</span>-&gt;cache-&gt;<span class="title function_ invoke__">get</span>(<span class="variable">$cacheKey</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="variable">$cachedResult</span> !== <span class="literal">false</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="variable">$cachedResult</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 执行搜索</span></span><br><span class="line"><span class="variable">$result</span> = <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">performSearch</span>(<span class="variable">$filterKeywords</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 缓存结果</span></span><br><span class="line"><span class="variable language_">$this</span>-&gt;cache-&gt;<span class="title function_ invoke__">set</span>(<span class="variable">$cacheKey</span>, <span class="variable">$result</span>, <span class="number">3600</span>); <span class="comment">// 缓存1小时</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="variable">$result</span>;</span><br></pre></td></tr></table></figure><h2 id="兼容性考虑"><a href="#兼容性考虑" class="headerlink" title="兼容性考虑"></a>兼容性考虑</h2><h3 id="1-版本兼容"><a href="#1-版本兼容" class="headerlink" title="1. 版本兼容"></a>1. 版本兼容</h3><p>确保修改后的代码与ongwu版本兼容：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 检查ongwu版本</span></span><br><span class="line"><span class="keyword">if</span> (<span class="title function_ invoke__">version_compare</span>(ongwu_<span class="title class_">Common</span>::<span class="variable constant_">VERSION</span>, <span class="string">&#x27;1.2.0&#x27;</span>, <span class="string">&#x27;&gt;=&#x27;</span>)) &#123;</span><br><span class="line">    <span class="comment">// 新版本代码</span></span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="comment">// 旧版本兼容代码</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2-插件兼容"><a href="#2-插件兼容" class="headerlink" title="2. 插件兼容"></a>2. 插件兼容</h3><p>如果使用了其他搜索相关插件，需要确保兼容性：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 检查是否有其他搜索插件</span></span><br><span class="line"><span class="keyword">if</span> (<span class="title function_ invoke__">class_exists</span>(<span class="string">&#x27;Widget_Archive_Search&#x27;</span>)) &#123;</span><br><span class="line">    <span class="comment">// 使用插件提供的搜索功能</span></span><br><span class="line">    <span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">pluginSearch</span>(<span class="variable">$filterKeywords</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>通过修改ongwu源码，我们可以实现符号搜索功能，但需要注意：</p><ol><li><strong>安全性</strong>：使用<code>addslashes</code>或预处理语句防止SQL注入</li><li><strong>性能</strong>：添加适当的数据库索引和缓存机制</li><li><strong>兼容性</strong>：确保与ongwu版本和其他插件的兼容性</li><li><strong>维护性</strong>：记录修改内容，便于后续升级</li></ol><p>这样修改后，ongwu就能支持包含符号的搜索了，满足更复杂的搜索需求。</p><hr><p><em>注意：修改源码后，在ongwu升级时需要重新应用这些修改。建议将修改内容记录在文档中，或者创建补丁文件。</em></p>]]></content>
      
      
      <categories>
          
          <category> tutorial </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ongwu </tag>
            
            <tag> 搜索功能 </tag>
            
            <tag> 源码修改 </tag>
            
            <tag> 符号搜索 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>让ongwu支持搜索符号</title>
      <link href="/2025/01/09/7%20-%20%E5%89%AF%E6%9C%AC%20(12)/"/>
      <url>/2025/01/09/7%20-%20%E5%89%AF%E6%9C%AC%20(12)/</url>
      
        <content type="html"><![CDATA[<h1 id="让ongwu支持搜索符号"><a href="#让ongwu支持搜索符号" class="headerlink" title="让ongwu支持搜索符号"></a>让ongwu支持搜索符号</h1><h2 id="问题背景"><a href="#问题背景" class="headerlink" title="问题背景"></a>问题背景</h2><p>用过ongwu的应该都清楚它本身搜索是不支持符号的，一般都会过滤掉，只会保留文字字母数字进行搜索。这种过滤应该是出于安全考虑的，但如果你的需求需要搜索符号之类的东西，则可以通过修改源码的方式实现。</p><h2 id="修改原理"><a href="#修改原理" class="headerlink" title="修改原理"></a>修改原理</h2><p>ongwu的搜索功能是在<code>var/Widget/Archive.php</code>中实现的，所以需要修改两处代码：</p><h3 id="第一处：关键词过滤逻辑"><a href="#第一处：关键词过滤逻辑" class="headerlink" title="第一处：关键词过滤逻辑"></a>第一处：关键词过滤逻辑</h3><p>在<code>var/Widget/Archive.php</code>文件中找到以下代码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 原始代码</span></span><br><span class="line"><span class="variable">$filterKeywords</span> = <span class="variable language_">$this</span>-&gt;request-&gt;<span class="title function_ invoke__">get</span>(<span class="string">&#x27;keywords&#x27;</span>);</span><br><span class="line"><span class="variable">$filterKeywords</span> = <span class="title function_ invoke__">trim</span>(<span class="variable">$filterKeywords</span>);</span><br><span class="line"><span class="variable">$filterKeywords</span> = <span class="title function_ invoke__">str_replace</span>(<span class="keyword">array</span>(<span class="string">&#x27;+&#x27;</span>, <span class="string">&#x27;-&#x27;</span>, <span class="string">&#x27;&amp;&#x27;</span>, <span class="string">&#x27;|&#x27;</span>, <span class="string">&#x27;!&#x27;</span>, <span class="string">&#x27;(&#x27;</span>, <span class="string">&#x27;)&#x27;</span>, <span class="string">&#x27;&#123;&#x27;</span>, <span class="string">&#x27;&#125;&#x27;</span>, <span class="string">&#x27;[&#x27;</span>, <span class="string">&#x27;]&#x27;</span>, <span class="string">&#x27;^&#x27;</span>, <span class="string">&#x27;&quot;&#x27;</span>, <span class="string">&#x27;~&#x27;</span>, <span class="string">&#x27;*&#x27;</span>, <span class="string">&#x27;?&#x27;</span>, <span class="string">&#x27;:&#x27;</span>, <span class="string">&#x27;\\&#x27;</span>), <span class="string">&#x27;&#x27;</span>, <span class="variable">$filterKeywords</span>);</span><br></pre></td></tr></table></figure><p>修改为：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 修改后的代码</span></span><br><span class="line"><span class="variable">$filterKeywords</span> = <span class="variable language_">$this</span>-&gt;request-&gt;<span class="title function_ invoke__">get</span>(<span class="string">&#x27;keywords&#x27;</span>);</span><br><span class="line"><span class="variable">$filterKeywords</span> = <span class="title function_ invoke__">trim</span>(<span class="variable">$filterKeywords</span>);</span><br><span class="line"><span class="comment">// 注释掉或删除符号过滤代码</span></span><br><span class="line"><span class="comment">// $filterKeywords = str_replace(array(&#x27;+&#x27;, &#x27;-&#x27;, &#x27;&amp;&#x27;, &#x27;|&#x27;, &#x27;!&#x27;, &#x27;(&#x27;, &#x27;)&#x27;, &#x27;&#123;&#x27;, &#x27;&#125;&#x27;, &#x27;[&#x27;, &#x27;]&#x27;, &#x27;^&#x27;, &#x27;&quot;&#x27;, &#x27;~&#x27;, &#x27;*&#x27;, &#x27;?&#x27;, &#x27;:&#x27;, &#x27;\\&#x27;), &#x27;&#x27;, $filterKeywords);</span></span><br></pre></td></tr></table></figure><h3 id="第二处：SQL查询构建"><a href="#第二处：SQL查询构建" class="headerlink" title="第二处：SQL查询构建"></a>第二处：SQL查询构建</h3><p>找到构建SQL查询的部分：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 原始代码</span></span><br><span class="line"><span class="keyword">if</span> (!<span class="keyword">empty</span>(<span class="variable">$filterKeywords</span>)) &#123;</span><br><span class="line">    <span class="variable">$filterKeywords</span> = <span class="string">&#x27;%&#x27;</span> . <span class="variable">$filterKeywords</span> . <span class="string">&#x27;%&#x27;</span>;</span><br><span class="line">    <span class="variable language_">$this</span>-&gt;db-&gt;<span class="title function_ invoke__">where</span>(<span class="string">&#x27;table.contents.title LIKE ? OR table.contents.text LIKE ?&#x27;</span>, <span class="variable">$filterKeywords</span>, <span class="variable">$filterKeywords</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>修改为：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 修改后的代码</span></span><br><span class="line"><span class="keyword">if</span> (!<span class="keyword">empty</span>(<span class="variable">$filterKeywords</span>)) &#123;</span><br><span class="line">    <span class="comment">// 支持特殊符号的搜索</span></span><br><span class="line">    <span class="variable">$filterKeywords</span> = <span class="string">&#x27;%&#x27;</span> . <span class="title function_ invoke__">addslashes</span>(<span class="variable">$filterKeywords</span>) . <span class="string">&#x27;%&#x27;</span>;</span><br><span class="line">    <span class="variable language_">$this</span>-&gt;db-&gt;<span class="title function_ invoke__">where</span>(<span class="string">&#x27;table.contents.title LIKE ? OR table.contents.text LIKE ?&#x27;</span>, <span class="variable">$filterKeywords</span>, <span class="variable">$filterKeywords</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="完整修改示例"><a href="#完整修改示例" class="headerlink" title="完整修改示例"></a>完整修改示例</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">// var/Widget/Archive.php 修改示例</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Widget_Archive</span> <span class="keyword">extends</span> <span class="title">Widget_Abstract_Contents</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="comment">// ... 其他代码 ...</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 执行搜索</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">search</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;db-&gt;<span class="title function_ invoke__">select</span>(<span class="string">&#x27;table.contents.cid&#x27;</span>, <span class="string">&#x27;table.contents.title&#x27;</span>, <span class="string">&#x27;table.contents.slug&#x27;</span>, <span class="string">&#x27;table.contents.created&#x27;</span>, <span class="string">&#x27;table.contents.authorId&#x27;</span>, <span class="string">&#x27;table.contents.modified&#x27;</span>, <span class="string">&#x27;table.contents.type&#x27;</span>, <span class="string">&#x27;table.contents.status&#x27;</span>, <span class="string">&#x27;table.contents.password&#x27;</span>, <span class="string">&#x27;table.contents.commentsNum&#x27;</span>, <span class="string">&#x27;table.contents.order&#x27;</span>, <span class="string">&#x27;table.contents.template&#x27;</span>, <span class="string">&#x27;table.contents.allowComment&#x27;</span>, <span class="string">&#x27;table.contents.allowPing&#x27;</span>, <span class="string">&#x27;table.contents.allowFeed&#x27;</span>);</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;db-&gt;<span class="keyword">from</span>(<span class="string">&#x27;table.contents&#x27;</span>);</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 获取搜索关键词</span></span><br><span class="line">        <span class="variable">$filterKeywords</span> = <span class="variable language_">$this</span>-&gt;request-&gt;<span class="title function_ invoke__">get</span>(<span class="string">&#x27;keywords&#x27;</span>);</span><br><span class="line">        <span class="variable">$filterKeywords</span> = <span class="title function_ invoke__">trim</span>(<span class="variable">$filterKeywords</span>);</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 注释掉符号过滤，支持符号搜索</span></span><br><span class="line">        <span class="comment">// $filterKeywords = str_replace(array(&#x27;+&#x27;, &#x27;-&#x27;, &#x27;&amp;&#x27;, &#x27;|&#x27;, &#x27;!&#x27;, &#x27;(&#x27;, &#x27;)&#x27;, &#x27;&#123;&#x27;, &#x27;&#125;&#x27;, &#x27;[&#x27;, &#x27;]&#x27;, &#x27;^&#x27;, &#x27;&quot;&#x27;, &#x27;~&#x27;, &#x27;*&#x27;, &#x27;?&#x27;, &#x27;:&#x27;, &#x27;\\&#x27;), &#x27;&#x27;, $filterKeywords);</span></span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> (!<span class="keyword">empty</span>(<span class="variable">$filterKeywords</span>)) &#123;</span><br><span class="line">            <span class="comment">// 使用addslashes防止SQL注入，同时支持符号搜索</span></span><br><span class="line">            <span class="variable">$filterKeywords</span> = <span class="string">&#x27;%&#x27;</span> . <span class="title function_ invoke__">addslashes</span>(<span class="variable">$filterKeywords</span>) . <span class="string">&#x27;%&#x27;</span>;</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;db-&gt;<span class="title function_ invoke__">where</span>(<span class="string">&#x27;table.contents.title LIKE ? OR table.contents.text LIKE ?&#x27;</span>, <span class="variable">$filterKeywords</span>, <span class="variable">$filterKeywords</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// ... 其他搜索逻辑 ...</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="安全注意事项"><a href="#安全注意事项" class="headerlink" title="安全注意事项"></a>安全注意事项</h2><h3 id="1-SQL注入防护"><a href="#1-SQL注入防护" class="headerlink" title="1. SQL注入防护"></a>1. SQL注入防护</h3><p>虽然我们允许符号搜索，但必须确保SQL安全：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 使用addslashes或更好的方法处理输入</span></span><br><span class="line"><span class="variable">$filterKeywords</span> = <span class="title function_ invoke__">addslashes</span>(<span class="variable">$filterKeywords</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 或者使用预处理语句</span></span><br><span class="line"><span class="variable">$stmt</span> = <span class="variable language_">$this</span>-&gt;db-&gt;<span class="title function_ invoke__">prepare</span>(<span class="string">&#x27;SELECT * FROM table.contents WHERE title LIKE ? OR text LIKE ?&#x27;</span>);</span><br><span class="line"><span class="variable">$stmt</span>-&gt;<span class="title function_ invoke__">execute</span>(<span class="keyword">array</span>(<span class="variable">$filterKeywords</span>, <span class="variable">$filterKeywords</span>));</span><br></pre></td></tr></table></figure><h3 id="2-输入验证"><a href="#2-输入验证" class="headerlink" title="2. 输入验证"></a>2. 输入验证</h3><p>添加输入长度和内容验证：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 验证搜索关键词长度</span></span><br><span class="line"><span class="keyword">if</span> (<span class="title function_ invoke__">strlen</span>(<span class="variable">$filterKeywords</span>) &gt; <span class="number">100</span>) &#123;</span><br><span class="line">    <span class="variable">$filterKeywords</span> = <span class="title function_ invoke__">substr</span>(<span class="variable">$filterKeywords</span>, <span class="number">0</span>, <span class="number">100</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 验证是否包含恶意内容</span></span><br><span class="line"><span class="keyword">if</span> (<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/&lt;script|javascript|vbscript|onload|onerror/i&#x27;</span>, <span class="variable">$filterKeywords</span>)) &#123;</span><br><span class="line">    <span class="variable">$filterKeywords</span> = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="测试验证"><a href="#测试验证" class="headerlink" title="测试验证"></a>测试验证</h2><h3 id="1-基本符号测试"><a href="#1-基本符号测试" class="headerlink" title="1. 基本符号测试"></a>1. 基本符号测试</h3><p>测试以下符号是否能正常搜索：</p><ul><li><code>+</code> 加号</li><li><code>-</code> 减号</li><li><code>&amp;</code> 与号</li><li><code>|</code> 或号</li><li><code>!</code> 感叹号</li><li><code>()</code> 括号</li><li><code>[]</code> 方括号</li><li><code>&#123;&#125;</code> 花括号</li></ul><h3 id="2-复杂搜索测试"><a href="#2-复杂搜索测试" class="headerlink" title="2. 复杂搜索测试"></a>2. 复杂搜索测试</h3><p>测试复杂搜索表达式：</p><ul><li><code>PHP + MySQL</code></li><li><code>(前端|后端)开发</code></li><li><code>ongwu &amp; 插件</code></li><li><code>[重要] 更新</code></li></ul><h2 id="性能优化建议"><a href="#性能优化建议" class="headerlink" title="性能优化建议"></a>性能优化建议</h2><h3 id="1-索引优化"><a href="#1-索引优化" class="headerlink" title="1. 索引优化"></a>1. 索引优化</h3><p>为搜索字段添加数据库索引：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 为标题和内容字段添加全文索引</span></span><br><span class="line"><span class="keyword">ALTER TABLE</span> ongwu_contents <span class="keyword">ADD</span> FULLTEXT(title, text);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 或者添加普通索引</span></span><br><span class="line"><span class="keyword">CREATE</span> INDEX idx_contents_title <span class="keyword">ON</span> ongwu_contents(title);</span><br><span class="line"><span class="keyword">CREATE</span> INDEX idx_contents_text <span class="keyword">ON</span> ongwu_contents(text);</span><br></pre></td></tr></table></figure><h3 id="2-搜索结果缓存"><a href="#2-搜索结果缓存" class="headerlink" title="2. 搜索结果缓存"></a>2. 搜索结果缓存</h3><p>实现搜索结果缓存机制：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 缓存搜索结果</span></span><br><span class="line"><span class="variable">$cacheKey</span> = <span class="string">&#x27;search_&#x27;</span> . <span class="title function_ invoke__">md5</span>(<span class="variable">$filterKeywords</span>);</span><br><span class="line"><span class="variable">$cachedResult</span> = <span class="variable language_">$this</span>-&gt;cache-&gt;<span class="title function_ invoke__">get</span>(<span class="variable">$cacheKey</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="variable">$cachedResult</span> !== <span class="literal">false</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="variable">$cachedResult</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 执行搜索</span></span><br><span class="line"><span class="variable">$result</span> = <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">performSearch</span>(<span class="variable">$filterKeywords</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 缓存结果</span></span><br><span class="line"><span class="variable language_">$this</span>-&gt;cache-&gt;<span class="title function_ invoke__">set</span>(<span class="variable">$cacheKey</span>, <span class="variable">$result</span>, <span class="number">3600</span>); <span class="comment">// 缓存1小时</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="variable">$result</span>;</span><br></pre></td></tr></table></figure><h2 id="兼容性考虑"><a href="#兼容性考虑" class="headerlink" title="兼容性考虑"></a>兼容性考虑</h2><h3 id="1-版本兼容"><a href="#1-版本兼容" class="headerlink" title="1. 版本兼容"></a>1. 版本兼容</h3><p>确保修改后的代码与ongwu版本兼容：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 检查ongwu版本</span></span><br><span class="line"><span class="keyword">if</span> (<span class="title function_ invoke__">version_compare</span>(ongwu_<span class="title class_">Common</span>::<span class="variable constant_">VERSION</span>, <span class="string">&#x27;1.2.0&#x27;</span>, <span class="string">&#x27;&gt;=&#x27;</span>)) &#123;</span><br><span class="line">    <span class="comment">// 新版本代码</span></span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="comment">// 旧版本兼容代码</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2-插件兼容"><a href="#2-插件兼容" class="headerlink" title="2. 插件兼容"></a>2. 插件兼容</h3><p>如果使用了其他搜索相关插件，需要确保兼容性：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 检查是否有其他搜索插件</span></span><br><span class="line"><span class="keyword">if</span> (<span class="title function_ invoke__">class_exists</span>(<span class="string">&#x27;Widget_Archive_Search&#x27;</span>)) &#123;</span><br><span class="line">    <span class="comment">// 使用插件提供的搜索功能</span></span><br><span class="line">    <span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">pluginSearch</span>(<span class="variable">$filterKeywords</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>通过修改ongwu源码，我们可以实现符号搜索功能，但需要注意：</p><ol><li><strong>安全性</strong>：使用<code>addslashes</code>或预处理语句防止SQL注入</li><li><strong>性能</strong>：添加适当的数据库索引和缓存机制</li><li><strong>兼容性</strong>：确保与ongwu版本和其他插件的兼容性</li><li><strong>维护性</strong>：记录修改内容，便于后续升级</li></ol><p>这样修改后，ongwu就能支持包含符号的搜索了，满足更复杂的搜索需求。</p><hr><p><em>注意：修改源码后，在ongwu升级时需要重新应用这些修改。建议将修改内容记录在文档中，或者创建补丁文件。</em></p>]]></content>
      
      
      <categories>
          
          <category> tutorial </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ongwu </tag>
            
            <tag> 搜索功能 </tag>
            
            <tag> 源码修改 </tag>
            
            <tag> 符号搜索 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>让ongwu支持搜索符号</title>
      <link href="/2025/01/09/7%20-%20%E5%89%AF%E6%9C%AC%20(13)%20-%20%E5%89%AF%E6%9C%AC/"/>
      <url>/2025/01/09/7%20-%20%E5%89%AF%E6%9C%AC%20(13)%20-%20%E5%89%AF%E6%9C%AC/</url>
      
        <content type="html"><![CDATA[<h1 id="让ongwu支持搜索符号"><a href="#让ongwu支持搜索符号" class="headerlink" title="让ongwu支持搜索符号"></a>让ongwu支持搜索符号</h1><h2 id="问题背景"><a href="#问题背景" class="headerlink" title="问题背景"></a>问题背景</h2><p>用过ongwu的应该都清楚它本身搜索是不支持符号的，一般都会过滤掉，只会保留文字字母数字进行搜索。这种过滤应该是出于安全考虑的，但如果你的需求需要搜索符号之类的东西，则可以通过修改源码的方式实现。</p><h2 id="修改原理"><a href="#修改原理" class="headerlink" title="修改原理"></a>修改原理</h2><p>ongwu的搜索功能是在<code>var/Widget/Archive.php</code>中实现的，所以需要修改两处代码：</p><h3 id="第一处：关键词过滤逻辑"><a href="#第一处：关键词过滤逻辑" class="headerlink" title="第一处：关键词过滤逻辑"></a>第一处：关键词过滤逻辑</h3><p>在<code>var/Widget/Archive.php</code>文件中找到以下代码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 原始代码</span></span><br><span class="line"><span class="variable">$filterKeywords</span> = <span class="variable language_">$this</span>-&gt;request-&gt;<span class="title function_ invoke__">get</span>(<span class="string">&#x27;keywords&#x27;</span>);</span><br><span class="line"><span class="variable">$filterKeywords</span> = <span class="title function_ invoke__">trim</span>(<span class="variable">$filterKeywords</span>);</span><br><span class="line"><span class="variable">$filterKeywords</span> = <span class="title function_ invoke__">str_replace</span>(<span class="keyword">array</span>(<span class="string">&#x27;+&#x27;</span>, <span class="string">&#x27;-&#x27;</span>, <span class="string">&#x27;&amp;&#x27;</span>, <span class="string">&#x27;|&#x27;</span>, <span class="string">&#x27;!&#x27;</span>, <span class="string">&#x27;(&#x27;</span>, <span class="string">&#x27;)&#x27;</span>, <span class="string">&#x27;&#123;&#x27;</span>, <span class="string">&#x27;&#125;&#x27;</span>, <span class="string">&#x27;[&#x27;</span>, <span class="string">&#x27;]&#x27;</span>, <span class="string">&#x27;^&#x27;</span>, <span class="string">&#x27;&quot;&#x27;</span>, <span class="string">&#x27;~&#x27;</span>, <span class="string">&#x27;*&#x27;</span>, <span class="string">&#x27;?&#x27;</span>, <span class="string">&#x27;:&#x27;</span>, <span class="string">&#x27;\\&#x27;</span>), <span class="string">&#x27;&#x27;</span>, <span class="variable">$filterKeywords</span>);</span><br></pre></td></tr></table></figure><p>修改为：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 修改后的代码</span></span><br><span class="line"><span class="variable">$filterKeywords</span> = <span class="variable language_">$this</span>-&gt;request-&gt;<span class="title function_ invoke__">get</span>(<span class="string">&#x27;keywords&#x27;</span>);</span><br><span class="line"><span class="variable">$filterKeywords</span> = <span class="title function_ invoke__">trim</span>(<span class="variable">$filterKeywords</span>);</span><br><span class="line"><span class="comment">// 注释掉或删除符号过滤代码</span></span><br><span class="line"><span class="comment">// $filterKeywords = str_replace(array(&#x27;+&#x27;, &#x27;-&#x27;, &#x27;&amp;&#x27;, &#x27;|&#x27;, &#x27;!&#x27;, &#x27;(&#x27;, &#x27;)&#x27;, &#x27;&#123;&#x27;, &#x27;&#125;&#x27;, &#x27;[&#x27;, &#x27;]&#x27;, &#x27;^&#x27;, &#x27;&quot;&#x27;, &#x27;~&#x27;, &#x27;*&#x27;, &#x27;?&#x27;, &#x27;:&#x27;, &#x27;\\&#x27;), &#x27;&#x27;, $filterKeywords);</span></span><br></pre></td></tr></table></figure><h3 id="第二处：SQL查询构建"><a href="#第二处：SQL查询构建" class="headerlink" title="第二处：SQL查询构建"></a>第二处：SQL查询构建</h3><p>找到构建SQL查询的部分：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 原始代码</span></span><br><span class="line"><span class="keyword">if</span> (!<span class="keyword">empty</span>(<span class="variable">$filterKeywords</span>)) &#123;</span><br><span class="line">    <span class="variable">$filterKeywords</span> = <span class="string">&#x27;%&#x27;</span> . <span class="variable">$filterKeywords</span> . <span class="string">&#x27;%&#x27;</span>;</span><br><span class="line">    <span class="variable language_">$this</span>-&gt;db-&gt;<span class="title function_ invoke__">where</span>(<span class="string">&#x27;table.contents.title LIKE ? OR table.contents.text LIKE ?&#x27;</span>, <span class="variable">$filterKeywords</span>, <span class="variable">$filterKeywords</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>修改为：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 修改后的代码</span></span><br><span class="line"><span class="keyword">if</span> (!<span class="keyword">empty</span>(<span class="variable">$filterKeywords</span>)) &#123;</span><br><span class="line">    <span class="comment">// 支持特殊符号的搜索</span></span><br><span class="line">    <span class="variable">$filterKeywords</span> = <span class="string">&#x27;%&#x27;</span> . <span class="title function_ invoke__">addslashes</span>(<span class="variable">$filterKeywords</span>) . <span class="string">&#x27;%&#x27;</span>;</span><br><span class="line">    <span class="variable language_">$this</span>-&gt;db-&gt;<span class="title function_ invoke__">where</span>(<span class="string">&#x27;table.contents.title LIKE ? OR table.contents.text LIKE ?&#x27;</span>, <span class="variable">$filterKeywords</span>, <span class="variable">$filterKeywords</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="完整修改示例"><a href="#完整修改示例" class="headerlink" title="完整修改示例"></a>完整修改示例</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">// var/Widget/Archive.php 修改示例</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Widget_Archive</span> <span class="keyword">extends</span> <span class="title">Widget_Abstract_Contents</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="comment">// ... 其他代码 ...</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 执行搜索</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">search</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;db-&gt;<span class="title function_ invoke__">select</span>(<span class="string">&#x27;table.contents.cid&#x27;</span>, <span class="string">&#x27;table.contents.title&#x27;</span>, <span class="string">&#x27;table.contents.slug&#x27;</span>, <span class="string">&#x27;table.contents.created&#x27;</span>, <span class="string">&#x27;table.contents.authorId&#x27;</span>, <span class="string">&#x27;table.contents.modified&#x27;</span>, <span class="string">&#x27;table.contents.type&#x27;</span>, <span class="string">&#x27;table.contents.status&#x27;</span>, <span class="string">&#x27;table.contents.password&#x27;</span>, <span class="string">&#x27;table.contents.commentsNum&#x27;</span>, <span class="string">&#x27;table.contents.order&#x27;</span>, <span class="string">&#x27;table.contents.template&#x27;</span>, <span class="string">&#x27;table.contents.allowComment&#x27;</span>, <span class="string">&#x27;table.contents.allowPing&#x27;</span>, <span class="string">&#x27;table.contents.allowFeed&#x27;</span>);</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;db-&gt;<span class="keyword">from</span>(<span class="string">&#x27;table.contents&#x27;</span>);</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 获取搜索关键词</span></span><br><span class="line">        <span class="variable">$filterKeywords</span> = <span class="variable language_">$this</span>-&gt;request-&gt;<span class="title function_ invoke__">get</span>(<span class="string">&#x27;keywords&#x27;</span>);</span><br><span class="line">        <span class="variable">$filterKeywords</span> = <span class="title function_ invoke__">trim</span>(<span class="variable">$filterKeywords</span>);</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 注释掉符号过滤，支持符号搜索</span></span><br><span class="line">        <span class="comment">// $filterKeywords = str_replace(array(&#x27;+&#x27;, &#x27;-&#x27;, &#x27;&amp;&#x27;, &#x27;|&#x27;, &#x27;!&#x27;, &#x27;(&#x27;, &#x27;)&#x27;, &#x27;&#123;&#x27;, &#x27;&#125;&#x27;, &#x27;[&#x27;, &#x27;]&#x27;, &#x27;^&#x27;, &#x27;&quot;&#x27;, &#x27;~&#x27;, &#x27;*&#x27;, &#x27;?&#x27;, &#x27;:&#x27;, &#x27;\\&#x27;), &#x27;&#x27;, $filterKeywords);</span></span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> (!<span class="keyword">empty</span>(<span class="variable">$filterKeywords</span>)) &#123;</span><br><span class="line">            <span class="comment">// 使用addslashes防止SQL注入，同时支持符号搜索</span></span><br><span class="line">            <span class="variable">$filterKeywords</span> = <span class="string">&#x27;%&#x27;</span> . <span class="title function_ invoke__">addslashes</span>(<span class="variable">$filterKeywords</span>) . <span class="string">&#x27;%&#x27;</span>;</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;db-&gt;<span class="title function_ invoke__">where</span>(<span class="string">&#x27;table.contents.title LIKE ? OR table.contents.text LIKE ?&#x27;</span>, <span class="variable">$filterKeywords</span>, <span class="variable">$filterKeywords</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// ... 其他搜索逻辑 ...</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="安全注意事项"><a href="#安全注意事项" class="headerlink" title="安全注意事项"></a>安全注意事项</h2><h3 id="1-SQL注入防护"><a href="#1-SQL注入防护" class="headerlink" title="1. SQL注入防护"></a>1. SQL注入防护</h3><p>虽然我们允许符号搜索，但必须确保SQL安全：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 使用addslashes或更好的方法处理输入</span></span><br><span class="line"><span class="variable">$filterKeywords</span> = <span class="title function_ invoke__">addslashes</span>(<span class="variable">$filterKeywords</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 或者使用预处理语句</span></span><br><span class="line"><span class="variable">$stmt</span> = <span class="variable language_">$this</span>-&gt;db-&gt;<span class="title function_ invoke__">prepare</span>(<span class="string">&#x27;SELECT * FROM table.contents WHERE title LIKE ? OR text LIKE ?&#x27;</span>);</span><br><span class="line"><span class="variable">$stmt</span>-&gt;<span class="title function_ invoke__">execute</span>(<span class="keyword">array</span>(<span class="variable">$filterKeywords</span>, <span class="variable">$filterKeywords</span>));</span><br></pre></td></tr></table></figure><h3 id="2-输入验证"><a href="#2-输入验证" class="headerlink" title="2. 输入验证"></a>2. 输入验证</h3><p>添加输入长度和内容验证：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 验证搜索关键词长度</span></span><br><span class="line"><span class="keyword">if</span> (<span class="title function_ invoke__">strlen</span>(<span class="variable">$filterKeywords</span>) &gt; <span class="number">100</span>) &#123;</span><br><span class="line">    <span class="variable">$filterKeywords</span> = <span class="title function_ invoke__">substr</span>(<span class="variable">$filterKeywords</span>, <span class="number">0</span>, <span class="number">100</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 验证是否包含恶意内容</span></span><br><span class="line"><span class="keyword">if</span> (<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/&lt;script|javascript|vbscript|onload|onerror/i&#x27;</span>, <span class="variable">$filterKeywords</span>)) &#123;</span><br><span class="line">    <span class="variable">$filterKeywords</span> = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="测试验证"><a href="#测试验证" class="headerlink" title="测试验证"></a>测试验证</h2><h3 id="1-基本符号测试"><a href="#1-基本符号测试" class="headerlink" title="1. 基本符号测试"></a>1. 基本符号测试</h3><p>测试以下符号是否能正常搜索：</p><ul><li><code>+</code> 加号</li><li><code>-</code> 减号</li><li><code>&amp;</code> 与号</li><li><code>|</code> 或号</li><li><code>!</code> 感叹号</li><li><code>()</code> 括号</li><li><code>[]</code> 方括号</li><li><code>&#123;&#125;</code> 花括号</li></ul><h3 id="2-复杂搜索测试"><a href="#2-复杂搜索测试" class="headerlink" title="2. 复杂搜索测试"></a>2. 复杂搜索测试</h3><p>测试复杂搜索表达式：</p><ul><li><code>PHP + MySQL</code></li><li><code>(前端|后端)开发</code></li><li><code>ongwu &amp; 插件</code></li><li><code>[重要] 更新</code></li></ul><h2 id="性能优化建议"><a href="#性能优化建议" class="headerlink" title="性能优化建议"></a>性能优化建议</h2><h3 id="1-索引优化"><a href="#1-索引优化" class="headerlink" title="1. 索引优化"></a>1. 索引优化</h3><p>为搜索字段添加数据库索引：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 为标题和内容字段添加全文索引</span></span><br><span class="line"><span class="keyword">ALTER TABLE</span> ongwu_contents <span class="keyword">ADD</span> FULLTEXT(title, text);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 或者添加普通索引</span></span><br><span class="line"><span class="keyword">CREATE</span> INDEX idx_contents_title <span class="keyword">ON</span> ongwu_contents(title);</span><br><span class="line"><span class="keyword">CREATE</span> INDEX idx_contents_text <span class="keyword">ON</span> ongwu_contents(text);</span><br></pre></td></tr></table></figure><h3 id="2-搜索结果缓存"><a href="#2-搜索结果缓存" class="headerlink" title="2. 搜索结果缓存"></a>2. 搜索结果缓存</h3><p>实现搜索结果缓存机制：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 缓存搜索结果</span></span><br><span class="line"><span class="variable">$cacheKey</span> = <span class="string">&#x27;search_&#x27;</span> . <span class="title function_ invoke__">md5</span>(<span class="variable">$filterKeywords</span>);</span><br><span class="line"><span class="variable">$cachedResult</span> = <span class="variable language_">$this</span>-&gt;cache-&gt;<span class="title function_ invoke__">get</span>(<span class="variable">$cacheKey</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="variable">$cachedResult</span> !== <span class="literal">false</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="variable">$cachedResult</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 执行搜索</span></span><br><span class="line"><span class="variable">$result</span> = <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">performSearch</span>(<span class="variable">$filterKeywords</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 缓存结果</span></span><br><span class="line"><span class="variable language_">$this</span>-&gt;cache-&gt;<span class="title function_ invoke__">set</span>(<span class="variable">$cacheKey</span>, <span class="variable">$result</span>, <span class="number">3600</span>); <span class="comment">// 缓存1小时</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="variable">$result</span>;</span><br></pre></td></tr></table></figure><h2 id="兼容性考虑"><a href="#兼容性考虑" class="headerlink" title="兼容性考虑"></a>兼容性考虑</h2><h3 id="1-版本兼容"><a href="#1-版本兼容" class="headerlink" title="1. 版本兼容"></a>1. 版本兼容</h3><p>确保修改后的代码与ongwu版本兼容：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 检查ongwu版本</span></span><br><span class="line"><span class="keyword">if</span> (<span class="title function_ invoke__">version_compare</span>(ongwu_<span class="title class_">Common</span>::<span class="variable constant_">VERSION</span>, <span class="string">&#x27;1.2.0&#x27;</span>, <span class="string">&#x27;&gt;=&#x27;</span>)) &#123;</span><br><span class="line">    <span class="comment">// 新版本代码</span></span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="comment">// 旧版本兼容代码</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2-插件兼容"><a href="#2-插件兼容" class="headerlink" title="2. 插件兼容"></a>2. 插件兼容</h3><p>如果使用了其他搜索相关插件，需要确保兼容性：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 检查是否有其他搜索插件</span></span><br><span class="line"><span class="keyword">if</span> (<span class="title function_ invoke__">class_exists</span>(<span class="string">&#x27;Widget_Archive_Search&#x27;</span>)) &#123;</span><br><span class="line">    <span class="comment">// 使用插件提供的搜索功能</span></span><br><span class="line">    <span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">pluginSearch</span>(<span class="variable">$filterKeywords</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>通过修改ongwu源码，我们可以实现符号搜索功能，但需要注意：</p><ol><li><strong>安全性</strong>：使用<code>addslashes</code>或预处理语句防止SQL注入</li><li><strong>性能</strong>：添加适当的数据库索引和缓存机制</li><li><strong>兼容性</strong>：确保与ongwu版本和其他插件的兼容性</li><li><strong>维护性</strong>：记录修改内容，便于后续升级</li></ol><p>这样修改后，ongwu就能支持包含符号的搜索了，满足更复杂的搜索需求。</p><hr><p><em>注意：修改源码后，在ongwu升级时需要重新应用这些修改。建议将修改内容记录在文档中，或者创建补丁文件。</em></p>]]></content>
      
      
      <categories>
          
          <category> tutorial </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ongwu </tag>
            
            <tag> 搜索功能 </tag>
            
            <tag> 源码修改 </tag>
            
            <tag> 符号搜索 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>让ongwu支持搜索符号</title>
      <link href="/2025/01/09/7%20-%20%E5%89%AF%E6%9C%AC%20(13)/"/>
      <url>/2025/01/09/7%20-%20%E5%89%AF%E6%9C%AC%20(13)/</url>
      
        <content type="html"><![CDATA[<h1 id="让ongwu支持搜索符号"><a href="#让ongwu支持搜索符号" class="headerlink" title="让ongwu支持搜索符号"></a>让ongwu支持搜索符号</h1><h2 id="问题背景"><a href="#问题背景" class="headerlink" title="问题背景"></a>问题背景</h2><p>用过ongwu的应该都清楚它本身搜索是不支持符号的，一般都会过滤掉，只会保留文字字母数字进行搜索。这种过滤应该是出于安全考虑的，但如果你的需求需要搜索符号之类的东西，则可以通过修改源码的方式实现。</p><h2 id="修改原理"><a href="#修改原理" class="headerlink" title="修改原理"></a>修改原理</h2><p>ongwu的搜索功能是在<code>var/Widget/Archive.php</code>中实现的，所以需要修改两处代码：</p><h3 id="第一处：关键词过滤逻辑"><a href="#第一处：关键词过滤逻辑" class="headerlink" title="第一处：关键词过滤逻辑"></a>第一处：关键词过滤逻辑</h3><p>在<code>var/Widget/Archive.php</code>文件中找到以下代码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 原始代码</span></span><br><span class="line"><span class="variable">$filterKeywords</span> = <span class="variable language_">$this</span>-&gt;request-&gt;<span class="title function_ invoke__">get</span>(<span class="string">&#x27;keywords&#x27;</span>);</span><br><span class="line"><span class="variable">$filterKeywords</span> = <span class="title function_ invoke__">trim</span>(<span class="variable">$filterKeywords</span>);</span><br><span class="line"><span class="variable">$filterKeywords</span> = <span class="title function_ invoke__">str_replace</span>(<span class="keyword">array</span>(<span class="string">&#x27;+&#x27;</span>, <span class="string">&#x27;-&#x27;</span>, <span class="string">&#x27;&amp;&#x27;</span>, <span class="string">&#x27;|&#x27;</span>, <span class="string">&#x27;!&#x27;</span>, <span class="string">&#x27;(&#x27;</span>, <span class="string">&#x27;)&#x27;</span>, <span class="string">&#x27;&#123;&#x27;</span>, <span class="string">&#x27;&#125;&#x27;</span>, <span class="string">&#x27;[&#x27;</span>, <span class="string">&#x27;]&#x27;</span>, <span class="string">&#x27;^&#x27;</span>, <span class="string">&#x27;&quot;&#x27;</span>, <span class="string">&#x27;~&#x27;</span>, <span class="string">&#x27;*&#x27;</span>, <span class="string">&#x27;?&#x27;</span>, <span class="string">&#x27;:&#x27;</span>, <span class="string">&#x27;\\&#x27;</span>), <span class="string">&#x27;&#x27;</span>, <span class="variable">$filterKeywords</span>);</span><br></pre></td></tr></table></figure><p>修改为：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 修改后的代码</span></span><br><span class="line"><span class="variable">$filterKeywords</span> = <span class="variable language_">$this</span>-&gt;request-&gt;<span class="title function_ invoke__">get</span>(<span class="string">&#x27;keywords&#x27;</span>);</span><br><span class="line"><span class="variable">$filterKeywords</span> = <span class="title function_ invoke__">trim</span>(<span class="variable">$filterKeywords</span>);</span><br><span class="line"><span class="comment">// 注释掉或删除符号过滤代码</span></span><br><span class="line"><span class="comment">// $filterKeywords = str_replace(array(&#x27;+&#x27;, &#x27;-&#x27;, &#x27;&amp;&#x27;, &#x27;|&#x27;, &#x27;!&#x27;, &#x27;(&#x27;, &#x27;)&#x27;, &#x27;&#123;&#x27;, &#x27;&#125;&#x27;, &#x27;[&#x27;, &#x27;]&#x27;, &#x27;^&#x27;, &#x27;&quot;&#x27;, &#x27;~&#x27;, &#x27;*&#x27;, &#x27;?&#x27;, &#x27;:&#x27;, &#x27;\\&#x27;), &#x27;&#x27;, $filterKeywords);</span></span><br></pre></td></tr></table></figure><h3 id="第二处：SQL查询构建"><a href="#第二处：SQL查询构建" class="headerlink" title="第二处：SQL查询构建"></a>第二处：SQL查询构建</h3><p>找到构建SQL查询的部分：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 原始代码</span></span><br><span class="line"><span class="keyword">if</span> (!<span class="keyword">empty</span>(<span class="variable">$filterKeywords</span>)) &#123;</span><br><span class="line">    <span class="variable">$filterKeywords</span> = <span class="string">&#x27;%&#x27;</span> . <span class="variable">$filterKeywords</span> . <span class="string">&#x27;%&#x27;</span>;</span><br><span class="line">    <span class="variable language_">$this</span>-&gt;db-&gt;<span class="title function_ invoke__">where</span>(<span class="string">&#x27;table.contents.title LIKE ? OR table.contents.text LIKE ?&#x27;</span>, <span class="variable">$filterKeywords</span>, <span class="variable">$filterKeywords</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>修改为：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 修改后的代码</span></span><br><span class="line"><span class="keyword">if</span> (!<span class="keyword">empty</span>(<span class="variable">$filterKeywords</span>)) &#123;</span><br><span class="line">    <span class="comment">// 支持特殊符号的搜索</span></span><br><span class="line">    <span class="variable">$filterKeywords</span> = <span class="string">&#x27;%&#x27;</span> . <span class="title function_ invoke__">addslashes</span>(<span class="variable">$filterKeywords</span>) . <span class="string">&#x27;%&#x27;</span>;</span><br><span class="line">    <span class="variable language_">$this</span>-&gt;db-&gt;<span class="title function_ invoke__">where</span>(<span class="string">&#x27;table.contents.title LIKE ? OR table.contents.text LIKE ?&#x27;</span>, <span class="variable">$filterKeywords</span>, <span class="variable">$filterKeywords</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="完整修改示例"><a href="#完整修改示例" class="headerlink" title="完整修改示例"></a>完整修改示例</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">// var/Widget/Archive.php 修改示例</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Widget_Archive</span> <span class="keyword">extends</span> <span class="title">Widget_Abstract_Contents</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="comment">// ... 其他代码 ...</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 执行搜索</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">search</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;db-&gt;<span class="title function_ invoke__">select</span>(<span class="string">&#x27;table.contents.cid&#x27;</span>, <span class="string">&#x27;table.contents.title&#x27;</span>, <span class="string">&#x27;table.contents.slug&#x27;</span>, <span class="string">&#x27;table.contents.created&#x27;</span>, <span class="string">&#x27;table.contents.authorId&#x27;</span>, <span class="string">&#x27;table.contents.modified&#x27;</span>, <span class="string">&#x27;table.contents.type&#x27;</span>, <span class="string">&#x27;table.contents.status&#x27;</span>, <span class="string">&#x27;table.contents.password&#x27;</span>, <span class="string">&#x27;table.contents.commentsNum&#x27;</span>, <span class="string">&#x27;table.contents.order&#x27;</span>, <span class="string">&#x27;table.contents.template&#x27;</span>, <span class="string">&#x27;table.contents.allowComment&#x27;</span>, <span class="string">&#x27;table.contents.allowPing&#x27;</span>, <span class="string">&#x27;table.contents.allowFeed&#x27;</span>);</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;db-&gt;<span class="keyword">from</span>(<span class="string">&#x27;table.contents&#x27;</span>);</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 获取搜索关键词</span></span><br><span class="line">        <span class="variable">$filterKeywords</span> = <span class="variable language_">$this</span>-&gt;request-&gt;<span class="title function_ invoke__">get</span>(<span class="string">&#x27;keywords&#x27;</span>);</span><br><span class="line">        <span class="variable">$filterKeywords</span> = <span class="title function_ invoke__">trim</span>(<span class="variable">$filterKeywords</span>);</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 注释掉符号过滤，支持符号搜索</span></span><br><span class="line">        <span class="comment">// $filterKeywords = str_replace(array(&#x27;+&#x27;, &#x27;-&#x27;, &#x27;&amp;&#x27;, &#x27;|&#x27;, &#x27;!&#x27;, &#x27;(&#x27;, &#x27;)&#x27;, &#x27;&#123;&#x27;, &#x27;&#125;&#x27;, &#x27;[&#x27;, &#x27;]&#x27;, &#x27;^&#x27;, &#x27;&quot;&#x27;, &#x27;~&#x27;, &#x27;*&#x27;, &#x27;?&#x27;, &#x27;:&#x27;, &#x27;\\&#x27;), &#x27;&#x27;, $filterKeywords);</span></span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> (!<span class="keyword">empty</span>(<span class="variable">$filterKeywords</span>)) &#123;</span><br><span class="line">            <span class="comment">// 使用addslashes防止SQL注入，同时支持符号搜索</span></span><br><span class="line">            <span class="variable">$filterKeywords</span> = <span class="string">&#x27;%&#x27;</span> . <span class="title function_ invoke__">addslashes</span>(<span class="variable">$filterKeywords</span>) . <span class="string">&#x27;%&#x27;</span>;</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;db-&gt;<span class="title function_ invoke__">where</span>(<span class="string">&#x27;table.contents.title LIKE ? OR table.contents.text LIKE ?&#x27;</span>, <span class="variable">$filterKeywords</span>, <span class="variable">$filterKeywords</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// ... 其他搜索逻辑 ...</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="安全注意事项"><a href="#安全注意事项" class="headerlink" title="安全注意事项"></a>安全注意事项</h2><h3 id="1-SQL注入防护"><a href="#1-SQL注入防护" class="headerlink" title="1. SQL注入防护"></a>1. SQL注入防护</h3><p>虽然我们允许符号搜索，但必须确保SQL安全：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 使用addslashes或更好的方法处理输入</span></span><br><span class="line"><span class="variable">$filterKeywords</span> = <span class="title function_ invoke__">addslashes</span>(<span class="variable">$filterKeywords</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 或者使用预处理语句</span></span><br><span class="line"><span class="variable">$stmt</span> = <span class="variable language_">$this</span>-&gt;db-&gt;<span class="title function_ invoke__">prepare</span>(<span class="string">&#x27;SELECT * FROM table.contents WHERE title LIKE ? OR text LIKE ?&#x27;</span>);</span><br><span class="line"><span class="variable">$stmt</span>-&gt;<span class="title function_ invoke__">execute</span>(<span class="keyword">array</span>(<span class="variable">$filterKeywords</span>, <span class="variable">$filterKeywords</span>));</span><br></pre></td></tr></table></figure><h3 id="2-输入验证"><a href="#2-输入验证" class="headerlink" title="2. 输入验证"></a>2. 输入验证</h3><p>添加输入长度和内容验证：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 验证搜索关键词长度</span></span><br><span class="line"><span class="keyword">if</span> (<span class="title function_ invoke__">strlen</span>(<span class="variable">$filterKeywords</span>) &gt; <span class="number">100</span>) &#123;</span><br><span class="line">    <span class="variable">$filterKeywords</span> = <span class="title function_ invoke__">substr</span>(<span class="variable">$filterKeywords</span>, <span class="number">0</span>, <span class="number">100</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 验证是否包含恶意内容</span></span><br><span class="line"><span class="keyword">if</span> (<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/&lt;script|javascript|vbscript|onload|onerror/i&#x27;</span>, <span class="variable">$filterKeywords</span>)) &#123;</span><br><span class="line">    <span class="variable">$filterKeywords</span> = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="测试验证"><a href="#测试验证" class="headerlink" title="测试验证"></a>测试验证</h2><h3 id="1-基本符号测试"><a href="#1-基本符号测试" class="headerlink" title="1. 基本符号测试"></a>1. 基本符号测试</h3><p>测试以下符号是否能正常搜索：</p><ul><li><code>+</code> 加号</li><li><code>-</code> 减号</li><li><code>&amp;</code> 与号</li><li><code>|</code> 或号</li><li><code>!</code> 感叹号</li><li><code>()</code> 括号</li><li><code>[]</code> 方括号</li><li><code>&#123;&#125;</code> 花括号</li></ul><h3 id="2-复杂搜索测试"><a href="#2-复杂搜索测试" class="headerlink" title="2. 复杂搜索测试"></a>2. 复杂搜索测试</h3><p>测试复杂搜索表达式：</p><ul><li><code>PHP + MySQL</code></li><li><code>(前端|后端)开发</code></li><li><code>ongwu &amp; 插件</code></li><li><code>[重要] 更新</code></li></ul><h2 id="性能优化建议"><a href="#性能优化建议" class="headerlink" title="性能优化建议"></a>性能优化建议</h2><h3 id="1-索引优化"><a href="#1-索引优化" class="headerlink" title="1. 索引优化"></a>1. 索引优化</h3><p>为搜索字段添加数据库索引：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 为标题和内容字段添加全文索引</span></span><br><span class="line"><span class="keyword">ALTER TABLE</span> ongwu_contents <span class="keyword">ADD</span> FULLTEXT(title, text);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 或者添加普通索引</span></span><br><span class="line"><span class="keyword">CREATE</span> INDEX idx_contents_title <span class="keyword">ON</span> ongwu_contents(title);</span><br><span class="line"><span class="keyword">CREATE</span> INDEX idx_contents_text <span class="keyword">ON</span> ongwu_contents(text);</span><br></pre></td></tr></table></figure><h3 id="2-搜索结果缓存"><a href="#2-搜索结果缓存" class="headerlink" title="2. 搜索结果缓存"></a>2. 搜索结果缓存</h3><p>实现搜索结果缓存机制：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 缓存搜索结果</span></span><br><span class="line"><span class="variable">$cacheKey</span> = <span class="string">&#x27;search_&#x27;</span> . <span class="title function_ invoke__">md5</span>(<span class="variable">$filterKeywords</span>);</span><br><span class="line"><span class="variable">$cachedResult</span> = <span class="variable language_">$this</span>-&gt;cache-&gt;<span class="title function_ invoke__">get</span>(<span class="variable">$cacheKey</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="variable">$cachedResult</span> !== <span class="literal">false</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="variable">$cachedResult</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 执行搜索</span></span><br><span class="line"><span class="variable">$result</span> = <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">performSearch</span>(<span class="variable">$filterKeywords</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 缓存结果</span></span><br><span class="line"><span class="variable language_">$this</span>-&gt;cache-&gt;<span class="title function_ invoke__">set</span>(<span class="variable">$cacheKey</span>, <span class="variable">$result</span>, <span class="number">3600</span>); <span class="comment">// 缓存1小时</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="variable">$result</span>;</span><br></pre></td></tr></table></figure><h2 id="兼容性考虑"><a href="#兼容性考虑" class="headerlink" title="兼容性考虑"></a>兼容性考虑</h2><h3 id="1-版本兼容"><a href="#1-版本兼容" class="headerlink" title="1. 版本兼容"></a>1. 版本兼容</h3><p>确保修改后的代码与ongwu版本兼容：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 检查ongwu版本</span></span><br><span class="line"><span class="keyword">if</span> (<span class="title function_ invoke__">version_compare</span>(ongwu_<span class="title class_">Common</span>::<span class="variable constant_">VERSION</span>, <span class="string">&#x27;1.2.0&#x27;</span>, <span class="string">&#x27;&gt;=&#x27;</span>)) &#123;</span><br><span class="line">    <span class="comment">// 新版本代码</span></span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="comment">// 旧版本兼容代码</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2-插件兼容"><a href="#2-插件兼容" class="headerlink" title="2. 插件兼容"></a>2. 插件兼容</h3><p>如果使用了其他搜索相关插件，需要确保兼容性：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 检查是否有其他搜索插件</span></span><br><span class="line"><span class="keyword">if</span> (<span class="title function_ invoke__">class_exists</span>(<span class="string">&#x27;Widget_Archive_Search&#x27;</span>)) &#123;</span><br><span class="line">    <span class="comment">// 使用插件提供的搜索功能</span></span><br><span class="line">    <span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">pluginSearch</span>(<span class="variable">$filterKeywords</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>通过修改ongwu源码，我们可以实现符号搜索功能，但需要注意：</p><ol><li><strong>安全性</strong>：使用<code>addslashes</code>或预处理语句防止SQL注入</li><li><strong>性能</strong>：添加适当的数据库索引和缓存机制</li><li><strong>兼容性</strong>：确保与ongwu版本和其他插件的兼容性</li><li><strong>维护性</strong>：记录修改内容，便于后续升级</li></ol><p>这样修改后，ongwu就能支持包含符号的搜索了，满足更复杂的搜索需求。</p><hr><p><em>注意：修改源码后，在ongwu升级时需要重新应用这些修改。建议将修改内容记录在文档中，或者创建补丁文件。</em></p>]]></content>
      
      
      <categories>
          
          <category> tutorial </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ongwu </tag>
            
            <tag> 搜索功能 </tag>
            
            <tag> 源码修改 </tag>
            
            <tag> 符号搜索 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>让ongwu支持搜索符号</title>
      <link href="/2025/01/09/7%20-%20%E5%89%AF%E6%9C%AC%20(14)%20-%20%E5%89%AF%E6%9C%AC/"/>
      <url>/2025/01/09/7%20-%20%E5%89%AF%E6%9C%AC%20(14)%20-%20%E5%89%AF%E6%9C%AC/</url>
      
        <content type="html"><![CDATA[<h1 id="让ongwu支持搜索符号"><a href="#让ongwu支持搜索符号" class="headerlink" title="让ongwu支持搜索符号"></a>让ongwu支持搜索符号</h1><h2 id="问题背景"><a href="#问题背景" class="headerlink" title="问题背景"></a>问题背景</h2><p>用过ongwu的应该都清楚它本身搜索是不支持符号的，一般都会过滤掉，只会保留文字字母数字进行搜索。这种过滤应该是出于安全考虑的，但如果你的需求需要搜索符号之类的东西，则可以通过修改源码的方式实现。</p><h2 id="修改原理"><a href="#修改原理" class="headerlink" title="修改原理"></a>修改原理</h2><p>ongwu的搜索功能是在<code>var/Widget/Archive.php</code>中实现的，所以需要修改两处代码：</p><h3 id="第一处：关键词过滤逻辑"><a href="#第一处：关键词过滤逻辑" class="headerlink" title="第一处：关键词过滤逻辑"></a>第一处：关键词过滤逻辑</h3><p>在<code>var/Widget/Archive.php</code>文件中找到以下代码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 原始代码</span></span><br><span class="line"><span class="variable">$filterKeywords</span> = <span class="variable language_">$this</span>-&gt;request-&gt;<span class="title function_ invoke__">get</span>(<span class="string">&#x27;keywords&#x27;</span>);</span><br><span class="line"><span class="variable">$filterKeywords</span> = <span class="title function_ invoke__">trim</span>(<span class="variable">$filterKeywords</span>);</span><br><span class="line"><span class="variable">$filterKeywords</span> = <span class="title function_ invoke__">str_replace</span>(<span class="keyword">array</span>(<span class="string">&#x27;+&#x27;</span>, <span class="string">&#x27;-&#x27;</span>, <span class="string">&#x27;&amp;&#x27;</span>, <span class="string">&#x27;|&#x27;</span>, <span class="string">&#x27;!&#x27;</span>, <span class="string">&#x27;(&#x27;</span>, <span class="string">&#x27;)&#x27;</span>, <span class="string">&#x27;&#123;&#x27;</span>, <span class="string">&#x27;&#125;&#x27;</span>, <span class="string">&#x27;[&#x27;</span>, <span class="string">&#x27;]&#x27;</span>, <span class="string">&#x27;^&#x27;</span>, <span class="string">&#x27;&quot;&#x27;</span>, <span class="string">&#x27;~&#x27;</span>, <span class="string">&#x27;*&#x27;</span>, <span class="string">&#x27;?&#x27;</span>, <span class="string">&#x27;:&#x27;</span>, <span class="string">&#x27;\\&#x27;</span>), <span class="string">&#x27;&#x27;</span>, <span class="variable">$filterKeywords</span>);</span><br></pre></td></tr></table></figure><p>修改为：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 修改后的代码</span></span><br><span class="line"><span class="variable">$filterKeywords</span> = <span class="variable language_">$this</span>-&gt;request-&gt;<span class="title function_ invoke__">get</span>(<span class="string">&#x27;keywords&#x27;</span>);</span><br><span class="line"><span class="variable">$filterKeywords</span> = <span class="title function_ invoke__">trim</span>(<span class="variable">$filterKeywords</span>);</span><br><span class="line"><span class="comment">// 注释掉或删除符号过滤代码</span></span><br><span class="line"><span class="comment">// $filterKeywords = str_replace(array(&#x27;+&#x27;, &#x27;-&#x27;, &#x27;&amp;&#x27;, &#x27;|&#x27;, &#x27;!&#x27;, &#x27;(&#x27;, &#x27;)&#x27;, &#x27;&#123;&#x27;, &#x27;&#125;&#x27;, &#x27;[&#x27;, &#x27;]&#x27;, &#x27;^&#x27;, &#x27;&quot;&#x27;, &#x27;~&#x27;, &#x27;*&#x27;, &#x27;?&#x27;, &#x27;:&#x27;, &#x27;\\&#x27;), &#x27;&#x27;, $filterKeywords);</span></span><br></pre></td></tr></table></figure><h3 id="第二处：SQL查询构建"><a href="#第二处：SQL查询构建" class="headerlink" title="第二处：SQL查询构建"></a>第二处：SQL查询构建</h3><p>找到构建SQL查询的部分：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 原始代码</span></span><br><span class="line"><span class="keyword">if</span> (!<span class="keyword">empty</span>(<span class="variable">$filterKeywords</span>)) &#123;</span><br><span class="line">    <span class="variable">$filterKeywords</span> = <span class="string">&#x27;%&#x27;</span> . <span class="variable">$filterKeywords</span> . <span class="string">&#x27;%&#x27;</span>;</span><br><span class="line">    <span class="variable language_">$this</span>-&gt;db-&gt;<span class="title function_ invoke__">where</span>(<span class="string">&#x27;table.contents.title LIKE ? OR table.contents.text LIKE ?&#x27;</span>, <span class="variable">$filterKeywords</span>, <span class="variable">$filterKeywords</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>修改为：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 修改后的代码</span></span><br><span class="line"><span class="keyword">if</span> (!<span class="keyword">empty</span>(<span class="variable">$filterKeywords</span>)) &#123;</span><br><span class="line">    <span class="comment">// 支持特殊符号的搜索</span></span><br><span class="line">    <span class="variable">$filterKeywords</span> = <span class="string">&#x27;%&#x27;</span> . <span class="title function_ invoke__">addslashes</span>(<span class="variable">$filterKeywords</span>) . <span class="string">&#x27;%&#x27;</span>;</span><br><span class="line">    <span class="variable language_">$this</span>-&gt;db-&gt;<span class="title function_ invoke__">where</span>(<span class="string">&#x27;table.contents.title LIKE ? OR table.contents.text LIKE ?&#x27;</span>, <span class="variable">$filterKeywords</span>, <span class="variable">$filterKeywords</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="完整修改示例"><a href="#完整修改示例" class="headerlink" title="完整修改示例"></a>完整修改示例</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">// var/Widget/Archive.php 修改示例</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Widget_Archive</span> <span class="keyword">extends</span> <span class="title">Widget_Abstract_Contents</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="comment">// ... 其他代码 ...</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 执行搜索</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">search</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;db-&gt;<span class="title function_ invoke__">select</span>(<span class="string">&#x27;table.contents.cid&#x27;</span>, <span class="string">&#x27;table.contents.title&#x27;</span>, <span class="string">&#x27;table.contents.slug&#x27;</span>, <span class="string">&#x27;table.contents.created&#x27;</span>, <span class="string">&#x27;table.contents.authorId&#x27;</span>, <span class="string">&#x27;table.contents.modified&#x27;</span>, <span class="string">&#x27;table.contents.type&#x27;</span>, <span class="string">&#x27;table.contents.status&#x27;</span>, <span class="string">&#x27;table.contents.password&#x27;</span>, <span class="string">&#x27;table.contents.commentsNum&#x27;</span>, <span class="string">&#x27;table.contents.order&#x27;</span>, <span class="string">&#x27;table.contents.template&#x27;</span>, <span class="string">&#x27;table.contents.allowComment&#x27;</span>, <span class="string">&#x27;table.contents.allowPing&#x27;</span>, <span class="string">&#x27;table.contents.allowFeed&#x27;</span>);</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;db-&gt;<span class="keyword">from</span>(<span class="string">&#x27;table.contents&#x27;</span>);</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 获取搜索关键词</span></span><br><span class="line">        <span class="variable">$filterKeywords</span> = <span class="variable language_">$this</span>-&gt;request-&gt;<span class="title function_ invoke__">get</span>(<span class="string">&#x27;keywords&#x27;</span>);</span><br><span class="line">        <span class="variable">$filterKeywords</span> = <span class="title function_ invoke__">trim</span>(<span class="variable">$filterKeywords</span>);</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 注释掉符号过滤，支持符号搜索</span></span><br><span class="line">        <span class="comment">// $filterKeywords = str_replace(array(&#x27;+&#x27;, &#x27;-&#x27;, &#x27;&amp;&#x27;, &#x27;|&#x27;, &#x27;!&#x27;, &#x27;(&#x27;, &#x27;)&#x27;, &#x27;&#123;&#x27;, &#x27;&#125;&#x27;, &#x27;[&#x27;, &#x27;]&#x27;, &#x27;^&#x27;, &#x27;&quot;&#x27;, &#x27;~&#x27;, &#x27;*&#x27;, &#x27;?&#x27;, &#x27;:&#x27;, &#x27;\\&#x27;), &#x27;&#x27;, $filterKeywords);</span></span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> (!<span class="keyword">empty</span>(<span class="variable">$filterKeywords</span>)) &#123;</span><br><span class="line">            <span class="comment">// 使用addslashes防止SQL注入，同时支持符号搜索</span></span><br><span class="line">            <span class="variable">$filterKeywords</span> = <span class="string">&#x27;%&#x27;</span> . <span class="title function_ invoke__">addslashes</span>(<span class="variable">$filterKeywords</span>) . <span class="string">&#x27;%&#x27;</span>;</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;db-&gt;<span class="title function_ invoke__">where</span>(<span class="string">&#x27;table.contents.title LIKE ? OR table.contents.text LIKE ?&#x27;</span>, <span class="variable">$filterKeywords</span>, <span class="variable">$filterKeywords</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// ... 其他搜索逻辑 ...</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="安全注意事项"><a href="#安全注意事项" class="headerlink" title="安全注意事项"></a>安全注意事项</h2><h3 id="1-SQL注入防护"><a href="#1-SQL注入防护" class="headerlink" title="1. SQL注入防护"></a>1. SQL注入防护</h3><p>虽然我们允许符号搜索，但必须确保SQL安全：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 使用addslashes或更好的方法处理输入</span></span><br><span class="line"><span class="variable">$filterKeywords</span> = <span class="title function_ invoke__">addslashes</span>(<span class="variable">$filterKeywords</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 或者使用预处理语句</span></span><br><span class="line"><span class="variable">$stmt</span> = <span class="variable language_">$this</span>-&gt;db-&gt;<span class="title function_ invoke__">prepare</span>(<span class="string">&#x27;SELECT * FROM table.contents WHERE title LIKE ? OR text LIKE ?&#x27;</span>);</span><br><span class="line"><span class="variable">$stmt</span>-&gt;<span class="title function_ invoke__">execute</span>(<span class="keyword">array</span>(<span class="variable">$filterKeywords</span>, <span class="variable">$filterKeywords</span>));</span><br></pre></td></tr></table></figure><h3 id="2-输入验证"><a href="#2-输入验证" class="headerlink" title="2. 输入验证"></a>2. 输入验证</h3><p>添加输入长度和内容验证：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 验证搜索关键词长度</span></span><br><span class="line"><span class="keyword">if</span> (<span class="title function_ invoke__">strlen</span>(<span class="variable">$filterKeywords</span>) &gt; <span class="number">100</span>) &#123;</span><br><span class="line">    <span class="variable">$filterKeywords</span> = <span class="title function_ invoke__">substr</span>(<span class="variable">$filterKeywords</span>, <span class="number">0</span>, <span class="number">100</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 验证是否包含恶意内容</span></span><br><span class="line"><span class="keyword">if</span> (<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/&lt;script|javascript|vbscript|onload|onerror/i&#x27;</span>, <span class="variable">$filterKeywords</span>)) &#123;</span><br><span class="line">    <span class="variable">$filterKeywords</span> = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="测试验证"><a href="#测试验证" class="headerlink" title="测试验证"></a>测试验证</h2><h3 id="1-基本符号测试"><a href="#1-基本符号测试" class="headerlink" title="1. 基本符号测试"></a>1. 基本符号测试</h3><p>测试以下符号是否能正常搜索：</p><ul><li><code>+</code> 加号</li><li><code>-</code> 减号</li><li><code>&amp;</code> 与号</li><li><code>|</code> 或号</li><li><code>!</code> 感叹号</li><li><code>()</code> 括号</li><li><code>[]</code> 方括号</li><li><code>&#123;&#125;</code> 花括号</li></ul><h3 id="2-复杂搜索测试"><a href="#2-复杂搜索测试" class="headerlink" title="2. 复杂搜索测试"></a>2. 复杂搜索测试</h3><p>测试复杂搜索表达式：</p><ul><li><code>PHP + MySQL</code></li><li><code>(前端|后端)开发</code></li><li><code>ongwu &amp; 插件</code></li><li><code>[重要] 更新</code></li></ul><h2 id="性能优化建议"><a href="#性能优化建议" class="headerlink" title="性能优化建议"></a>性能优化建议</h2><h3 id="1-索引优化"><a href="#1-索引优化" class="headerlink" title="1. 索引优化"></a>1. 索引优化</h3><p>为搜索字段添加数据库索引：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 为标题和内容字段添加全文索引</span></span><br><span class="line"><span class="keyword">ALTER TABLE</span> ongwu_contents <span class="keyword">ADD</span> FULLTEXT(title, text);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 或者添加普通索引</span></span><br><span class="line"><span class="keyword">CREATE</span> INDEX idx_contents_title <span class="keyword">ON</span> ongwu_contents(title);</span><br><span class="line"><span class="keyword">CREATE</span> INDEX idx_contents_text <span class="keyword">ON</span> ongwu_contents(text);</span><br></pre></td></tr></table></figure><h3 id="2-搜索结果缓存"><a href="#2-搜索结果缓存" class="headerlink" title="2. 搜索结果缓存"></a>2. 搜索结果缓存</h3><p>实现搜索结果缓存机制：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 缓存搜索结果</span></span><br><span class="line"><span class="variable">$cacheKey</span> = <span class="string">&#x27;search_&#x27;</span> . <span class="title function_ invoke__">md5</span>(<span class="variable">$filterKeywords</span>);</span><br><span class="line"><span class="variable">$cachedResult</span> = <span class="variable language_">$this</span>-&gt;cache-&gt;<span class="title function_ invoke__">get</span>(<span class="variable">$cacheKey</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="variable">$cachedResult</span> !== <span class="literal">false</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="variable">$cachedResult</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 执行搜索</span></span><br><span class="line"><span class="variable">$result</span> = <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">performSearch</span>(<span class="variable">$filterKeywords</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 缓存结果</span></span><br><span class="line"><span class="variable language_">$this</span>-&gt;cache-&gt;<span class="title function_ invoke__">set</span>(<span class="variable">$cacheKey</span>, <span class="variable">$result</span>, <span class="number">3600</span>); <span class="comment">// 缓存1小时</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="variable">$result</span>;</span><br></pre></td></tr></table></figure><h2 id="兼容性考虑"><a href="#兼容性考虑" class="headerlink" title="兼容性考虑"></a>兼容性考虑</h2><h3 id="1-版本兼容"><a href="#1-版本兼容" class="headerlink" title="1. 版本兼容"></a>1. 版本兼容</h3><p>确保修改后的代码与ongwu版本兼容：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 检查ongwu版本</span></span><br><span class="line"><span class="keyword">if</span> (<span class="title function_ invoke__">version_compare</span>(ongwu_<span class="title class_">Common</span>::<span class="variable constant_">VERSION</span>, <span class="string">&#x27;1.2.0&#x27;</span>, <span class="string">&#x27;&gt;=&#x27;</span>)) &#123;</span><br><span class="line">    <span class="comment">// 新版本代码</span></span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="comment">// 旧版本兼容代码</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2-插件兼容"><a href="#2-插件兼容" class="headerlink" title="2. 插件兼容"></a>2. 插件兼容</h3><p>如果使用了其他搜索相关插件，需要确保兼容性：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 检查是否有其他搜索插件</span></span><br><span class="line"><span class="keyword">if</span> (<span class="title function_ invoke__">class_exists</span>(<span class="string">&#x27;Widget_Archive_Search&#x27;</span>)) &#123;</span><br><span class="line">    <span class="comment">// 使用插件提供的搜索功能</span></span><br><span class="line">    <span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">pluginSearch</span>(<span class="variable">$filterKeywords</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>通过修改ongwu源码，我们可以实现符号搜索功能，但需要注意：</p><ol><li><strong>安全性</strong>：使用<code>addslashes</code>或预处理语句防止SQL注入</li><li><strong>性能</strong>：添加适当的数据库索引和缓存机制</li><li><strong>兼容性</strong>：确保与ongwu版本和其他插件的兼容性</li><li><strong>维护性</strong>：记录修改内容，便于后续升级</li></ol><p>这样修改后，ongwu就能支持包含符号的搜索了，满足更复杂的搜索需求。</p><hr><p><em>注意：修改源码后，在ongwu升级时需要重新应用这些修改。建议将修改内容记录在文档中，或者创建补丁文件。</em></p>]]></content>
      
      
      <categories>
          
          <category> tutorial </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ongwu </tag>
            
            <tag> 搜索功能 </tag>
            
            <tag> 源码修改 </tag>
            
            <tag> 符号搜索 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>让ongwu支持搜索符号</title>
      <link href="/2025/01/09/7%20-%20%E5%89%AF%E6%9C%AC%20(15)%20-%20%E5%89%AF%E6%9C%AC/"/>
      <url>/2025/01/09/7%20-%20%E5%89%AF%E6%9C%AC%20(15)%20-%20%E5%89%AF%E6%9C%AC/</url>
      
        <content type="html"><![CDATA[<h1 id="让ongwu支持搜索符号"><a href="#让ongwu支持搜索符号" class="headerlink" title="让ongwu支持搜索符号"></a>让ongwu支持搜索符号</h1><h2 id="问题背景"><a href="#问题背景" class="headerlink" title="问题背景"></a>问题背景</h2><p>用过ongwu的应该都清楚它本身搜索是不支持符号的，一般都会过滤掉，只会保留文字字母数字进行搜索。这种过滤应该是出于安全考虑的，但如果你的需求需要搜索符号之类的东西，则可以通过修改源码的方式实现。</p><h2 id="修改原理"><a href="#修改原理" class="headerlink" title="修改原理"></a>修改原理</h2><p>ongwu的搜索功能是在<code>var/Widget/Archive.php</code>中实现的，所以需要修改两处代码：</p><h3 id="第一处：关键词过滤逻辑"><a href="#第一处：关键词过滤逻辑" class="headerlink" title="第一处：关键词过滤逻辑"></a>第一处：关键词过滤逻辑</h3><p>在<code>var/Widget/Archive.php</code>文件中找到以下代码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 原始代码</span></span><br><span class="line"><span class="variable">$filterKeywords</span> = <span class="variable language_">$this</span>-&gt;request-&gt;<span class="title function_ invoke__">get</span>(<span class="string">&#x27;keywords&#x27;</span>);</span><br><span class="line"><span class="variable">$filterKeywords</span> = <span class="title function_ invoke__">trim</span>(<span class="variable">$filterKeywords</span>);</span><br><span class="line"><span class="variable">$filterKeywords</span> = <span class="title function_ invoke__">str_replace</span>(<span class="keyword">array</span>(<span class="string">&#x27;+&#x27;</span>, <span class="string">&#x27;-&#x27;</span>, <span class="string">&#x27;&amp;&#x27;</span>, <span class="string">&#x27;|&#x27;</span>, <span class="string">&#x27;!&#x27;</span>, <span class="string">&#x27;(&#x27;</span>, <span class="string">&#x27;)&#x27;</span>, <span class="string">&#x27;&#123;&#x27;</span>, <span class="string">&#x27;&#125;&#x27;</span>, <span class="string">&#x27;[&#x27;</span>, <span class="string">&#x27;]&#x27;</span>, <span class="string">&#x27;^&#x27;</span>, <span class="string">&#x27;&quot;&#x27;</span>, <span class="string">&#x27;~&#x27;</span>, <span class="string">&#x27;*&#x27;</span>, <span class="string">&#x27;?&#x27;</span>, <span class="string">&#x27;:&#x27;</span>, <span class="string">&#x27;\\&#x27;</span>), <span class="string">&#x27;&#x27;</span>, <span class="variable">$filterKeywords</span>);</span><br></pre></td></tr></table></figure><p>修改为：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 修改后的代码</span></span><br><span class="line"><span class="variable">$filterKeywords</span> = <span class="variable language_">$this</span>-&gt;request-&gt;<span class="title function_ invoke__">get</span>(<span class="string">&#x27;keywords&#x27;</span>);</span><br><span class="line"><span class="variable">$filterKeywords</span> = <span class="title function_ invoke__">trim</span>(<span class="variable">$filterKeywords</span>);</span><br><span class="line"><span class="comment">// 注释掉或删除符号过滤代码</span></span><br><span class="line"><span class="comment">// $filterKeywords = str_replace(array(&#x27;+&#x27;, &#x27;-&#x27;, &#x27;&amp;&#x27;, &#x27;|&#x27;, &#x27;!&#x27;, &#x27;(&#x27;, &#x27;)&#x27;, &#x27;&#123;&#x27;, &#x27;&#125;&#x27;, &#x27;[&#x27;, &#x27;]&#x27;, &#x27;^&#x27;, &#x27;&quot;&#x27;, &#x27;~&#x27;, &#x27;*&#x27;, &#x27;?&#x27;, &#x27;:&#x27;, &#x27;\\&#x27;), &#x27;&#x27;, $filterKeywords);</span></span><br></pre></td></tr></table></figure><h3 id="第二处：SQL查询构建"><a href="#第二处：SQL查询构建" class="headerlink" title="第二处：SQL查询构建"></a>第二处：SQL查询构建</h3><p>找到构建SQL查询的部分：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 原始代码</span></span><br><span class="line"><span class="keyword">if</span> (!<span class="keyword">empty</span>(<span class="variable">$filterKeywords</span>)) &#123;</span><br><span class="line">    <span class="variable">$filterKeywords</span> = <span class="string">&#x27;%&#x27;</span> . <span class="variable">$filterKeywords</span> . <span class="string">&#x27;%&#x27;</span>;</span><br><span class="line">    <span class="variable language_">$this</span>-&gt;db-&gt;<span class="title function_ invoke__">where</span>(<span class="string">&#x27;table.contents.title LIKE ? OR table.contents.text LIKE ?&#x27;</span>, <span class="variable">$filterKeywords</span>, <span class="variable">$filterKeywords</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>修改为：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 修改后的代码</span></span><br><span class="line"><span class="keyword">if</span> (!<span class="keyword">empty</span>(<span class="variable">$filterKeywords</span>)) &#123;</span><br><span class="line">    <span class="comment">// 支持特殊符号的搜索</span></span><br><span class="line">    <span class="variable">$filterKeywords</span> = <span class="string">&#x27;%&#x27;</span> . <span class="title function_ invoke__">addslashes</span>(<span class="variable">$filterKeywords</span>) . <span class="string">&#x27;%&#x27;</span>;</span><br><span class="line">    <span class="variable language_">$this</span>-&gt;db-&gt;<span class="title function_ invoke__">where</span>(<span class="string">&#x27;table.contents.title LIKE ? OR table.contents.text LIKE ?&#x27;</span>, <span class="variable">$filterKeywords</span>, <span class="variable">$filterKeywords</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="完整修改示例"><a href="#完整修改示例" class="headerlink" title="完整修改示例"></a>完整修改示例</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">// var/Widget/Archive.php 修改示例</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Widget_Archive</span> <span class="keyword">extends</span> <span class="title">Widget_Abstract_Contents</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="comment">// ... 其他代码 ...</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 执行搜索</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">search</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;db-&gt;<span class="title function_ invoke__">select</span>(<span class="string">&#x27;table.contents.cid&#x27;</span>, <span class="string">&#x27;table.contents.title&#x27;</span>, <span class="string">&#x27;table.contents.slug&#x27;</span>, <span class="string">&#x27;table.contents.created&#x27;</span>, <span class="string">&#x27;table.contents.authorId&#x27;</span>, <span class="string">&#x27;table.contents.modified&#x27;</span>, <span class="string">&#x27;table.contents.type&#x27;</span>, <span class="string">&#x27;table.contents.status&#x27;</span>, <span class="string">&#x27;table.contents.password&#x27;</span>, <span class="string">&#x27;table.contents.commentsNum&#x27;</span>, <span class="string">&#x27;table.contents.order&#x27;</span>, <span class="string">&#x27;table.contents.template&#x27;</span>, <span class="string">&#x27;table.contents.allowComment&#x27;</span>, <span class="string">&#x27;table.contents.allowPing&#x27;</span>, <span class="string">&#x27;table.contents.allowFeed&#x27;</span>);</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;db-&gt;<span class="keyword">from</span>(<span class="string">&#x27;table.contents&#x27;</span>);</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 获取搜索关键词</span></span><br><span class="line">        <span class="variable">$filterKeywords</span> = <span class="variable language_">$this</span>-&gt;request-&gt;<span class="title function_ invoke__">get</span>(<span class="string">&#x27;keywords&#x27;</span>);</span><br><span class="line">        <span class="variable">$filterKeywords</span> = <span class="title function_ invoke__">trim</span>(<span class="variable">$filterKeywords</span>);</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 注释掉符号过滤，支持符号搜索</span></span><br><span class="line">        <span class="comment">// $filterKeywords = str_replace(array(&#x27;+&#x27;, &#x27;-&#x27;, &#x27;&amp;&#x27;, &#x27;|&#x27;, &#x27;!&#x27;, &#x27;(&#x27;, &#x27;)&#x27;, &#x27;&#123;&#x27;, &#x27;&#125;&#x27;, &#x27;[&#x27;, &#x27;]&#x27;, &#x27;^&#x27;, &#x27;&quot;&#x27;, &#x27;~&#x27;, &#x27;*&#x27;, &#x27;?&#x27;, &#x27;:&#x27;, &#x27;\\&#x27;), &#x27;&#x27;, $filterKeywords);</span></span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> (!<span class="keyword">empty</span>(<span class="variable">$filterKeywords</span>)) &#123;</span><br><span class="line">            <span class="comment">// 使用addslashes防止SQL注入，同时支持符号搜索</span></span><br><span class="line">            <span class="variable">$filterKeywords</span> = <span class="string">&#x27;%&#x27;</span> . <span class="title function_ invoke__">addslashes</span>(<span class="variable">$filterKeywords</span>) . <span class="string">&#x27;%&#x27;</span>;</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;db-&gt;<span class="title function_ invoke__">where</span>(<span class="string">&#x27;table.contents.title LIKE ? OR table.contents.text LIKE ?&#x27;</span>, <span class="variable">$filterKeywords</span>, <span class="variable">$filterKeywords</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// ... 其他搜索逻辑 ...</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="安全注意事项"><a href="#安全注意事项" class="headerlink" title="安全注意事项"></a>安全注意事项</h2><h3 id="1-SQL注入防护"><a href="#1-SQL注入防护" class="headerlink" title="1. SQL注入防护"></a>1. SQL注入防护</h3><p>虽然我们允许符号搜索，但必须确保SQL安全：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 使用addslashes或更好的方法处理输入</span></span><br><span class="line"><span class="variable">$filterKeywords</span> = <span class="title function_ invoke__">addslashes</span>(<span class="variable">$filterKeywords</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 或者使用预处理语句</span></span><br><span class="line"><span class="variable">$stmt</span> = <span class="variable language_">$this</span>-&gt;db-&gt;<span class="title function_ invoke__">prepare</span>(<span class="string">&#x27;SELECT * FROM table.contents WHERE title LIKE ? OR text LIKE ?&#x27;</span>);</span><br><span class="line"><span class="variable">$stmt</span>-&gt;<span class="title function_ invoke__">execute</span>(<span class="keyword">array</span>(<span class="variable">$filterKeywords</span>, <span class="variable">$filterKeywords</span>));</span><br></pre></td></tr></table></figure><h3 id="2-输入验证"><a href="#2-输入验证" class="headerlink" title="2. 输入验证"></a>2. 输入验证</h3><p>添加输入长度和内容验证：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 验证搜索关键词长度</span></span><br><span class="line"><span class="keyword">if</span> (<span class="title function_ invoke__">strlen</span>(<span class="variable">$filterKeywords</span>) &gt; <span class="number">100</span>) &#123;</span><br><span class="line">    <span class="variable">$filterKeywords</span> = <span class="title function_ invoke__">substr</span>(<span class="variable">$filterKeywords</span>, <span class="number">0</span>, <span class="number">100</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 验证是否包含恶意内容</span></span><br><span class="line"><span class="keyword">if</span> (<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/&lt;script|javascript|vbscript|onload|onerror/i&#x27;</span>, <span class="variable">$filterKeywords</span>)) &#123;</span><br><span class="line">    <span class="variable">$filterKeywords</span> = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="测试验证"><a href="#测试验证" class="headerlink" title="测试验证"></a>测试验证</h2><h3 id="1-基本符号测试"><a href="#1-基本符号测试" class="headerlink" title="1. 基本符号测试"></a>1. 基本符号测试</h3><p>测试以下符号是否能正常搜索：</p><ul><li><code>+</code> 加号</li><li><code>-</code> 减号</li><li><code>&amp;</code> 与号</li><li><code>|</code> 或号</li><li><code>!</code> 感叹号</li><li><code>()</code> 括号</li><li><code>[]</code> 方括号</li><li><code>&#123;&#125;</code> 花括号</li></ul><h3 id="2-复杂搜索测试"><a href="#2-复杂搜索测试" class="headerlink" title="2. 复杂搜索测试"></a>2. 复杂搜索测试</h3><p>测试复杂搜索表达式：</p><ul><li><code>PHP + MySQL</code></li><li><code>(前端|后端)开发</code></li><li><code>ongwu &amp; 插件</code></li><li><code>[重要] 更新</code></li></ul><h2 id="性能优化建议"><a href="#性能优化建议" class="headerlink" title="性能优化建议"></a>性能优化建议</h2><h3 id="1-索引优化"><a href="#1-索引优化" class="headerlink" title="1. 索引优化"></a>1. 索引优化</h3><p>为搜索字段添加数据库索引：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 为标题和内容字段添加全文索引</span></span><br><span class="line"><span class="keyword">ALTER TABLE</span> ongwu_contents <span class="keyword">ADD</span> FULLTEXT(title, text);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 或者添加普通索引</span></span><br><span class="line"><span class="keyword">CREATE</span> INDEX idx_contents_title <span class="keyword">ON</span> ongwu_contents(title);</span><br><span class="line"><span class="keyword">CREATE</span> INDEX idx_contents_text <span class="keyword">ON</span> ongwu_contents(text);</span><br></pre></td></tr></table></figure><h3 id="2-搜索结果缓存"><a href="#2-搜索结果缓存" class="headerlink" title="2. 搜索结果缓存"></a>2. 搜索结果缓存</h3><p>实现搜索结果缓存机制：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 缓存搜索结果</span></span><br><span class="line"><span class="variable">$cacheKey</span> = <span class="string">&#x27;search_&#x27;</span> . <span class="title function_ invoke__">md5</span>(<span class="variable">$filterKeywords</span>);</span><br><span class="line"><span class="variable">$cachedResult</span> = <span class="variable language_">$this</span>-&gt;cache-&gt;<span class="title function_ invoke__">get</span>(<span class="variable">$cacheKey</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="variable">$cachedResult</span> !== <span class="literal">false</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="variable">$cachedResult</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 执行搜索</span></span><br><span class="line"><span class="variable">$result</span> = <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">performSearch</span>(<span class="variable">$filterKeywords</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 缓存结果</span></span><br><span class="line"><span class="variable language_">$this</span>-&gt;cache-&gt;<span class="title function_ invoke__">set</span>(<span class="variable">$cacheKey</span>, <span class="variable">$result</span>, <span class="number">3600</span>); <span class="comment">// 缓存1小时</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="variable">$result</span>;</span><br></pre></td></tr></table></figure><h2 id="兼容性考虑"><a href="#兼容性考虑" class="headerlink" title="兼容性考虑"></a>兼容性考虑</h2><h3 id="1-版本兼容"><a href="#1-版本兼容" class="headerlink" title="1. 版本兼容"></a>1. 版本兼容</h3><p>确保修改后的代码与ongwu版本兼容：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 检查ongwu版本</span></span><br><span class="line"><span class="keyword">if</span> (<span class="title function_ invoke__">version_compare</span>(ongwu_<span class="title class_">Common</span>::<span class="variable constant_">VERSION</span>, <span class="string">&#x27;1.2.0&#x27;</span>, <span class="string">&#x27;&gt;=&#x27;</span>)) &#123;</span><br><span class="line">    <span class="comment">// 新版本代码</span></span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="comment">// 旧版本兼容代码</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2-插件兼容"><a href="#2-插件兼容" class="headerlink" title="2. 插件兼容"></a>2. 插件兼容</h3><p>如果使用了其他搜索相关插件，需要确保兼容性：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 检查是否有其他搜索插件</span></span><br><span class="line"><span class="keyword">if</span> (<span class="title function_ invoke__">class_exists</span>(<span class="string">&#x27;Widget_Archive_Search&#x27;</span>)) &#123;</span><br><span class="line">    <span class="comment">// 使用插件提供的搜索功能</span></span><br><span class="line">    <span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">pluginSearch</span>(<span class="variable">$filterKeywords</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>通过修改ongwu源码，我们可以实现符号搜索功能，但需要注意：</p><ol><li><strong>安全性</strong>：使用<code>addslashes</code>或预处理语句防止SQL注入</li><li><strong>性能</strong>：添加适当的数据库索引和缓存机制</li><li><strong>兼容性</strong>：确保与ongwu版本和其他插件的兼容性</li><li><strong>维护性</strong>：记录修改内容，便于后续升级</li></ol><p>这样修改后，ongwu就能支持包含符号的搜索了，满足更复杂的搜索需求。</p><hr><p><em>注意：修改源码后，在ongwu升级时需要重新应用这些修改。建议将修改内容记录在文档中，或者创建补丁文件。</em></p>]]></content>
      
      
      <categories>
          
          <category> tutorial </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ongwu </tag>
            
            <tag> 搜索功能 </tag>
            
            <tag> 源码修改 </tag>
            
            <tag> 符号搜索 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>让ongwu支持搜索符号</title>
      <link href="/2025/01/09/7%20-%20%E5%89%AF%E6%9C%AC%20(16)%20-%20%E5%89%AF%E6%9C%AC/"/>
      <url>/2025/01/09/7%20-%20%E5%89%AF%E6%9C%AC%20(16)%20-%20%E5%89%AF%E6%9C%AC/</url>
      
        <content type="html"><![CDATA[<h1 id="让ongwu支持搜索符号"><a href="#让ongwu支持搜索符号" class="headerlink" title="让ongwu支持搜索符号"></a>让ongwu支持搜索符号</h1><h2 id="问题背景"><a href="#问题背景" class="headerlink" title="问题背景"></a>问题背景</h2><p>用过ongwu的应该都清楚它本身搜索是不支持符号的，一般都会过滤掉，只会保留文字字母数字进行搜索。这种过滤应该是出于安全考虑的，但如果你的需求需要搜索符号之类的东西，则可以通过修改源码的方式实现。</p><h2 id="修改原理"><a href="#修改原理" class="headerlink" title="修改原理"></a>修改原理</h2><p>ongwu的搜索功能是在<code>var/Widget/Archive.php</code>中实现的，所以需要修改两处代码：</p><h3 id="第一处：关键词过滤逻辑"><a href="#第一处：关键词过滤逻辑" class="headerlink" title="第一处：关键词过滤逻辑"></a>第一处：关键词过滤逻辑</h3><p>在<code>var/Widget/Archive.php</code>文件中找到以下代码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 原始代码</span></span><br><span class="line"><span class="variable">$filterKeywords</span> = <span class="variable language_">$this</span>-&gt;request-&gt;<span class="title function_ invoke__">get</span>(<span class="string">&#x27;keywords&#x27;</span>);</span><br><span class="line"><span class="variable">$filterKeywords</span> = <span class="title function_ invoke__">trim</span>(<span class="variable">$filterKeywords</span>);</span><br><span class="line"><span class="variable">$filterKeywords</span> = <span class="title function_ invoke__">str_replace</span>(<span class="keyword">array</span>(<span class="string">&#x27;+&#x27;</span>, <span class="string">&#x27;-&#x27;</span>, <span class="string">&#x27;&amp;&#x27;</span>, <span class="string">&#x27;|&#x27;</span>, <span class="string">&#x27;!&#x27;</span>, <span class="string">&#x27;(&#x27;</span>, <span class="string">&#x27;)&#x27;</span>, <span class="string">&#x27;&#123;&#x27;</span>, <span class="string">&#x27;&#125;&#x27;</span>, <span class="string">&#x27;[&#x27;</span>, <span class="string">&#x27;]&#x27;</span>, <span class="string">&#x27;^&#x27;</span>, <span class="string">&#x27;&quot;&#x27;</span>, <span class="string">&#x27;~&#x27;</span>, <span class="string">&#x27;*&#x27;</span>, <span class="string">&#x27;?&#x27;</span>, <span class="string">&#x27;:&#x27;</span>, <span class="string">&#x27;\\&#x27;</span>), <span class="string">&#x27;&#x27;</span>, <span class="variable">$filterKeywords</span>);</span><br></pre></td></tr></table></figure><p>修改为：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 修改后的代码</span></span><br><span class="line"><span class="variable">$filterKeywords</span> = <span class="variable language_">$this</span>-&gt;request-&gt;<span class="title function_ invoke__">get</span>(<span class="string">&#x27;keywords&#x27;</span>);</span><br><span class="line"><span class="variable">$filterKeywords</span> = <span class="title function_ invoke__">trim</span>(<span class="variable">$filterKeywords</span>);</span><br><span class="line"><span class="comment">// 注释掉或删除符号过滤代码</span></span><br><span class="line"><span class="comment">// $filterKeywords = str_replace(array(&#x27;+&#x27;, &#x27;-&#x27;, &#x27;&amp;&#x27;, &#x27;|&#x27;, &#x27;!&#x27;, &#x27;(&#x27;, &#x27;)&#x27;, &#x27;&#123;&#x27;, &#x27;&#125;&#x27;, &#x27;[&#x27;, &#x27;]&#x27;, &#x27;^&#x27;, &#x27;&quot;&#x27;, &#x27;~&#x27;, &#x27;*&#x27;, &#x27;?&#x27;, &#x27;:&#x27;, &#x27;\\&#x27;), &#x27;&#x27;, $filterKeywords);</span></span><br></pre></td></tr></table></figure><h3 id="第二处：SQL查询构建"><a href="#第二处：SQL查询构建" class="headerlink" title="第二处：SQL查询构建"></a>第二处：SQL查询构建</h3><p>找到构建SQL查询的部分：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 原始代码</span></span><br><span class="line"><span class="keyword">if</span> (!<span class="keyword">empty</span>(<span class="variable">$filterKeywords</span>)) &#123;</span><br><span class="line">    <span class="variable">$filterKeywords</span> = <span class="string">&#x27;%&#x27;</span> . <span class="variable">$filterKeywords</span> . <span class="string">&#x27;%&#x27;</span>;</span><br><span class="line">    <span class="variable language_">$this</span>-&gt;db-&gt;<span class="title function_ invoke__">where</span>(<span class="string">&#x27;table.contents.title LIKE ? OR table.contents.text LIKE ?&#x27;</span>, <span class="variable">$filterKeywords</span>, <span class="variable">$filterKeywords</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>修改为：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 修改后的代码</span></span><br><span class="line"><span class="keyword">if</span> (!<span class="keyword">empty</span>(<span class="variable">$filterKeywords</span>)) &#123;</span><br><span class="line">    <span class="comment">// 支持特殊符号的搜索</span></span><br><span class="line">    <span class="variable">$filterKeywords</span> = <span class="string">&#x27;%&#x27;</span> . <span class="title function_ invoke__">addslashes</span>(<span class="variable">$filterKeywords</span>) . <span class="string">&#x27;%&#x27;</span>;</span><br><span class="line">    <span class="variable language_">$this</span>-&gt;db-&gt;<span class="title function_ invoke__">where</span>(<span class="string">&#x27;table.contents.title LIKE ? OR table.contents.text LIKE ?&#x27;</span>, <span class="variable">$filterKeywords</span>, <span class="variable">$filterKeywords</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="完整修改示例"><a href="#完整修改示例" class="headerlink" title="完整修改示例"></a>完整修改示例</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">// var/Widget/Archive.php 修改示例</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Widget_Archive</span> <span class="keyword">extends</span> <span class="title">Widget_Abstract_Contents</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="comment">// ... 其他代码 ...</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 执行搜索</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">search</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;db-&gt;<span class="title function_ invoke__">select</span>(<span class="string">&#x27;table.contents.cid&#x27;</span>, <span class="string">&#x27;table.contents.title&#x27;</span>, <span class="string">&#x27;table.contents.slug&#x27;</span>, <span class="string">&#x27;table.contents.created&#x27;</span>, <span class="string">&#x27;table.contents.authorId&#x27;</span>, <span class="string">&#x27;table.contents.modified&#x27;</span>, <span class="string">&#x27;table.contents.type&#x27;</span>, <span class="string">&#x27;table.contents.status&#x27;</span>, <span class="string">&#x27;table.contents.password&#x27;</span>, <span class="string">&#x27;table.contents.commentsNum&#x27;</span>, <span class="string">&#x27;table.contents.order&#x27;</span>, <span class="string">&#x27;table.contents.template&#x27;</span>, <span class="string">&#x27;table.contents.allowComment&#x27;</span>, <span class="string">&#x27;table.contents.allowPing&#x27;</span>, <span class="string">&#x27;table.contents.allowFeed&#x27;</span>);</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;db-&gt;<span class="keyword">from</span>(<span class="string">&#x27;table.contents&#x27;</span>);</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 获取搜索关键词</span></span><br><span class="line">        <span class="variable">$filterKeywords</span> = <span class="variable language_">$this</span>-&gt;request-&gt;<span class="title function_ invoke__">get</span>(<span class="string">&#x27;keywords&#x27;</span>);</span><br><span class="line">        <span class="variable">$filterKeywords</span> = <span class="title function_ invoke__">trim</span>(<span class="variable">$filterKeywords</span>);</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 注释掉符号过滤，支持符号搜索</span></span><br><span class="line">        <span class="comment">// $filterKeywords = str_replace(array(&#x27;+&#x27;, &#x27;-&#x27;, &#x27;&amp;&#x27;, &#x27;|&#x27;, &#x27;!&#x27;, &#x27;(&#x27;, &#x27;)&#x27;, &#x27;&#123;&#x27;, &#x27;&#125;&#x27;, &#x27;[&#x27;, &#x27;]&#x27;, &#x27;^&#x27;, &#x27;&quot;&#x27;, &#x27;~&#x27;, &#x27;*&#x27;, &#x27;?&#x27;, &#x27;:&#x27;, &#x27;\\&#x27;), &#x27;&#x27;, $filterKeywords);</span></span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> (!<span class="keyword">empty</span>(<span class="variable">$filterKeywords</span>)) &#123;</span><br><span class="line">            <span class="comment">// 使用addslashes防止SQL注入，同时支持符号搜索</span></span><br><span class="line">            <span class="variable">$filterKeywords</span> = <span class="string">&#x27;%&#x27;</span> . <span class="title function_ invoke__">addslashes</span>(<span class="variable">$filterKeywords</span>) . <span class="string">&#x27;%&#x27;</span>;</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;db-&gt;<span class="title function_ invoke__">where</span>(<span class="string">&#x27;table.contents.title LIKE ? OR table.contents.text LIKE ?&#x27;</span>, <span class="variable">$filterKeywords</span>, <span class="variable">$filterKeywords</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// ... 其他搜索逻辑 ...</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="安全注意事项"><a href="#安全注意事项" class="headerlink" title="安全注意事项"></a>安全注意事项</h2><h3 id="1-SQL注入防护"><a href="#1-SQL注入防护" class="headerlink" title="1. SQL注入防护"></a>1. SQL注入防护</h3><p>虽然我们允许符号搜索，但必须确保SQL安全：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 使用addslashes或更好的方法处理输入</span></span><br><span class="line"><span class="variable">$filterKeywords</span> = <span class="title function_ invoke__">addslashes</span>(<span class="variable">$filterKeywords</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 或者使用预处理语句</span></span><br><span class="line"><span class="variable">$stmt</span> = <span class="variable language_">$this</span>-&gt;db-&gt;<span class="title function_ invoke__">prepare</span>(<span class="string">&#x27;SELECT * FROM table.contents WHERE title LIKE ? OR text LIKE ?&#x27;</span>);</span><br><span class="line"><span class="variable">$stmt</span>-&gt;<span class="title function_ invoke__">execute</span>(<span class="keyword">array</span>(<span class="variable">$filterKeywords</span>, <span class="variable">$filterKeywords</span>));</span><br></pre></td></tr></table></figure><h3 id="2-输入验证"><a href="#2-输入验证" class="headerlink" title="2. 输入验证"></a>2. 输入验证</h3><p>添加输入长度和内容验证：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 验证搜索关键词长度</span></span><br><span class="line"><span class="keyword">if</span> (<span class="title function_ invoke__">strlen</span>(<span class="variable">$filterKeywords</span>) &gt; <span class="number">100</span>) &#123;</span><br><span class="line">    <span class="variable">$filterKeywords</span> = <span class="title function_ invoke__">substr</span>(<span class="variable">$filterKeywords</span>, <span class="number">0</span>, <span class="number">100</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 验证是否包含恶意内容</span></span><br><span class="line"><span class="keyword">if</span> (<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/&lt;script|javascript|vbscript|onload|onerror/i&#x27;</span>, <span class="variable">$filterKeywords</span>)) &#123;</span><br><span class="line">    <span class="variable">$filterKeywords</span> = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="测试验证"><a href="#测试验证" class="headerlink" title="测试验证"></a>测试验证</h2><h3 id="1-基本符号测试"><a href="#1-基本符号测试" class="headerlink" title="1. 基本符号测试"></a>1. 基本符号测试</h3><p>测试以下符号是否能正常搜索：</p><ul><li><code>+</code> 加号</li><li><code>-</code> 减号</li><li><code>&amp;</code> 与号</li><li><code>|</code> 或号</li><li><code>!</code> 感叹号</li><li><code>()</code> 括号</li><li><code>[]</code> 方括号</li><li><code>&#123;&#125;</code> 花括号</li></ul><h3 id="2-复杂搜索测试"><a href="#2-复杂搜索测试" class="headerlink" title="2. 复杂搜索测试"></a>2. 复杂搜索测试</h3><p>测试复杂搜索表达式：</p><ul><li><code>PHP + MySQL</code></li><li><code>(前端|后端)开发</code></li><li><code>ongwu &amp; 插件</code></li><li><code>[重要] 更新</code></li></ul><h2 id="性能优化建议"><a href="#性能优化建议" class="headerlink" title="性能优化建议"></a>性能优化建议</h2><h3 id="1-索引优化"><a href="#1-索引优化" class="headerlink" title="1. 索引优化"></a>1. 索引优化</h3><p>为搜索字段添加数据库索引：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 为标题和内容字段添加全文索引</span></span><br><span class="line"><span class="keyword">ALTER TABLE</span> ongwu_contents <span class="keyword">ADD</span> FULLTEXT(title, text);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 或者添加普通索引</span></span><br><span class="line"><span class="keyword">CREATE</span> INDEX idx_contents_title <span class="keyword">ON</span> ongwu_contents(title);</span><br><span class="line"><span class="keyword">CREATE</span> INDEX idx_contents_text <span class="keyword">ON</span> ongwu_contents(text);</span><br></pre></td></tr></table></figure><h3 id="2-搜索结果缓存"><a href="#2-搜索结果缓存" class="headerlink" title="2. 搜索结果缓存"></a>2. 搜索结果缓存</h3><p>实现搜索结果缓存机制：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 缓存搜索结果</span></span><br><span class="line"><span class="variable">$cacheKey</span> = <span class="string">&#x27;search_&#x27;</span> . <span class="title function_ invoke__">md5</span>(<span class="variable">$filterKeywords</span>);</span><br><span class="line"><span class="variable">$cachedResult</span> = <span class="variable language_">$this</span>-&gt;cache-&gt;<span class="title function_ invoke__">get</span>(<span class="variable">$cacheKey</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="variable">$cachedResult</span> !== <span class="literal">false</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="variable">$cachedResult</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 执行搜索</span></span><br><span class="line"><span class="variable">$result</span> = <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">performSearch</span>(<span class="variable">$filterKeywords</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 缓存结果</span></span><br><span class="line"><span class="variable language_">$this</span>-&gt;cache-&gt;<span class="title function_ invoke__">set</span>(<span class="variable">$cacheKey</span>, <span class="variable">$result</span>, <span class="number">3600</span>); <span class="comment">// 缓存1小时</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="variable">$result</span>;</span><br></pre></td></tr></table></figure><h2 id="兼容性考虑"><a href="#兼容性考虑" class="headerlink" title="兼容性考虑"></a>兼容性考虑</h2><h3 id="1-版本兼容"><a href="#1-版本兼容" class="headerlink" title="1. 版本兼容"></a>1. 版本兼容</h3><p>确保修改后的代码与ongwu版本兼容：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 检查ongwu版本</span></span><br><span class="line"><span class="keyword">if</span> (<span class="title function_ invoke__">version_compare</span>(ongwu_<span class="title class_">Common</span>::<span class="variable constant_">VERSION</span>, <span class="string">&#x27;1.2.0&#x27;</span>, <span class="string">&#x27;&gt;=&#x27;</span>)) &#123;</span><br><span class="line">    <span class="comment">// 新版本代码</span></span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="comment">// 旧版本兼容代码</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2-插件兼容"><a href="#2-插件兼容" class="headerlink" title="2. 插件兼容"></a>2. 插件兼容</h3><p>如果使用了其他搜索相关插件，需要确保兼容性：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 检查是否有其他搜索插件</span></span><br><span class="line"><span class="keyword">if</span> (<span class="title function_ invoke__">class_exists</span>(<span class="string">&#x27;Widget_Archive_Search&#x27;</span>)) &#123;</span><br><span class="line">    <span class="comment">// 使用插件提供的搜索功能</span></span><br><span class="line">    <span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">pluginSearch</span>(<span class="variable">$filterKeywords</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>通过修改ongwu源码，我们可以实现符号搜索功能，但需要注意：</p><ol><li><strong>安全性</strong>：使用<code>addslashes</code>或预处理语句防止SQL注入</li><li><strong>性能</strong>：添加适当的数据库索引和缓存机制</li><li><strong>兼容性</strong>：确保与ongwu版本和其他插件的兼容性</li><li><strong>维护性</strong>：记录修改内容，便于后续升级</li></ol><p>这样修改后，ongwu就能支持包含符号的搜索了，满足更复杂的搜索需求。</p><hr><p><em>注意：修改源码后，在ongwu升级时需要重新应用这些修改。建议将修改内容记录在文档中，或者创建补丁文件。</em></p>]]></content>
      
      
      <categories>
          
          <category> tutorial </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ongwu </tag>
            
            <tag> 搜索功能 </tag>
            
            <tag> 源码修改 </tag>
            
            <tag> 符号搜索 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>让ongwu支持搜索符号</title>
      <link href="/2025/01/09/7%20-%20%E5%89%AF%E6%9C%AC%20(17)%20-%20%E5%89%AF%E6%9C%AC/"/>
      <url>/2025/01/09/7%20-%20%E5%89%AF%E6%9C%AC%20(17)%20-%20%E5%89%AF%E6%9C%AC/</url>
      
        <content type="html"><![CDATA[<h1 id="让ongwu支持搜索符号"><a href="#让ongwu支持搜索符号" class="headerlink" title="让ongwu支持搜索符号"></a>让ongwu支持搜索符号</h1><h2 id="问题背景"><a href="#问题背景" class="headerlink" title="问题背景"></a>问题背景</h2><p>用过ongwu的应该都清楚它本身搜索是不支持符号的，一般都会过滤掉，只会保留文字字母数字进行搜索。这种过滤应该是出于安全考虑的，但如果你的需求需要搜索符号之类的东西，则可以通过修改源码的方式实现。</p><h2 id="修改原理"><a href="#修改原理" class="headerlink" title="修改原理"></a>修改原理</h2><p>ongwu的搜索功能是在<code>var/Widget/Archive.php</code>中实现的，所以需要修改两处代码：</p><h3 id="第一处：关键词过滤逻辑"><a href="#第一处：关键词过滤逻辑" class="headerlink" title="第一处：关键词过滤逻辑"></a>第一处：关键词过滤逻辑</h3><p>在<code>var/Widget/Archive.php</code>文件中找到以下代码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 原始代码</span></span><br><span class="line"><span class="variable">$filterKeywords</span> = <span class="variable language_">$this</span>-&gt;request-&gt;<span class="title function_ invoke__">get</span>(<span class="string">&#x27;keywords&#x27;</span>);</span><br><span class="line"><span class="variable">$filterKeywords</span> = <span class="title function_ invoke__">trim</span>(<span class="variable">$filterKeywords</span>);</span><br><span class="line"><span class="variable">$filterKeywords</span> = <span class="title function_ invoke__">str_replace</span>(<span class="keyword">array</span>(<span class="string">&#x27;+&#x27;</span>, <span class="string">&#x27;-&#x27;</span>, <span class="string">&#x27;&amp;&#x27;</span>, <span class="string">&#x27;|&#x27;</span>, <span class="string">&#x27;!&#x27;</span>, <span class="string">&#x27;(&#x27;</span>, <span class="string">&#x27;)&#x27;</span>, <span class="string">&#x27;&#123;&#x27;</span>, <span class="string">&#x27;&#125;&#x27;</span>, <span class="string">&#x27;[&#x27;</span>, <span class="string">&#x27;]&#x27;</span>, <span class="string">&#x27;^&#x27;</span>, <span class="string">&#x27;&quot;&#x27;</span>, <span class="string">&#x27;~&#x27;</span>, <span class="string">&#x27;*&#x27;</span>, <span class="string">&#x27;?&#x27;</span>, <span class="string">&#x27;:&#x27;</span>, <span class="string">&#x27;\\&#x27;</span>), <span class="string">&#x27;&#x27;</span>, <span class="variable">$filterKeywords</span>);</span><br></pre></td></tr></table></figure><p>修改为：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 修改后的代码</span></span><br><span class="line"><span class="variable">$filterKeywords</span> = <span class="variable language_">$this</span>-&gt;request-&gt;<span class="title function_ invoke__">get</span>(<span class="string">&#x27;keywords&#x27;</span>);</span><br><span class="line"><span class="variable">$filterKeywords</span> = <span class="title function_ invoke__">trim</span>(<span class="variable">$filterKeywords</span>);</span><br><span class="line"><span class="comment">// 注释掉或删除符号过滤代码</span></span><br><span class="line"><span class="comment">// $filterKeywords = str_replace(array(&#x27;+&#x27;, &#x27;-&#x27;, &#x27;&amp;&#x27;, &#x27;|&#x27;, &#x27;!&#x27;, &#x27;(&#x27;, &#x27;)&#x27;, &#x27;&#123;&#x27;, &#x27;&#125;&#x27;, &#x27;[&#x27;, &#x27;]&#x27;, &#x27;^&#x27;, &#x27;&quot;&#x27;, &#x27;~&#x27;, &#x27;*&#x27;, &#x27;?&#x27;, &#x27;:&#x27;, &#x27;\\&#x27;), &#x27;&#x27;, $filterKeywords);</span></span><br></pre></td></tr></table></figure><h3 id="第二处：SQL查询构建"><a href="#第二处：SQL查询构建" class="headerlink" title="第二处：SQL查询构建"></a>第二处：SQL查询构建</h3><p>找到构建SQL查询的部分：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 原始代码</span></span><br><span class="line"><span class="keyword">if</span> (!<span class="keyword">empty</span>(<span class="variable">$filterKeywords</span>)) &#123;</span><br><span class="line">    <span class="variable">$filterKeywords</span> = <span class="string">&#x27;%&#x27;</span> . <span class="variable">$filterKeywords</span> . <span class="string">&#x27;%&#x27;</span>;</span><br><span class="line">    <span class="variable language_">$this</span>-&gt;db-&gt;<span class="title function_ invoke__">where</span>(<span class="string">&#x27;table.contents.title LIKE ? OR table.contents.text LIKE ?&#x27;</span>, <span class="variable">$filterKeywords</span>, <span class="variable">$filterKeywords</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>修改为：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 修改后的代码</span></span><br><span class="line"><span class="keyword">if</span> (!<span class="keyword">empty</span>(<span class="variable">$filterKeywords</span>)) &#123;</span><br><span class="line">    <span class="comment">// 支持特殊符号的搜索</span></span><br><span class="line">    <span class="variable">$filterKeywords</span> = <span class="string">&#x27;%&#x27;</span> . <span class="title function_ invoke__">addslashes</span>(<span class="variable">$filterKeywords</span>) . <span class="string">&#x27;%&#x27;</span>;</span><br><span class="line">    <span class="variable language_">$this</span>-&gt;db-&gt;<span class="title function_ invoke__">where</span>(<span class="string">&#x27;table.contents.title LIKE ? OR table.contents.text LIKE ?&#x27;</span>, <span class="variable">$filterKeywords</span>, <span class="variable">$filterKeywords</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="完整修改示例"><a href="#完整修改示例" class="headerlink" title="完整修改示例"></a>完整修改示例</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">// var/Widget/Archive.php 修改示例</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Widget_Archive</span> <span class="keyword">extends</span> <span class="title">Widget_Abstract_Contents</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="comment">// ... 其他代码 ...</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 执行搜索</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">search</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;db-&gt;<span class="title function_ invoke__">select</span>(<span class="string">&#x27;table.contents.cid&#x27;</span>, <span class="string">&#x27;table.contents.title&#x27;</span>, <span class="string">&#x27;table.contents.slug&#x27;</span>, <span class="string">&#x27;table.contents.created&#x27;</span>, <span class="string">&#x27;table.contents.authorId&#x27;</span>, <span class="string">&#x27;table.contents.modified&#x27;</span>, <span class="string">&#x27;table.contents.type&#x27;</span>, <span class="string">&#x27;table.contents.status&#x27;</span>, <span class="string">&#x27;table.contents.password&#x27;</span>, <span class="string">&#x27;table.contents.commentsNum&#x27;</span>, <span class="string">&#x27;table.contents.order&#x27;</span>, <span class="string">&#x27;table.contents.template&#x27;</span>, <span class="string">&#x27;table.contents.allowComment&#x27;</span>, <span class="string">&#x27;table.contents.allowPing&#x27;</span>, <span class="string">&#x27;table.contents.allowFeed&#x27;</span>);</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;db-&gt;<span class="keyword">from</span>(<span class="string">&#x27;table.contents&#x27;</span>);</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 获取搜索关键词</span></span><br><span class="line">        <span class="variable">$filterKeywords</span> = <span class="variable language_">$this</span>-&gt;request-&gt;<span class="title function_ invoke__">get</span>(<span class="string">&#x27;keywords&#x27;</span>);</span><br><span class="line">        <span class="variable">$filterKeywords</span> = <span class="title function_ invoke__">trim</span>(<span class="variable">$filterKeywords</span>);</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 注释掉符号过滤，支持符号搜索</span></span><br><span class="line">        <span class="comment">// $filterKeywords = str_replace(array(&#x27;+&#x27;, &#x27;-&#x27;, &#x27;&amp;&#x27;, &#x27;|&#x27;, &#x27;!&#x27;, &#x27;(&#x27;, &#x27;)&#x27;, &#x27;&#123;&#x27;, &#x27;&#125;&#x27;, &#x27;[&#x27;, &#x27;]&#x27;, &#x27;^&#x27;, &#x27;&quot;&#x27;, &#x27;~&#x27;, &#x27;*&#x27;, &#x27;?&#x27;, &#x27;:&#x27;, &#x27;\\&#x27;), &#x27;&#x27;, $filterKeywords);</span></span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> (!<span class="keyword">empty</span>(<span class="variable">$filterKeywords</span>)) &#123;</span><br><span class="line">            <span class="comment">// 使用addslashes防止SQL注入，同时支持符号搜索</span></span><br><span class="line">            <span class="variable">$filterKeywords</span> = <span class="string">&#x27;%&#x27;</span> . <span class="title function_ invoke__">addslashes</span>(<span class="variable">$filterKeywords</span>) . <span class="string">&#x27;%&#x27;</span>;</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;db-&gt;<span class="title function_ invoke__">where</span>(<span class="string">&#x27;table.contents.title LIKE ? OR table.contents.text LIKE ?&#x27;</span>, <span class="variable">$filterKeywords</span>, <span class="variable">$filterKeywords</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// ... 其他搜索逻辑 ...</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="安全注意事项"><a href="#安全注意事项" class="headerlink" title="安全注意事项"></a>安全注意事项</h2><h3 id="1-SQL注入防护"><a href="#1-SQL注入防护" class="headerlink" title="1. SQL注入防护"></a>1. SQL注入防护</h3><p>虽然我们允许符号搜索，但必须确保SQL安全：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 使用addslashes或更好的方法处理输入</span></span><br><span class="line"><span class="variable">$filterKeywords</span> = <span class="title function_ invoke__">addslashes</span>(<span class="variable">$filterKeywords</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 或者使用预处理语句</span></span><br><span class="line"><span class="variable">$stmt</span> = <span class="variable language_">$this</span>-&gt;db-&gt;<span class="title function_ invoke__">prepare</span>(<span class="string">&#x27;SELECT * FROM table.contents WHERE title LIKE ? OR text LIKE ?&#x27;</span>);</span><br><span class="line"><span class="variable">$stmt</span>-&gt;<span class="title function_ invoke__">execute</span>(<span class="keyword">array</span>(<span class="variable">$filterKeywords</span>, <span class="variable">$filterKeywords</span>));</span><br></pre></td></tr></table></figure><h3 id="2-输入验证"><a href="#2-输入验证" class="headerlink" title="2. 输入验证"></a>2. 输入验证</h3><p>添加输入长度和内容验证：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 验证搜索关键词长度</span></span><br><span class="line"><span class="keyword">if</span> (<span class="title function_ invoke__">strlen</span>(<span class="variable">$filterKeywords</span>) &gt; <span class="number">100</span>) &#123;</span><br><span class="line">    <span class="variable">$filterKeywords</span> = <span class="title function_ invoke__">substr</span>(<span class="variable">$filterKeywords</span>, <span class="number">0</span>, <span class="number">100</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 验证是否包含恶意内容</span></span><br><span class="line"><span class="keyword">if</span> (<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/&lt;script|javascript|vbscript|onload|onerror/i&#x27;</span>, <span class="variable">$filterKeywords</span>)) &#123;</span><br><span class="line">    <span class="variable">$filterKeywords</span> = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="测试验证"><a href="#测试验证" class="headerlink" title="测试验证"></a>测试验证</h2><h3 id="1-基本符号测试"><a href="#1-基本符号测试" class="headerlink" title="1. 基本符号测试"></a>1. 基本符号测试</h3><p>测试以下符号是否能正常搜索：</p><ul><li><code>+</code> 加号</li><li><code>-</code> 减号</li><li><code>&amp;</code> 与号</li><li><code>|</code> 或号</li><li><code>!</code> 感叹号</li><li><code>()</code> 括号</li><li><code>[]</code> 方括号</li><li><code>&#123;&#125;</code> 花括号</li></ul><h3 id="2-复杂搜索测试"><a href="#2-复杂搜索测试" class="headerlink" title="2. 复杂搜索测试"></a>2. 复杂搜索测试</h3><p>测试复杂搜索表达式：</p><ul><li><code>PHP + MySQL</code></li><li><code>(前端|后端)开发</code></li><li><code>ongwu &amp; 插件</code></li><li><code>[重要] 更新</code></li></ul><h2 id="性能优化建议"><a href="#性能优化建议" class="headerlink" title="性能优化建议"></a>性能优化建议</h2><h3 id="1-索引优化"><a href="#1-索引优化" class="headerlink" title="1. 索引优化"></a>1. 索引优化</h3><p>为搜索字段添加数据库索引：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 为标题和内容字段添加全文索引</span></span><br><span class="line"><span class="keyword">ALTER TABLE</span> ongwu_contents <span class="keyword">ADD</span> FULLTEXT(title, text);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 或者添加普通索引</span></span><br><span class="line"><span class="keyword">CREATE</span> INDEX idx_contents_title <span class="keyword">ON</span> ongwu_contents(title);</span><br><span class="line"><span class="keyword">CREATE</span> INDEX idx_contents_text <span class="keyword">ON</span> ongwu_contents(text);</span><br></pre></td></tr></table></figure><h3 id="2-搜索结果缓存"><a href="#2-搜索结果缓存" class="headerlink" title="2. 搜索结果缓存"></a>2. 搜索结果缓存</h3><p>实现搜索结果缓存机制：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 缓存搜索结果</span></span><br><span class="line"><span class="variable">$cacheKey</span> = <span class="string">&#x27;search_&#x27;</span> . <span class="title function_ invoke__">md5</span>(<span class="variable">$filterKeywords</span>);</span><br><span class="line"><span class="variable">$cachedResult</span> = <span class="variable language_">$this</span>-&gt;cache-&gt;<span class="title function_ invoke__">get</span>(<span class="variable">$cacheKey</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="variable">$cachedResult</span> !== <span class="literal">false</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="variable">$cachedResult</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 执行搜索</span></span><br><span class="line"><span class="variable">$result</span> = <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">performSearch</span>(<span class="variable">$filterKeywords</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 缓存结果</span></span><br><span class="line"><span class="variable language_">$this</span>-&gt;cache-&gt;<span class="title function_ invoke__">set</span>(<span class="variable">$cacheKey</span>, <span class="variable">$result</span>, <span class="number">3600</span>); <span class="comment">// 缓存1小时</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="variable">$result</span>;</span><br></pre></td></tr></table></figure><h2 id="兼容性考虑"><a href="#兼容性考虑" class="headerlink" title="兼容性考虑"></a>兼容性考虑</h2><h3 id="1-版本兼容"><a href="#1-版本兼容" class="headerlink" title="1. 版本兼容"></a>1. 版本兼容</h3><p>确保修改后的代码与ongwu版本兼容：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 检查ongwu版本</span></span><br><span class="line"><span class="keyword">if</span> (<span class="title function_ invoke__">version_compare</span>(ongwu_<span class="title class_">Common</span>::<span class="variable constant_">VERSION</span>, <span class="string">&#x27;1.2.0&#x27;</span>, <span class="string">&#x27;&gt;=&#x27;</span>)) &#123;</span><br><span class="line">    <span class="comment">// 新版本代码</span></span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="comment">// 旧版本兼容代码</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2-插件兼容"><a href="#2-插件兼容" class="headerlink" title="2. 插件兼容"></a>2. 插件兼容</h3><p>如果使用了其他搜索相关插件，需要确保兼容性：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 检查是否有其他搜索插件</span></span><br><span class="line"><span class="keyword">if</span> (<span class="title function_ invoke__">class_exists</span>(<span class="string">&#x27;Widget_Archive_Search&#x27;</span>)) &#123;</span><br><span class="line">    <span class="comment">// 使用插件提供的搜索功能</span></span><br><span class="line">    <span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">pluginSearch</span>(<span class="variable">$filterKeywords</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>通过修改ongwu源码，我们可以实现符号搜索功能，但需要注意：</p><ol><li><strong>安全性</strong>：使用<code>addslashes</code>或预处理语句防止SQL注入</li><li><strong>性能</strong>：添加适当的数据库索引和缓存机制</li><li><strong>兼容性</strong>：确保与ongwu版本和其他插件的兼容性</li><li><strong>维护性</strong>：记录修改内容，便于后续升级</li></ol><p>这样修改后，ongwu就能支持包含符号的搜索了，满足更复杂的搜索需求。</p><hr><p><em>注意：修改源码后，在ongwu升级时需要重新应用这些修改。建议将修改内容记录在文档中，或者创建补丁文件。</em></p>]]></content>
      
      
      <categories>
          
          <category> tutorial </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ongwu </tag>
            
            <tag> 搜索功能 </tag>
            
            <tag> 源码修改 </tag>
            
            <tag> 符号搜索 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>让ongwu支持搜索符号</title>
      <link href="/2025/01/09/7%20-%20%E5%89%AF%E6%9C%AC%20(18)%20-%20%E5%89%AF%E6%9C%AC/"/>
      <url>/2025/01/09/7%20-%20%E5%89%AF%E6%9C%AC%20(18)%20-%20%E5%89%AF%E6%9C%AC/</url>
      
        <content type="html"><![CDATA[<h1 id="让ongwu支持搜索符号"><a href="#让ongwu支持搜索符号" class="headerlink" title="让ongwu支持搜索符号"></a>让ongwu支持搜索符号</h1><h2 id="问题背景"><a href="#问题背景" class="headerlink" title="问题背景"></a>问题背景</h2><p>用过ongwu的应该都清楚它本身搜索是不支持符号的，一般都会过滤掉，只会保留文字字母数字进行搜索。这种过滤应该是出于安全考虑的，但如果你的需求需要搜索符号之类的东西，则可以通过修改源码的方式实现。</p><h2 id="修改原理"><a href="#修改原理" class="headerlink" title="修改原理"></a>修改原理</h2><p>ongwu的搜索功能是在<code>var/Widget/Archive.php</code>中实现的，所以需要修改两处代码：</p><h3 id="第一处：关键词过滤逻辑"><a href="#第一处：关键词过滤逻辑" class="headerlink" title="第一处：关键词过滤逻辑"></a>第一处：关键词过滤逻辑</h3><p>在<code>var/Widget/Archive.php</code>文件中找到以下代码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 原始代码</span></span><br><span class="line"><span class="variable">$filterKeywords</span> = <span class="variable language_">$this</span>-&gt;request-&gt;<span class="title function_ invoke__">get</span>(<span class="string">&#x27;keywords&#x27;</span>);</span><br><span class="line"><span class="variable">$filterKeywords</span> = <span class="title function_ invoke__">trim</span>(<span class="variable">$filterKeywords</span>);</span><br><span class="line"><span class="variable">$filterKeywords</span> = <span class="title function_ invoke__">str_replace</span>(<span class="keyword">array</span>(<span class="string">&#x27;+&#x27;</span>, <span class="string">&#x27;-&#x27;</span>, <span class="string">&#x27;&amp;&#x27;</span>, <span class="string">&#x27;|&#x27;</span>, <span class="string">&#x27;!&#x27;</span>, <span class="string">&#x27;(&#x27;</span>, <span class="string">&#x27;)&#x27;</span>, <span class="string">&#x27;&#123;&#x27;</span>, <span class="string">&#x27;&#125;&#x27;</span>, <span class="string">&#x27;[&#x27;</span>, <span class="string">&#x27;]&#x27;</span>, <span class="string">&#x27;^&#x27;</span>, <span class="string">&#x27;&quot;&#x27;</span>, <span class="string">&#x27;~&#x27;</span>, <span class="string">&#x27;*&#x27;</span>, <span class="string">&#x27;?&#x27;</span>, <span class="string">&#x27;:&#x27;</span>, <span class="string">&#x27;\\&#x27;</span>), <span class="string">&#x27;&#x27;</span>, <span class="variable">$filterKeywords</span>);</span><br></pre></td></tr></table></figure><p>修改为：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 修改后的代码</span></span><br><span class="line"><span class="variable">$filterKeywords</span> = <span class="variable language_">$this</span>-&gt;request-&gt;<span class="title function_ invoke__">get</span>(<span class="string">&#x27;keywords&#x27;</span>);</span><br><span class="line"><span class="variable">$filterKeywords</span> = <span class="title function_ invoke__">trim</span>(<span class="variable">$filterKeywords</span>);</span><br><span class="line"><span class="comment">// 注释掉或删除符号过滤代码</span></span><br><span class="line"><span class="comment">// $filterKeywords = str_replace(array(&#x27;+&#x27;, &#x27;-&#x27;, &#x27;&amp;&#x27;, &#x27;|&#x27;, &#x27;!&#x27;, &#x27;(&#x27;, &#x27;)&#x27;, &#x27;&#123;&#x27;, &#x27;&#125;&#x27;, &#x27;[&#x27;, &#x27;]&#x27;, &#x27;^&#x27;, &#x27;&quot;&#x27;, &#x27;~&#x27;, &#x27;*&#x27;, &#x27;?&#x27;, &#x27;:&#x27;, &#x27;\\&#x27;), &#x27;&#x27;, $filterKeywords);</span></span><br></pre></td></tr></table></figure><h3 id="第二处：SQL查询构建"><a href="#第二处：SQL查询构建" class="headerlink" title="第二处：SQL查询构建"></a>第二处：SQL查询构建</h3><p>找到构建SQL查询的部分：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 原始代码</span></span><br><span class="line"><span class="keyword">if</span> (!<span class="keyword">empty</span>(<span class="variable">$filterKeywords</span>)) &#123;</span><br><span class="line">    <span class="variable">$filterKeywords</span> = <span class="string">&#x27;%&#x27;</span> . <span class="variable">$filterKeywords</span> . <span class="string">&#x27;%&#x27;</span>;</span><br><span class="line">    <span class="variable language_">$this</span>-&gt;db-&gt;<span class="title function_ invoke__">where</span>(<span class="string">&#x27;table.contents.title LIKE ? OR table.contents.text LIKE ?&#x27;</span>, <span class="variable">$filterKeywords</span>, <span class="variable">$filterKeywords</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>修改为：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 修改后的代码</span></span><br><span class="line"><span class="keyword">if</span> (!<span class="keyword">empty</span>(<span class="variable">$filterKeywords</span>)) &#123;</span><br><span class="line">    <span class="comment">// 支持特殊符号的搜索</span></span><br><span class="line">    <span class="variable">$filterKeywords</span> = <span class="string">&#x27;%&#x27;</span> . <span class="title function_ invoke__">addslashes</span>(<span class="variable">$filterKeywords</span>) . <span class="string">&#x27;%&#x27;</span>;</span><br><span class="line">    <span class="variable language_">$this</span>-&gt;db-&gt;<span class="title function_ invoke__">where</span>(<span class="string">&#x27;table.contents.title LIKE ? OR table.contents.text LIKE ?&#x27;</span>, <span class="variable">$filterKeywords</span>, <span class="variable">$filterKeywords</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="完整修改示例"><a href="#完整修改示例" class="headerlink" title="完整修改示例"></a>完整修改示例</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">// var/Widget/Archive.php 修改示例</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Widget_Archive</span> <span class="keyword">extends</span> <span class="title">Widget_Abstract_Contents</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="comment">// ... 其他代码 ...</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 执行搜索</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">search</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;db-&gt;<span class="title function_ invoke__">select</span>(<span class="string">&#x27;table.contents.cid&#x27;</span>, <span class="string">&#x27;table.contents.title&#x27;</span>, <span class="string">&#x27;table.contents.slug&#x27;</span>, <span class="string">&#x27;table.contents.created&#x27;</span>, <span class="string">&#x27;table.contents.authorId&#x27;</span>, <span class="string">&#x27;table.contents.modified&#x27;</span>, <span class="string">&#x27;table.contents.type&#x27;</span>, <span class="string">&#x27;table.contents.status&#x27;</span>, <span class="string">&#x27;table.contents.password&#x27;</span>, <span class="string">&#x27;table.contents.commentsNum&#x27;</span>, <span class="string">&#x27;table.contents.order&#x27;</span>, <span class="string">&#x27;table.contents.template&#x27;</span>, <span class="string">&#x27;table.contents.allowComment&#x27;</span>, <span class="string">&#x27;table.contents.allowPing&#x27;</span>, <span class="string">&#x27;table.contents.allowFeed&#x27;</span>);</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;db-&gt;<span class="keyword">from</span>(<span class="string">&#x27;table.contents&#x27;</span>);</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 获取搜索关键词</span></span><br><span class="line">        <span class="variable">$filterKeywords</span> = <span class="variable language_">$this</span>-&gt;request-&gt;<span class="title function_ invoke__">get</span>(<span class="string">&#x27;keywords&#x27;</span>);</span><br><span class="line">        <span class="variable">$filterKeywords</span> = <span class="title function_ invoke__">trim</span>(<span class="variable">$filterKeywords</span>);</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 注释掉符号过滤，支持符号搜索</span></span><br><span class="line">        <span class="comment">// $filterKeywords = str_replace(array(&#x27;+&#x27;, &#x27;-&#x27;, &#x27;&amp;&#x27;, &#x27;|&#x27;, &#x27;!&#x27;, &#x27;(&#x27;, &#x27;)&#x27;, &#x27;&#123;&#x27;, &#x27;&#125;&#x27;, &#x27;[&#x27;, &#x27;]&#x27;, &#x27;^&#x27;, &#x27;&quot;&#x27;, &#x27;~&#x27;, &#x27;*&#x27;, &#x27;?&#x27;, &#x27;:&#x27;, &#x27;\\&#x27;), &#x27;&#x27;, $filterKeywords);</span></span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> (!<span class="keyword">empty</span>(<span class="variable">$filterKeywords</span>)) &#123;</span><br><span class="line">            <span class="comment">// 使用addslashes防止SQL注入，同时支持符号搜索</span></span><br><span class="line">            <span class="variable">$filterKeywords</span> = <span class="string">&#x27;%&#x27;</span> . <span class="title function_ invoke__">addslashes</span>(<span class="variable">$filterKeywords</span>) . <span class="string">&#x27;%&#x27;</span>;</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;db-&gt;<span class="title function_ invoke__">where</span>(<span class="string">&#x27;table.contents.title LIKE ? OR table.contents.text LIKE ?&#x27;</span>, <span class="variable">$filterKeywords</span>, <span class="variable">$filterKeywords</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// ... 其他搜索逻辑 ...</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="安全注意事项"><a href="#安全注意事项" class="headerlink" title="安全注意事项"></a>安全注意事项</h2><h3 id="1-SQL注入防护"><a href="#1-SQL注入防护" class="headerlink" title="1. SQL注入防护"></a>1. SQL注入防护</h3><p>虽然我们允许符号搜索，但必须确保SQL安全：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 使用addslashes或更好的方法处理输入</span></span><br><span class="line"><span class="variable">$filterKeywords</span> = <span class="title function_ invoke__">addslashes</span>(<span class="variable">$filterKeywords</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 或者使用预处理语句</span></span><br><span class="line"><span class="variable">$stmt</span> = <span class="variable language_">$this</span>-&gt;db-&gt;<span class="title function_ invoke__">prepare</span>(<span class="string">&#x27;SELECT * FROM table.contents WHERE title LIKE ? OR text LIKE ?&#x27;</span>);</span><br><span class="line"><span class="variable">$stmt</span>-&gt;<span class="title function_ invoke__">execute</span>(<span class="keyword">array</span>(<span class="variable">$filterKeywords</span>, <span class="variable">$filterKeywords</span>));</span><br></pre></td></tr></table></figure><h3 id="2-输入验证"><a href="#2-输入验证" class="headerlink" title="2. 输入验证"></a>2. 输入验证</h3><p>添加输入长度和内容验证：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 验证搜索关键词长度</span></span><br><span class="line"><span class="keyword">if</span> (<span class="title function_ invoke__">strlen</span>(<span class="variable">$filterKeywords</span>) &gt; <span class="number">100</span>) &#123;</span><br><span class="line">    <span class="variable">$filterKeywords</span> = <span class="title function_ invoke__">substr</span>(<span class="variable">$filterKeywords</span>, <span class="number">0</span>, <span class="number">100</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 验证是否包含恶意内容</span></span><br><span class="line"><span class="keyword">if</span> (<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/&lt;script|javascript|vbscript|onload|onerror/i&#x27;</span>, <span class="variable">$filterKeywords</span>)) &#123;</span><br><span class="line">    <span class="variable">$filterKeywords</span> = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="测试验证"><a href="#测试验证" class="headerlink" title="测试验证"></a>测试验证</h2><h3 id="1-基本符号测试"><a href="#1-基本符号测试" class="headerlink" title="1. 基本符号测试"></a>1. 基本符号测试</h3><p>测试以下符号是否能正常搜索：</p><ul><li><code>+</code> 加号</li><li><code>-</code> 减号</li><li><code>&amp;</code> 与号</li><li><code>|</code> 或号</li><li><code>!</code> 感叹号</li><li><code>()</code> 括号</li><li><code>[]</code> 方括号</li><li><code>&#123;&#125;</code> 花括号</li></ul><h3 id="2-复杂搜索测试"><a href="#2-复杂搜索测试" class="headerlink" title="2. 复杂搜索测试"></a>2. 复杂搜索测试</h3><p>测试复杂搜索表达式：</p><ul><li><code>PHP + MySQL</code></li><li><code>(前端|后端)开发</code></li><li><code>ongwu &amp; 插件</code></li><li><code>[重要] 更新</code></li></ul><h2 id="性能优化建议"><a href="#性能优化建议" class="headerlink" title="性能优化建议"></a>性能优化建议</h2><h3 id="1-索引优化"><a href="#1-索引优化" class="headerlink" title="1. 索引优化"></a>1. 索引优化</h3><p>为搜索字段添加数据库索引：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 为标题和内容字段添加全文索引</span></span><br><span class="line"><span class="keyword">ALTER TABLE</span> ongwu_contents <span class="keyword">ADD</span> FULLTEXT(title, text);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 或者添加普通索引</span></span><br><span class="line"><span class="keyword">CREATE</span> INDEX idx_contents_title <span class="keyword">ON</span> ongwu_contents(title);</span><br><span class="line"><span class="keyword">CREATE</span> INDEX idx_contents_text <span class="keyword">ON</span> ongwu_contents(text);</span><br></pre></td></tr></table></figure><h3 id="2-搜索结果缓存"><a href="#2-搜索结果缓存" class="headerlink" title="2. 搜索结果缓存"></a>2. 搜索结果缓存</h3><p>实现搜索结果缓存机制：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 缓存搜索结果</span></span><br><span class="line"><span class="variable">$cacheKey</span> = <span class="string">&#x27;search_&#x27;</span> . <span class="title function_ invoke__">md5</span>(<span class="variable">$filterKeywords</span>);</span><br><span class="line"><span class="variable">$cachedResult</span> = <span class="variable language_">$this</span>-&gt;cache-&gt;<span class="title function_ invoke__">get</span>(<span class="variable">$cacheKey</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="variable">$cachedResult</span> !== <span class="literal">false</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="variable">$cachedResult</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 执行搜索</span></span><br><span class="line"><span class="variable">$result</span> = <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">performSearch</span>(<span class="variable">$filterKeywords</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 缓存结果</span></span><br><span class="line"><span class="variable language_">$this</span>-&gt;cache-&gt;<span class="title function_ invoke__">set</span>(<span class="variable">$cacheKey</span>, <span class="variable">$result</span>, <span class="number">3600</span>); <span class="comment">// 缓存1小时</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="variable">$result</span>;</span><br></pre></td></tr></table></figure><h2 id="兼容性考虑"><a href="#兼容性考虑" class="headerlink" title="兼容性考虑"></a>兼容性考虑</h2><h3 id="1-版本兼容"><a href="#1-版本兼容" class="headerlink" title="1. 版本兼容"></a>1. 版本兼容</h3><p>确保修改后的代码与ongwu版本兼容：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 检查ongwu版本</span></span><br><span class="line"><span class="keyword">if</span> (<span class="title function_ invoke__">version_compare</span>(ongwu_<span class="title class_">Common</span>::<span class="variable constant_">VERSION</span>, <span class="string">&#x27;1.2.0&#x27;</span>, <span class="string">&#x27;&gt;=&#x27;</span>)) &#123;</span><br><span class="line">    <span class="comment">// 新版本代码</span></span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="comment">// 旧版本兼容代码</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2-插件兼容"><a href="#2-插件兼容" class="headerlink" title="2. 插件兼容"></a>2. 插件兼容</h3><p>如果使用了其他搜索相关插件，需要确保兼容性：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 检查是否有其他搜索插件</span></span><br><span class="line"><span class="keyword">if</span> (<span class="title function_ invoke__">class_exists</span>(<span class="string">&#x27;Widget_Archive_Search&#x27;</span>)) &#123;</span><br><span class="line">    <span class="comment">// 使用插件提供的搜索功能</span></span><br><span class="line">    <span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">pluginSearch</span>(<span class="variable">$filterKeywords</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>通过修改ongwu源码，我们可以实现符号搜索功能，但需要注意：</p><ol><li><strong>安全性</strong>：使用<code>addslashes</code>或预处理语句防止SQL注入</li><li><strong>性能</strong>：添加适当的数据库索引和缓存机制</li><li><strong>兼容性</strong>：确保与ongwu版本和其他插件的兼容性</li><li><strong>维护性</strong>：记录修改内容，便于后续升级</li></ol><p>这样修改后，ongwu就能支持包含符号的搜索了，满足更复杂的搜索需求。</p><hr><p><em>注意：修改源码后，在ongwu升级时需要重新应用这些修改。建议将修改内容记录在文档中，或者创建补丁文件。</em></p>]]></content>
      
      
      <categories>
          
          <category> tutorial </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ongwu </tag>
            
            <tag> 搜索功能 </tag>
            
            <tag> 源码修改 </tag>
            
            <tag> 符号搜索 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>让ongwu支持搜索符号</title>
      <link href="/2025/01/09/7%20-%20%E5%89%AF%E6%9C%AC%20(19)%20-%20%E5%89%AF%E6%9C%AC/"/>
      <url>/2025/01/09/7%20-%20%E5%89%AF%E6%9C%AC%20(19)%20-%20%E5%89%AF%E6%9C%AC/</url>
      
        <content type="html"><![CDATA[<h1 id="让ongwu支持搜索符号"><a href="#让ongwu支持搜索符号" class="headerlink" title="让ongwu支持搜索符号"></a>让ongwu支持搜索符号</h1><h2 id="问题背景"><a href="#问题背景" class="headerlink" title="问题背景"></a>问题背景</h2><p>用过ongwu的应该都清楚它本身搜索是不支持符号的，一般都会过滤掉，只会保留文字字母数字进行搜索。这种过滤应该是出于安全考虑的，但如果你的需求需要搜索符号之类的东西，则可以通过修改源码的方式实现。</p><h2 id="修改原理"><a href="#修改原理" class="headerlink" title="修改原理"></a>修改原理</h2><p>ongwu的搜索功能是在<code>var/Widget/Archive.php</code>中实现的，所以需要修改两处代码：</p><h3 id="第一处：关键词过滤逻辑"><a href="#第一处：关键词过滤逻辑" class="headerlink" title="第一处：关键词过滤逻辑"></a>第一处：关键词过滤逻辑</h3><p>在<code>var/Widget/Archive.php</code>文件中找到以下代码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 原始代码</span></span><br><span class="line"><span class="variable">$filterKeywords</span> = <span class="variable language_">$this</span>-&gt;request-&gt;<span class="title function_ invoke__">get</span>(<span class="string">&#x27;keywords&#x27;</span>);</span><br><span class="line"><span class="variable">$filterKeywords</span> = <span class="title function_ invoke__">trim</span>(<span class="variable">$filterKeywords</span>);</span><br><span class="line"><span class="variable">$filterKeywords</span> = <span class="title function_ invoke__">str_replace</span>(<span class="keyword">array</span>(<span class="string">&#x27;+&#x27;</span>, <span class="string">&#x27;-&#x27;</span>, <span class="string">&#x27;&amp;&#x27;</span>, <span class="string">&#x27;|&#x27;</span>, <span class="string">&#x27;!&#x27;</span>, <span class="string">&#x27;(&#x27;</span>, <span class="string">&#x27;)&#x27;</span>, <span class="string">&#x27;&#123;&#x27;</span>, <span class="string">&#x27;&#125;&#x27;</span>, <span class="string">&#x27;[&#x27;</span>, <span class="string">&#x27;]&#x27;</span>, <span class="string">&#x27;^&#x27;</span>, <span class="string">&#x27;&quot;&#x27;</span>, <span class="string">&#x27;~&#x27;</span>, <span class="string">&#x27;*&#x27;</span>, <span class="string">&#x27;?&#x27;</span>, <span class="string">&#x27;:&#x27;</span>, <span class="string">&#x27;\\&#x27;</span>), <span class="string">&#x27;&#x27;</span>, <span class="variable">$filterKeywords</span>);</span><br></pre></td></tr></table></figure><p>修改为：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 修改后的代码</span></span><br><span class="line"><span class="variable">$filterKeywords</span> = <span class="variable language_">$this</span>-&gt;request-&gt;<span class="title function_ invoke__">get</span>(<span class="string">&#x27;keywords&#x27;</span>);</span><br><span class="line"><span class="variable">$filterKeywords</span> = <span class="title function_ invoke__">trim</span>(<span class="variable">$filterKeywords</span>);</span><br><span class="line"><span class="comment">// 注释掉或删除符号过滤代码</span></span><br><span class="line"><span class="comment">// $filterKeywords = str_replace(array(&#x27;+&#x27;, &#x27;-&#x27;, &#x27;&amp;&#x27;, &#x27;|&#x27;, &#x27;!&#x27;, &#x27;(&#x27;, &#x27;)&#x27;, &#x27;&#123;&#x27;, &#x27;&#125;&#x27;, &#x27;[&#x27;, &#x27;]&#x27;, &#x27;^&#x27;, &#x27;&quot;&#x27;, &#x27;~&#x27;, &#x27;*&#x27;, &#x27;?&#x27;, &#x27;:&#x27;, &#x27;\\&#x27;), &#x27;&#x27;, $filterKeywords);</span></span><br></pre></td></tr></table></figure><h3 id="第二处：SQL查询构建"><a href="#第二处：SQL查询构建" class="headerlink" title="第二处：SQL查询构建"></a>第二处：SQL查询构建</h3><p>找到构建SQL查询的部分：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 原始代码</span></span><br><span class="line"><span class="keyword">if</span> (!<span class="keyword">empty</span>(<span class="variable">$filterKeywords</span>)) &#123;</span><br><span class="line">    <span class="variable">$filterKeywords</span> = <span class="string">&#x27;%&#x27;</span> . <span class="variable">$filterKeywords</span> . <span class="string">&#x27;%&#x27;</span>;</span><br><span class="line">    <span class="variable language_">$this</span>-&gt;db-&gt;<span class="title function_ invoke__">where</span>(<span class="string">&#x27;table.contents.title LIKE ? OR table.contents.text LIKE ?&#x27;</span>, <span class="variable">$filterKeywords</span>, <span class="variable">$filterKeywords</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>修改为：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 修改后的代码</span></span><br><span class="line"><span class="keyword">if</span> (!<span class="keyword">empty</span>(<span class="variable">$filterKeywords</span>)) &#123;</span><br><span class="line">    <span class="comment">// 支持特殊符号的搜索</span></span><br><span class="line">    <span class="variable">$filterKeywords</span> = <span class="string">&#x27;%&#x27;</span> . <span class="title function_ invoke__">addslashes</span>(<span class="variable">$filterKeywords</span>) . <span class="string">&#x27;%&#x27;</span>;</span><br><span class="line">    <span class="variable language_">$this</span>-&gt;db-&gt;<span class="title function_ invoke__">where</span>(<span class="string">&#x27;table.contents.title LIKE ? OR table.contents.text LIKE ?&#x27;</span>, <span class="variable">$filterKeywords</span>, <span class="variable">$filterKeywords</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="完整修改示例"><a href="#完整修改示例" class="headerlink" title="完整修改示例"></a>完整修改示例</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">// var/Widget/Archive.php 修改示例</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Widget_Archive</span> <span class="keyword">extends</span> <span class="title">Widget_Abstract_Contents</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="comment">// ... 其他代码 ...</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 执行搜索</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">search</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;db-&gt;<span class="title function_ invoke__">select</span>(<span class="string">&#x27;table.contents.cid&#x27;</span>, <span class="string">&#x27;table.contents.title&#x27;</span>, <span class="string">&#x27;table.contents.slug&#x27;</span>, <span class="string">&#x27;table.contents.created&#x27;</span>, <span class="string">&#x27;table.contents.authorId&#x27;</span>, <span class="string">&#x27;table.contents.modified&#x27;</span>, <span class="string">&#x27;table.contents.type&#x27;</span>, <span class="string">&#x27;table.contents.status&#x27;</span>, <span class="string">&#x27;table.contents.password&#x27;</span>, <span class="string">&#x27;table.contents.commentsNum&#x27;</span>, <span class="string">&#x27;table.contents.order&#x27;</span>, <span class="string">&#x27;table.contents.template&#x27;</span>, <span class="string">&#x27;table.contents.allowComment&#x27;</span>, <span class="string">&#x27;table.contents.allowPing&#x27;</span>, <span class="string">&#x27;table.contents.allowFeed&#x27;</span>);</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;db-&gt;<span class="keyword">from</span>(<span class="string">&#x27;table.contents&#x27;</span>);</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 获取搜索关键词</span></span><br><span class="line">        <span class="variable">$filterKeywords</span> = <span class="variable language_">$this</span>-&gt;request-&gt;<span class="title function_ invoke__">get</span>(<span class="string">&#x27;keywords&#x27;</span>);</span><br><span class="line">        <span class="variable">$filterKeywords</span> = <span class="title function_ invoke__">trim</span>(<span class="variable">$filterKeywords</span>);</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 注释掉符号过滤，支持符号搜索</span></span><br><span class="line">        <span class="comment">// $filterKeywords = str_replace(array(&#x27;+&#x27;, &#x27;-&#x27;, &#x27;&amp;&#x27;, &#x27;|&#x27;, &#x27;!&#x27;, &#x27;(&#x27;, &#x27;)&#x27;, &#x27;&#123;&#x27;, &#x27;&#125;&#x27;, &#x27;[&#x27;, &#x27;]&#x27;, &#x27;^&#x27;, &#x27;&quot;&#x27;, &#x27;~&#x27;, &#x27;*&#x27;, &#x27;?&#x27;, &#x27;:&#x27;, &#x27;\\&#x27;), &#x27;&#x27;, $filterKeywords);</span></span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> (!<span class="keyword">empty</span>(<span class="variable">$filterKeywords</span>)) &#123;</span><br><span class="line">            <span class="comment">// 使用addslashes防止SQL注入，同时支持符号搜索</span></span><br><span class="line">            <span class="variable">$filterKeywords</span> = <span class="string">&#x27;%&#x27;</span> . <span class="title function_ invoke__">addslashes</span>(<span class="variable">$filterKeywords</span>) . <span class="string">&#x27;%&#x27;</span>;</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;db-&gt;<span class="title function_ invoke__">where</span>(<span class="string">&#x27;table.contents.title LIKE ? OR table.contents.text LIKE ?&#x27;</span>, <span class="variable">$filterKeywords</span>, <span class="variable">$filterKeywords</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// ... 其他搜索逻辑 ...</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="安全注意事项"><a href="#安全注意事项" class="headerlink" title="安全注意事项"></a>安全注意事项</h2><h3 id="1-SQL注入防护"><a href="#1-SQL注入防护" class="headerlink" title="1. SQL注入防护"></a>1. SQL注入防护</h3><p>虽然我们允许符号搜索，但必须确保SQL安全：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 使用addslashes或更好的方法处理输入</span></span><br><span class="line"><span class="variable">$filterKeywords</span> = <span class="title function_ invoke__">addslashes</span>(<span class="variable">$filterKeywords</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 或者使用预处理语句</span></span><br><span class="line"><span class="variable">$stmt</span> = <span class="variable language_">$this</span>-&gt;db-&gt;<span class="title function_ invoke__">prepare</span>(<span class="string">&#x27;SELECT * FROM table.contents WHERE title LIKE ? OR text LIKE ?&#x27;</span>);</span><br><span class="line"><span class="variable">$stmt</span>-&gt;<span class="title function_ invoke__">execute</span>(<span class="keyword">array</span>(<span class="variable">$filterKeywords</span>, <span class="variable">$filterKeywords</span>));</span><br></pre></td></tr></table></figure><h3 id="2-输入验证"><a href="#2-输入验证" class="headerlink" title="2. 输入验证"></a>2. 输入验证</h3><p>添加输入长度和内容验证：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 验证搜索关键词长度</span></span><br><span class="line"><span class="keyword">if</span> (<span class="title function_ invoke__">strlen</span>(<span class="variable">$filterKeywords</span>) &gt; <span class="number">100</span>) &#123;</span><br><span class="line">    <span class="variable">$filterKeywords</span> = <span class="title function_ invoke__">substr</span>(<span class="variable">$filterKeywords</span>, <span class="number">0</span>, <span class="number">100</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 验证是否包含恶意内容</span></span><br><span class="line"><span class="keyword">if</span> (<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/&lt;script|javascript|vbscript|onload|onerror/i&#x27;</span>, <span class="variable">$filterKeywords</span>)) &#123;</span><br><span class="line">    <span class="variable">$filterKeywords</span> = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="测试验证"><a href="#测试验证" class="headerlink" title="测试验证"></a>测试验证</h2><h3 id="1-基本符号测试"><a href="#1-基本符号测试" class="headerlink" title="1. 基本符号测试"></a>1. 基本符号测试</h3><p>测试以下符号是否能正常搜索：</p><ul><li><code>+</code> 加号</li><li><code>-</code> 减号</li><li><code>&amp;</code> 与号</li><li><code>|</code> 或号</li><li><code>!</code> 感叹号</li><li><code>()</code> 括号</li><li><code>[]</code> 方括号</li><li><code>&#123;&#125;</code> 花括号</li></ul><h3 id="2-复杂搜索测试"><a href="#2-复杂搜索测试" class="headerlink" title="2. 复杂搜索测试"></a>2. 复杂搜索测试</h3><p>测试复杂搜索表达式：</p><ul><li><code>PHP + MySQL</code></li><li><code>(前端|后端)开发</code></li><li><code>ongwu &amp; 插件</code></li><li><code>[重要] 更新</code></li></ul><h2 id="性能优化建议"><a href="#性能优化建议" class="headerlink" title="性能优化建议"></a>性能优化建议</h2><h3 id="1-索引优化"><a href="#1-索引优化" class="headerlink" title="1. 索引优化"></a>1. 索引优化</h3><p>为搜索字段添加数据库索引：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 为标题和内容字段添加全文索引</span></span><br><span class="line"><span class="keyword">ALTER TABLE</span> ongwu_contents <span class="keyword">ADD</span> FULLTEXT(title, text);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 或者添加普通索引</span></span><br><span class="line"><span class="keyword">CREATE</span> INDEX idx_contents_title <span class="keyword">ON</span> ongwu_contents(title);</span><br><span class="line"><span class="keyword">CREATE</span> INDEX idx_contents_text <span class="keyword">ON</span> ongwu_contents(text);</span><br></pre></td></tr></table></figure><h3 id="2-搜索结果缓存"><a href="#2-搜索结果缓存" class="headerlink" title="2. 搜索结果缓存"></a>2. 搜索结果缓存</h3><p>实现搜索结果缓存机制：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 缓存搜索结果</span></span><br><span class="line"><span class="variable">$cacheKey</span> = <span class="string">&#x27;search_&#x27;</span> . <span class="title function_ invoke__">md5</span>(<span class="variable">$filterKeywords</span>);</span><br><span class="line"><span class="variable">$cachedResult</span> = <span class="variable language_">$this</span>-&gt;cache-&gt;<span class="title function_ invoke__">get</span>(<span class="variable">$cacheKey</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="variable">$cachedResult</span> !== <span class="literal">false</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="variable">$cachedResult</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 执行搜索</span></span><br><span class="line"><span class="variable">$result</span> = <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">performSearch</span>(<span class="variable">$filterKeywords</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 缓存结果</span></span><br><span class="line"><span class="variable language_">$this</span>-&gt;cache-&gt;<span class="title function_ invoke__">set</span>(<span class="variable">$cacheKey</span>, <span class="variable">$result</span>, <span class="number">3600</span>); <span class="comment">// 缓存1小时</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="variable">$result</span>;</span><br></pre></td></tr></table></figure><h2 id="兼容性考虑"><a href="#兼容性考虑" class="headerlink" title="兼容性考虑"></a>兼容性考虑</h2><h3 id="1-版本兼容"><a href="#1-版本兼容" class="headerlink" title="1. 版本兼容"></a>1. 版本兼容</h3><p>确保修改后的代码与ongwu版本兼容：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 检查ongwu版本</span></span><br><span class="line"><span class="keyword">if</span> (<span class="title function_ invoke__">version_compare</span>(ongwu_<span class="title class_">Common</span>::<span class="variable constant_">VERSION</span>, <span class="string">&#x27;1.2.0&#x27;</span>, <span class="string">&#x27;&gt;=&#x27;</span>)) &#123;</span><br><span class="line">    <span class="comment">// 新版本代码</span></span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="comment">// 旧版本兼容代码</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2-插件兼容"><a href="#2-插件兼容" class="headerlink" title="2. 插件兼容"></a>2. 插件兼容</h3><p>如果使用了其他搜索相关插件，需要确保兼容性：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 检查是否有其他搜索插件</span></span><br><span class="line"><span class="keyword">if</span> (<span class="title function_ invoke__">class_exists</span>(<span class="string">&#x27;Widget_Archive_Search&#x27;</span>)) &#123;</span><br><span class="line">    <span class="comment">// 使用插件提供的搜索功能</span></span><br><span class="line">    <span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">pluginSearch</span>(<span class="variable">$filterKeywords</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>通过修改ongwu源码，我们可以实现符号搜索功能，但需要注意：</p><ol><li><strong>安全性</strong>：使用<code>addslashes</code>或预处理语句防止SQL注入</li><li><strong>性能</strong>：添加适当的数据库索引和缓存机制</li><li><strong>兼容性</strong>：确保与ongwu版本和其他插件的兼容性</li><li><strong>维护性</strong>：记录修改内容，便于后续升级</li></ol><p>这样修改后，ongwu就能支持包含符号的搜索了，满足更复杂的搜索需求。</p><hr><p><em>注意：修改源码后，在ongwu升级时需要重新应用这些修改。建议将修改内容记录在文档中，或者创建补丁文件。</em></p>]]></content>
      
      
      <categories>
          
          <category> tutorial </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ongwu </tag>
            
            <tag> 搜索功能 </tag>
            
            <tag> 源码修改 </tag>
            
            <tag> 符号搜索 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>让ongwu支持搜索符号</title>
      <link href="/2025/01/09/7%20-%20%E5%89%AF%E6%9C%AC%20(20)%20-%20%E5%89%AF%E6%9C%AC/"/>
      <url>/2025/01/09/7%20-%20%E5%89%AF%E6%9C%AC%20(20)%20-%20%E5%89%AF%E6%9C%AC/</url>
      
        <content type="html"><![CDATA[<h1 id="让ongwu支持搜索符号"><a href="#让ongwu支持搜索符号" class="headerlink" title="让ongwu支持搜索符号"></a>让ongwu支持搜索符号</h1><h2 id="问题背景"><a href="#问题背景" class="headerlink" title="问题背景"></a>问题背景</h2><p>用过ongwu的应该都清楚它本身搜索是不支持符号的，一般都会过滤掉，只会保留文字字母数字进行搜索。这种过滤应该是出于安全考虑的，但如果你的需求需要搜索符号之类的东西，则可以通过修改源码的方式实现。</p><h2 id="修改原理"><a href="#修改原理" class="headerlink" title="修改原理"></a>修改原理</h2><p>ongwu的搜索功能是在<code>var/Widget/Archive.php</code>中实现的，所以需要修改两处代码：</p><h3 id="第一处：关键词过滤逻辑"><a href="#第一处：关键词过滤逻辑" class="headerlink" title="第一处：关键词过滤逻辑"></a>第一处：关键词过滤逻辑</h3><p>在<code>var/Widget/Archive.php</code>文件中找到以下代码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 原始代码</span></span><br><span class="line"><span class="variable">$filterKeywords</span> = <span class="variable language_">$this</span>-&gt;request-&gt;<span class="title function_ invoke__">get</span>(<span class="string">&#x27;keywords&#x27;</span>);</span><br><span class="line"><span class="variable">$filterKeywords</span> = <span class="title function_ invoke__">trim</span>(<span class="variable">$filterKeywords</span>);</span><br><span class="line"><span class="variable">$filterKeywords</span> = <span class="title function_ invoke__">str_replace</span>(<span class="keyword">array</span>(<span class="string">&#x27;+&#x27;</span>, <span class="string">&#x27;-&#x27;</span>, <span class="string">&#x27;&amp;&#x27;</span>, <span class="string">&#x27;|&#x27;</span>, <span class="string">&#x27;!&#x27;</span>, <span class="string">&#x27;(&#x27;</span>, <span class="string">&#x27;)&#x27;</span>, <span class="string">&#x27;&#123;&#x27;</span>, <span class="string">&#x27;&#125;&#x27;</span>, <span class="string">&#x27;[&#x27;</span>, <span class="string">&#x27;]&#x27;</span>, <span class="string">&#x27;^&#x27;</span>, <span class="string">&#x27;&quot;&#x27;</span>, <span class="string">&#x27;~&#x27;</span>, <span class="string">&#x27;*&#x27;</span>, <span class="string">&#x27;?&#x27;</span>, <span class="string">&#x27;:&#x27;</span>, <span class="string">&#x27;\\&#x27;</span>), <span class="string">&#x27;&#x27;</span>, <span class="variable">$filterKeywords</span>);</span><br></pre></td></tr></table></figure><p>修改为：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 修改后的代码</span></span><br><span class="line"><span class="variable">$filterKeywords</span> = <span class="variable language_">$this</span>-&gt;request-&gt;<span class="title function_ invoke__">get</span>(<span class="string">&#x27;keywords&#x27;</span>);</span><br><span class="line"><span class="variable">$filterKeywords</span> = <span class="title function_ invoke__">trim</span>(<span class="variable">$filterKeywords</span>);</span><br><span class="line"><span class="comment">// 注释掉或删除符号过滤代码</span></span><br><span class="line"><span class="comment">// $filterKeywords = str_replace(array(&#x27;+&#x27;, &#x27;-&#x27;, &#x27;&amp;&#x27;, &#x27;|&#x27;, &#x27;!&#x27;, &#x27;(&#x27;, &#x27;)&#x27;, &#x27;&#123;&#x27;, &#x27;&#125;&#x27;, &#x27;[&#x27;, &#x27;]&#x27;, &#x27;^&#x27;, &#x27;&quot;&#x27;, &#x27;~&#x27;, &#x27;*&#x27;, &#x27;?&#x27;, &#x27;:&#x27;, &#x27;\\&#x27;), &#x27;&#x27;, $filterKeywords);</span></span><br></pre></td></tr></table></figure><h3 id="第二处：SQL查询构建"><a href="#第二处：SQL查询构建" class="headerlink" title="第二处：SQL查询构建"></a>第二处：SQL查询构建</h3><p>找到构建SQL查询的部分：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 原始代码</span></span><br><span class="line"><span class="keyword">if</span> (!<span class="keyword">empty</span>(<span class="variable">$filterKeywords</span>)) &#123;</span><br><span class="line">    <span class="variable">$filterKeywords</span> = <span class="string">&#x27;%&#x27;</span> . <span class="variable">$filterKeywords</span> . <span class="string">&#x27;%&#x27;</span>;</span><br><span class="line">    <span class="variable language_">$this</span>-&gt;db-&gt;<span class="title function_ invoke__">where</span>(<span class="string">&#x27;table.contents.title LIKE ? OR table.contents.text LIKE ?&#x27;</span>, <span class="variable">$filterKeywords</span>, <span class="variable">$filterKeywords</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>修改为：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 修改后的代码</span></span><br><span class="line"><span class="keyword">if</span> (!<span class="keyword">empty</span>(<span class="variable">$filterKeywords</span>)) &#123;</span><br><span class="line">    <span class="comment">// 支持特殊符号的搜索</span></span><br><span class="line">    <span class="variable">$filterKeywords</span> = <span class="string">&#x27;%&#x27;</span> . <span class="title function_ invoke__">addslashes</span>(<span class="variable">$filterKeywords</span>) . <span class="string">&#x27;%&#x27;</span>;</span><br><span class="line">    <span class="variable language_">$this</span>-&gt;db-&gt;<span class="title function_ invoke__">where</span>(<span class="string">&#x27;table.contents.title LIKE ? OR table.contents.text LIKE ?&#x27;</span>, <span class="variable">$filterKeywords</span>, <span class="variable">$filterKeywords</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="完整修改示例"><a href="#完整修改示例" class="headerlink" title="完整修改示例"></a>完整修改示例</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">// var/Widget/Archive.php 修改示例</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Widget_Archive</span> <span class="keyword">extends</span> <span class="title">Widget_Abstract_Contents</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="comment">// ... 其他代码 ...</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 执行搜索</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">search</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;db-&gt;<span class="title function_ invoke__">select</span>(<span class="string">&#x27;table.contents.cid&#x27;</span>, <span class="string">&#x27;table.contents.title&#x27;</span>, <span class="string">&#x27;table.contents.slug&#x27;</span>, <span class="string">&#x27;table.contents.created&#x27;</span>, <span class="string">&#x27;table.contents.authorId&#x27;</span>, <span class="string">&#x27;table.contents.modified&#x27;</span>, <span class="string">&#x27;table.contents.type&#x27;</span>, <span class="string">&#x27;table.contents.status&#x27;</span>, <span class="string">&#x27;table.contents.password&#x27;</span>, <span class="string">&#x27;table.contents.commentsNum&#x27;</span>, <span class="string">&#x27;table.contents.order&#x27;</span>, <span class="string">&#x27;table.contents.template&#x27;</span>, <span class="string">&#x27;table.contents.allowComment&#x27;</span>, <span class="string">&#x27;table.contents.allowPing&#x27;</span>, <span class="string">&#x27;table.contents.allowFeed&#x27;</span>);</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;db-&gt;<span class="keyword">from</span>(<span class="string">&#x27;table.contents&#x27;</span>);</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 获取搜索关键词</span></span><br><span class="line">        <span class="variable">$filterKeywords</span> = <span class="variable language_">$this</span>-&gt;request-&gt;<span class="title function_ invoke__">get</span>(<span class="string">&#x27;keywords&#x27;</span>);</span><br><span class="line">        <span class="variable">$filterKeywords</span> = <span class="title function_ invoke__">trim</span>(<span class="variable">$filterKeywords</span>);</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 注释掉符号过滤，支持符号搜索</span></span><br><span class="line">        <span class="comment">// $filterKeywords = str_replace(array(&#x27;+&#x27;, &#x27;-&#x27;, &#x27;&amp;&#x27;, &#x27;|&#x27;, &#x27;!&#x27;, &#x27;(&#x27;, &#x27;)&#x27;, &#x27;&#123;&#x27;, &#x27;&#125;&#x27;, &#x27;[&#x27;, &#x27;]&#x27;, &#x27;^&#x27;, &#x27;&quot;&#x27;, &#x27;~&#x27;, &#x27;*&#x27;, &#x27;?&#x27;, &#x27;:&#x27;, &#x27;\\&#x27;), &#x27;&#x27;, $filterKeywords);</span></span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> (!<span class="keyword">empty</span>(<span class="variable">$filterKeywords</span>)) &#123;</span><br><span class="line">            <span class="comment">// 使用addslashes防止SQL注入，同时支持符号搜索</span></span><br><span class="line">            <span class="variable">$filterKeywords</span> = <span class="string">&#x27;%&#x27;</span> . <span class="title function_ invoke__">addslashes</span>(<span class="variable">$filterKeywords</span>) . <span class="string">&#x27;%&#x27;</span>;</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;db-&gt;<span class="title function_ invoke__">where</span>(<span class="string">&#x27;table.contents.title LIKE ? OR table.contents.text LIKE ?&#x27;</span>, <span class="variable">$filterKeywords</span>, <span class="variable">$filterKeywords</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// ... 其他搜索逻辑 ...</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="安全注意事项"><a href="#安全注意事项" class="headerlink" title="安全注意事项"></a>安全注意事项</h2><h3 id="1-SQL注入防护"><a href="#1-SQL注入防护" class="headerlink" title="1. SQL注入防护"></a>1. SQL注入防护</h3><p>虽然我们允许符号搜索，但必须确保SQL安全：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 使用addslashes或更好的方法处理输入</span></span><br><span class="line"><span class="variable">$filterKeywords</span> = <span class="title function_ invoke__">addslashes</span>(<span class="variable">$filterKeywords</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 或者使用预处理语句</span></span><br><span class="line"><span class="variable">$stmt</span> = <span class="variable language_">$this</span>-&gt;db-&gt;<span class="title function_ invoke__">prepare</span>(<span class="string">&#x27;SELECT * FROM table.contents WHERE title LIKE ? OR text LIKE ?&#x27;</span>);</span><br><span class="line"><span class="variable">$stmt</span>-&gt;<span class="title function_ invoke__">execute</span>(<span class="keyword">array</span>(<span class="variable">$filterKeywords</span>, <span class="variable">$filterKeywords</span>));</span><br></pre></td></tr></table></figure><h3 id="2-输入验证"><a href="#2-输入验证" class="headerlink" title="2. 输入验证"></a>2. 输入验证</h3><p>添加输入长度和内容验证：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 验证搜索关键词长度</span></span><br><span class="line"><span class="keyword">if</span> (<span class="title function_ invoke__">strlen</span>(<span class="variable">$filterKeywords</span>) &gt; <span class="number">100</span>) &#123;</span><br><span class="line">    <span class="variable">$filterKeywords</span> = <span class="title function_ invoke__">substr</span>(<span class="variable">$filterKeywords</span>, <span class="number">0</span>, <span class="number">100</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 验证是否包含恶意内容</span></span><br><span class="line"><span class="keyword">if</span> (<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/&lt;script|javascript|vbscript|onload|onerror/i&#x27;</span>, <span class="variable">$filterKeywords</span>)) &#123;</span><br><span class="line">    <span class="variable">$filterKeywords</span> = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="测试验证"><a href="#测试验证" class="headerlink" title="测试验证"></a>测试验证</h2><h3 id="1-基本符号测试"><a href="#1-基本符号测试" class="headerlink" title="1. 基本符号测试"></a>1. 基本符号测试</h3><p>测试以下符号是否能正常搜索：</p><ul><li><code>+</code> 加号</li><li><code>-</code> 减号</li><li><code>&amp;</code> 与号</li><li><code>|</code> 或号</li><li><code>!</code> 感叹号</li><li><code>()</code> 括号</li><li><code>[]</code> 方括号</li><li><code>&#123;&#125;</code> 花括号</li></ul><h3 id="2-复杂搜索测试"><a href="#2-复杂搜索测试" class="headerlink" title="2. 复杂搜索测试"></a>2. 复杂搜索测试</h3><p>测试复杂搜索表达式：</p><ul><li><code>PHP + MySQL</code></li><li><code>(前端|后端)开发</code></li><li><code>ongwu &amp; 插件</code></li><li><code>[重要] 更新</code></li></ul><h2 id="性能优化建议"><a href="#性能优化建议" class="headerlink" title="性能优化建议"></a>性能优化建议</h2><h3 id="1-索引优化"><a href="#1-索引优化" class="headerlink" title="1. 索引优化"></a>1. 索引优化</h3><p>为搜索字段添加数据库索引：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 为标题和内容字段添加全文索引</span></span><br><span class="line"><span class="keyword">ALTER TABLE</span> ongwu_contents <span class="keyword">ADD</span> FULLTEXT(title, text);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 或者添加普通索引</span></span><br><span class="line"><span class="keyword">CREATE</span> INDEX idx_contents_title <span class="keyword">ON</span> ongwu_contents(title);</span><br><span class="line"><span class="keyword">CREATE</span> INDEX idx_contents_text <span class="keyword">ON</span> ongwu_contents(text);</span><br></pre></td></tr></table></figure><h3 id="2-搜索结果缓存"><a href="#2-搜索结果缓存" class="headerlink" title="2. 搜索结果缓存"></a>2. 搜索结果缓存</h3><p>实现搜索结果缓存机制：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 缓存搜索结果</span></span><br><span class="line"><span class="variable">$cacheKey</span> = <span class="string">&#x27;search_&#x27;</span> . <span class="title function_ invoke__">md5</span>(<span class="variable">$filterKeywords</span>);</span><br><span class="line"><span class="variable">$cachedResult</span> = <span class="variable language_">$this</span>-&gt;cache-&gt;<span class="title function_ invoke__">get</span>(<span class="variable">$cacheKey</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="variable">$cachedResult</span> !== <span class="literal">false</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="variable">$cachedResult</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 执行搜索</span></span><br><span class="line"><span class="variable">$result</span> = <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">performSearch</span>(<span class="variable">$filterKeywords</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 缓存结果</span></span><br><span class="line"><span class="variable language_">$this</span>-&gt;cache-&gt;<span class="title function_ invoke__">set</span>(<span class="variable">$cacheKey</span>, <span class="variable">$result</span>, <span class="number">3600</span>); <span class="comment">// 缓存1小时</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="variable">$result</span>;</span><br></pre></td></tr></table></figure><h2 id="兼容性考虑"><a href="#兼容性考虑" class="headerlink" title="兼容性考虑"></a>兼容性考虑</h2><h3 id="1-版本兼容"><a href="#1-版本兼容" class="headerlink" title="1. 版本兼容"></a>1. 版本兼容</h3><p>确保修改后的代码与ongwu版本兼容：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 检查ongwu版本</span></span><br><span class="line"><span class="keyword">if</span> (<span class="title function_ invoke__">version_compare</span>(ongwu_<span class="title class_">Common</span>::<span class="variable constant_">VERSION</span>, <span class="string">&#x27;1.2.0&#x27;</span>, <span class="string">&#x27;&gt;=&#x27;</span>)) &#123;</span><br><span class="line">    <span class="comment">// 新版本代码</span></span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="comment">// 旧版本兼容代码</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2-插件兼容"><a href="#2-插件兼容" class="headerlink" title="2. 插件兼容"></a>2. 插件兼容</h3><p>如果使用了其他搜索相关插件，需要确保兼容性：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 检查是否有其他搜索插件</span></span><br><span class="line"><span class="keyword">if</span> (<span class="title function_ invoke__">class_exists</span>(<span class="string">&#x27;Widget_Archive_Search&#x27;</span>)) &#123;</span><br><span class="line">    <span class="comment">// 使用插件提供的搜索功能</span></span><br><span class="line">    <span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">pluginSearch</span>(<span class="variable">$filterKeywords</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>通过修改ongwu源码，我们可以实现符号搜索功能，但需要注意：</p><ol><li><strong>安全性</strong>：使用<code>addslashes</code>或预处理语句防止SQL注入</li><li><strong>性能</strong>：添加适当的数据库索引和缓存机制</li><li><strong>兼容性</strong>：确保与ongwu版本和其他插件的兼容性</li><li><strong>维护性</strong>：记录修改内容，便于后续升级</li></ol><p>这样修改后，ongwu就能支持包含符号的搜索了，满足更复杂的搜索需求。</p><hr><p><em>注意：修改源码后，在ongwu升级时需要重新应用这些修改。建议将修改内容记录在文档中，或者创建补丁文件。</em></p>]]></content>
      
      
      <categories>
          
          <category> tutorial </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ongwu </tag>
            
            <tag> 搜索功能 </tag>
            
            <tag> 源码修改 </tag>
            
            <tag> 符号搜索 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>让ongwu支持搜索符号</title>
      <link href="/2025/01/09/7%20-%20%E5%89%AF%E6%9C%AC%20(2)/"/>
      <url>/2025/01/09/7%20-%20%E5%89%AF%E6%9C%AC%20(2)/</url>
      
        <content type="html"><![CDATA[<h1 id="让ongwu支持搜索符号"><a href="#让ongwu支持搜索符号" class="headerlink" title="让ongwu支持搜索符号"></a>让ongwu支持搜索符号</h1><h2 id="问题背景"><a href="#问题背景" class="headerlink" title="问题背景"></a>问题背景</h2><p>用过ongwu的应该都清楚它本身搜索是不支持符号的，一般都会过滤掉，只会保留文字字母数字进行搜索。这种过滤应该是出于安全考虑的，但如果你的需求需要搜索符号之类的东西，则可以通过修改源码的方式实现。</p><h2 id="修改原理"><a href="#修改原理" class="headerlink" title="修改原理"></a>修改原理</h2><p>ongwu的搜索功能是在<code>var/Widget/Archive.php</code>中实现的，所以需要修改两处代码：</p><h3 id="第一处：关键词过滤逻辑"><a href="#第一处：关键词过滤逻辑" class="headerlink" title="第一处：关键词过滤逻辑"></a>第一处：关键词过滤逻辑</h3><p>在<code>var/Widget/Archive.php</code>文件中找到以下代码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 原始代码</span></span><br><span class="line"><span class="variable">$filterKeywords</span> = <span class="variable language_">$this</span>-&gt;request-&gt;<span class="title function_ invoke__">get</span>(<span class="string">&#x27;keywords&#x27;</span>);</span><br><span class="line"><span class="variable">$filterKeywords</span> = <span class="title function_ invoke__">trim</span>(<span class="variable">$filterKeywords</span>);</span><br><span class="line"><span class="variable">$filterKeywords</span> = <span class="title function_ invoke__">str_replace</span>(<span class="keyword">array</span>(<span class="string">&#x27;+&#x27;</span>, <span class="string">&#x27;-&#x27;</span>, <span class="string">&#x27;&amp;&#x27;</span>, <span class="string">&#x27;|&#x27;</span>, <span class="string">&#x27;!&#x27;</span>, <span class="string">&#x27;(&#x27;</span>, <span class="string">&#x27;)&#x27;</span>, <span class="string">&#x27;&#123;&#x27;</span>, <span class="string">&#x27;&#125;&#x27;</span>, <span class="string">&#x27;[&#x27;</span>, <span class="string">&#x27;]&#x27;</span>, <span class="string">&#x27;^&#x27;</span>, <span class="string">&#x27;&quot;&#x27;</span>, <span class="string">&#x27;~&#x27;</span>, <span class="string">&#x27;*&#x27;</span>, <span class="string">&#x27;?&#x27;</span>, <span class="string">&#x27;:&#x27;</span>, <span class="string">&#x27;\\&#x27;</span>), <span class="string">&#x27;&#x27;</span>, <span class="variable">$filterKeywords</span>);</span><br></pre></td></tr></table></figure><p>修改为：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 修改后的代码</span></span><br><span class="line"><span class="variable">$filterKeywords</span> = <span class="variable language_">$this</span>-&gt;request-&gt;<span class="title function_ invoke__">get</span>(<span class="string">&#x27;keywords&#x27;</span>);</span><br><span class="line"><span class="variable">$filterKeywords</span> = <span class="title function_ invoke__">trim</span>(<span class="variable">$filterKeywords</span>);</span><br><span class="line"><span class="comment">// 注释掉或删除符号过滤代码</span></span><br><span class="line"><span class="comment">// $filterKeywords = str_replace(array(&#x27;+&#x27;, &#x27;-&#x27;, &#x27;&amp;&#x27;, &#x27;|&#x27;, &#x27;!&#x27;, &#x27;(&#x27;, &#x27;)&#x27;, &#x27;&#123;&#x27;, &#x27;&#125;&#x27;, &#x27;[&#x27;, &#x27;]&#x27;, &#x27;^&#x27;, &#x27;&quot;&#x27;, &#x27;~&#x27;, &#x27;*&#x27;, &#x27;?&#x27;, &#x27;:&#x27;, &#x27;\\&#x27;), &#x27;&#x27;, $filterKeywords);</span></span><br></pre></td></tr></table></figure><h3 id="第二处：SQL查询构建"><a href="#第二处：SQL查询构建" class="headerlink" title="第二处：SQL查询构建"></a>第二处：SQL查询构建</h3><p>找到构建SQL查询的部分：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 原始代码</span></span><br><span class="line"><span class="keyword">if</span> (!<span class="keyword">empty</span>(<span class="variable">$filterKeywords</span>)) &#123;</span><br><span class="line">    <span class="variable">$filterKeywords</span> = <span class="string">&#x27;%&#x27;</span> . <span class="variable">$filterKeywords</span> . <span class="string">&#x27;%&#x27;</span>;</span><br><span class="line">    <span class="variable language_">$this</span>-&gt;db-&gt;<span class="title function_ invoke__">where</span>(<span class="string">&#x27;table.contents.title LIKE ? OR table.contents.text LIKE ?&#x27;</span>, <span class="variable">$filterKeywords</span>, <span class="variable">$filterKeywords</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>修改为：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 修改后的代码</span></span><br><span class="line"><span class="keyword">if</span> (!<span class="keyword">empty</span>(<span class="variable">$filterKeywords</span>)) &#123;</span><br><span class="line">    <span class="comment">// 支持特殊符号的搜索</span></span><br><span class="line">    <span class="variable">$filterKeywords</span> = <span class="string">&#x27;%&#x27;</span> . <span class="title function_ invoke__">addslashes</span>(<span class="variable">$filterKeywords</span>) . <span class="string">&#x27;%&#x27;</span>;</span><br><span class="line">    <span class="variable language_">$this</span>-&gt;db-&gt;<span class="title function_ invoke__">where</span>(<span class="string">&#x27;table.contents.title LIKE ? OR table.contents.text LIKE ?&#x27;</span>, <span class="variable">$filterKeywords</span>, <span class="variable">$filterKeywords</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="完整修改示例"><a href="#完整修改示例" class="headerlink" title="完整修改示例"></a>完整修改示例</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">// var/Widget/Archive.php 修改示例</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Widget_Archive</span> <span class="keyword">extends</span> <span class="title">Widget_Abstract_Contents</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="comment">// ... 其他代码 ...</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 执行搜索</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">search</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;db-&gt;<span class="title function_ invoke__">select</span>(<span class="string">&#x27;table.contents.cid&#x27;</span>, <span class="string">&#x27;table.contents.title&#x27;</span>, <span class="string">&#x27;table.contents.slug&#x27;</span>, <span class="string">&#x27;table.contents.created&#x27;</span>, <span class="string">&#x27;table.contents.authorId&#x27;</span>, <span class="string">&#x27;table.contents.modified&#x27;</span>, <span class="string">&#x27;table.contents.type&#x27;</span>, <span class="string">&#x27;table.contents.status&#x27;</span>, <span class="string">&#x27;table.contents.password&#x27;</span>, <span class="string">&#x27;table.contents.commentsNum&#x27;</span>, <span class="string">&#x27;table.contents.order&#x27;</span>, <span class="string">&#x27;table.contents.template&#x27;</span>, <span class="string">&#x27;table.contents.allowComment&#x27;</span>, <span class="string">&#x27;table.contents.allowPing&#x27;</span>, <span class="string">&#x27;table.contents.allowFeed&#x27;</span>);</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;db-&gt;<span class="keyword">from</span>(<span class="string">&#x27;table.contents&#x27;</span>);</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 获取搜索关键词</span></span><br><span class="line">        <span class="variable">$filterKeywords</span> = <span class="variable language_">$this</span>-&gt;request-&gt;<span class="title function_ invoke__">get</span>(<span class="string">&#x27;keywords&#x27;</span>);</span><br><span class="line">        <span class="variable">$filterKeywords</span> = <span class="title function_ invoke__">trim</span>(<span class="variable">$filterKeywords</span>);</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 注释掉符号过滤，支持符号搜索</span></span><br><span class="line">        <span class="comment">// $filterKeywords = str_replace(array(&#x27;+&#x27;, &#x27;-&#x27;, &#x27;&amp;&#x27;, &#x27;|&#x27;, &#x27;!&#x27;, &#x27;(&#x27;, &#x27;)&#x27;, &#x27;&#123;&#x27;, &#x27;&#125;&#x27;, &#x27;[&#x27;, &#x27;]&#x27;, &#x27;^&#x27;, &#x27;&quot;&#x27;, &#x27;~&#x27;, &#x27;*&#x27;, &#x27;?&#x27;, &#x27;:&#x27;, &#x27;\\&#x27;), &#x27;&#x27;, $filterKeywords);</span></span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> (!<span class="keyword">empty</span>(<span class="variable">$filterKeywords</span>)) &#123;</span><br><span class="line">            <span class="comment">// 使用addslashes防止SQL注入，同时支持符号搜索</span></span><br><span class="line">            <span class="variable">$filterKeywords</span> = <span class="string">&#x27;%&#x27;</span> . <span class="title function_ invoke__">addslashes</span>(<span class="variable">$filterKeywords</span>) . <span class="string">&#x27;%&#x27;</span>;</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;db-&gt;<span class="title function_ invoke__">where</span>(<span class="string">&#x27;table.contents.title LIKE ? OR table.contents.text LIKE ?&#x27;</span>, <span class="variable">$filterKeywords</span>, <span class="variable">$filterKeywords</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// ... 其他搜索逻辑 ...</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="安全注意事项"><a href="#安全注意事项" class="headerlink" title="安全注意事项"></a>安全注意事项</h2><h3 id="1-SQL注入防护"><a href="#1-SQL注入防护" class="headerlink" title="1. SQL注入防护"></a>1. SQL注入防护</h3><p>虽然我们允许符号搜索，但必须确保SQL安全：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 使用addslashes或更好的方法处理输入</span></span><br><span class="line"><span class="variable">$filterKeywords</span> = <span class="title function_ invoke__">addslashes</span>(<span class="variable">$filterKeywords</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 或者使用预处理语句</span></span><br><span class="line"><span class="variable">$stmt</span> = <span class="variable language_">$this</span>-&gt;db-&gt;<span class="title function_ invoke__">prepare</span>(<span class="string">&#x27;SELECT * FROM table.contents WHERE title LIKE ? OR text LIKE ?&#x27;</span>);</span><br><span class="line"><span class="variable">$stmt</span>-&gt;<span class="title function_ invoke__">execute</span>(<span class="keyword">array</span>(<span class="variable">$filterKeywords</span>, <span class="variable">$filterKeywords</span>));</span><br></pre></td></tr></table></figure><h3 id="2-输入验证"><a href="#2-输入验证" class="headerlink" title="2. 输入验证"></a>2. 输入验证</h3><p>添加输入长度和内容验证：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 验证搜索关键词长度</span></span><br><span class="line"><span class="keyword">if</span> (<span class="title function_ invoke__">strlen</span>(<span class="variable">$filterKeywords</span>) &gt; <span class="number">100</span>) &#123;</span><br><span class="line">    <span class="variable">$filterKeywords</span> = <span class="title function_ invoke__">substr</span>(<span class="variable">$filterKeywords</span>, <span class="number">0</span>, <span class="number">100</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 验证是否包含恶意内容</span></span><br><span class="line"><span class="keyword">if</span> (<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/&lt;script|javascript|vbscript|onload|onerror/i&#x27;</span>, <span class="variable">$filterKeywords</span>)) &#123;</span><br><span class="line">    <span class="variable">$filterKeywords</span> = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="测试验证"><a href="#测试验证" class="headerlink" title="测试验证"></a>测试验证</h2><h3 id="1-基本符号测试"><a href="#1-基本符号测试" class="headerlink" title="1. 基本符号测试"></a>1. 基本符号测试</h3><p>测试以下符号是否能正常搜索：</p><ul><li><code>+</code> 加号</li><li><code>-</code> 减号</li><li><code>&amp;</code> 与号</li><li><code>|</code> 或号</li><li><code>!</code> 感叹号</li><li><code>()</code> 括号</li><li><code>[]</code> 方括号</li><li><code>&#123;&#125;</code> 花括号</li></ul><h3 id="2-复杂搜索测试"><a href="#2-复杂搜索测试" class="headerlink" title="2. 复杂搜索测试"></a>2. 复杂搜索测试</h3><p>测试复杂搜索表达式：</p><ul><li><code>PHP + MySQL</code></li><li><code>(前端|后端)开发</code></li><li><code>ongwu &amp; 插件</code></li><li><code>[重要] 更新</code></li></ul><h2 id="性能优化建议"><a href="#性能优化建议" class="headerlink" title="性能优化建议"></a>性能优化建议</h2><h3 id="1-索引优化"><a href="#1-索引优化" class="headerlink" title="1. 索引优化"></a>1. 索引优化</h3><p>为搜索字段添加数据库索引：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 为标题和内容字段添加全文索引</span></span><br><span class="line"><span class="keyword">ALTER TABLE</span> ongwu_contents <span class="keyword">ADD</span> FULLTEXT(title, text);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 或者添加普通索引</span></span><br><span class="line"><span class="keyword">CREATE</span> INDEX idx_contents_title <span class="keyword">ON</span> ongwu_contents(title);</span><br><span class="line"><span class="keyword">CREATE</span> INDEX idx_contents_text <span class="keyword">ON</span> ongwu_contents(text);</span><br></pre></td></tr></table></figure><h3 id="2-搜索结果缓存"><a href="#2-搜索结果缓存" class="headerlink" title="2. 搜索结果缓存"></a>2. 搜索结果缓存</h3><p>实现搜索结果缓存机制：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 缓存搜索结果</span></span><br><span class="line"><span class="variable">$cacheKey</span> = <span class="string">&#x27;search_&#x27;</span> . <span class="title function_ invoke__">md5</span>(<span class="variable">$filterKeywords</span>);</span><br><span class="line"><span class="variable">$cachedResult</span> = <span class="variable language_">$this</span>-&gt;cache-&gt;<span class="title function_ invoke__">get</span>(<span class="variable">$cacheKey</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="variable">$cachedResult</span> !== <span class="literal">false</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="variable">$cachedResult</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 执行搜索</span></span><br><span class="line"><span class="variable">$result</span> = <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">performSearch</span>(<span class="variable">$filterKeywords</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 缓存结果</span></span><br><span class="line"><span class="variable language_">$this</span>-&gt;cache-&gt;<span class="title function_ invoke__">set</span>(<span class="variable">$cacheKey</span>, <span class="variable">$result</span>, <span class="number">3600</span>); <span class="comment">// 缓存1小时</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="variable">$result</span>;</span><br></pre></td></tr></table></figure><h2 id="兼容性考虑"><a href="#兼容性考虑" class="headerlink" title="兼容性考虑"></a>兼容性考虑</h2><h3 id="1-版本兼容"><a href="#1-版本兼容" class="headerlink" title="1. 版本兼容"></a>1. 版本兼容</h3><p>确保修改后的代码与ongwu版本兼容：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 检查ongwu版本</span></span><br><span class="line"><span class="keyword">if</span> (<span class="title function_ invoke__">version_compare</span>(ongwu_<span class="title class_">Common</span>::<span class="variable constant_">VERSION</span>, <span class="string">&#x27;1.2.0&#x27;</span>, <span class="string">&#x27;&gt;=&#x27;</span>)) &#123;</span><br><span class="line">    <span class="comment">// 新版本代码</span></span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="comment">// 旧版本兼容代码</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2-插件兼容"><a href="#2-插件兼容" class="headerlink" title="2. 插件兼容"></a>2. 插件兼容</h3><p>如果使用了其他搜索相关插件，需要确保兼容性：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 检查是否有其他搜索插件</span></span><br><span class="line"><span class="keyword">if</span> (<span class="title function_ invoke__">class_exists</span>(<span class="string">&#x27;Widget_Archive_Search&#x27;</span>)) &#123;</span><br><span class="line">    <span class="comment">// 使用插件提供的搜索功能</span></span><br><span class="line">    <span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">pluginSearch</span>(<span class="variable">$filterKeywords</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>通过修改ongwu源码，我们可以实现符号搜索功能，但需要注意：</p><ol><li><strong>安全性</strong>：使用<code>addslashes</code>或预处理语句防止SQL注入</li><li><strong>性能</strong>：添加适当的数据库索引和缓存机制</li><li><strong>兼容性</strong>：确保与ongwu版本和其他插件的兼容性</li><li><strong>维护性</strong>：记录修改内容，便于后续升级</li></ol><p>这样修改后，ongwu就能支持包含符号的搜索了，满足更复杂的搜索需求。</p><hr><p><em>注意：修改源码后，在ongwu升级时需要重新应用这些修改。建议将修改内容记录在文档中，或者创建补丁文件。</em></p>]]></content>
      
      
      <categories>
          
          <category> tutorial </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ongwu </tag>
            
            <tag> 搜索功能 </tag>
            
            <tag> 源码修改 </tag>
            
            <tag> 符号搜索 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>让ongwu支持搜索符号</title>
      <link href="/2025/01/09/7%20-%20%E5%89%AF%E6%9C%AC%20(4)%20-%20%E5%89%AF%E6%9C%AC/"/>
      <url>/2025/01/09/7%20-%20%E5%89%AF%E6%9C%AC%20(4)%20-%20%E5%89%AF%E6%9C%AC/</url>
      
        <content type="html"><![CDATA[<h1 id="让ongwu支持搜索符号"><a href="#让ongwu支持搜索符号" class="headerlink" title="让ongwu支持搜索符号"></a>让ongwu支持搜索符号</h1><h2 id="问题背景"><a href="#问题背景" class="headerlink" title="问题背景"></a>问题背景</h2><p>用过ongwu的应该都清楚它本身搜索是不支持符号的，一般都会过滤掉，只会保留文字字母数字进行搜索。这种过滤应该是出于安全考虑的，但如果你的需求需要搜索符号之类的东西，则可以通过修改源码的方式实现。</p><h2 id="修改原理"><a href="#修改原理" class="headerlink" title="修改原理"></a>修改原理</h2><p>ongwu的搜索功能是在<code>var/Widget/Archive.php</code>中实现的，所以需要修改两处代码：</p><h3 id="第一处：关键词过滤逻辑"><a href="#第一处：关键词过滤逻辑" class="headerlink" title="第一处：关键词过滤逻辑"></a>第一处：关键词过滤逻辑</h3><p>在<code>var/Widget/Archive.php</code>文件中找到以下代码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 原始代码</span></span><br><span class="line"><span class="variable">$filterKeywords</span> = <span class="variable language_">$this</span>-&gt;request-&gt;<span class="title function_ invoke__">get</span>(<span class="string">&#x27;keywords&#x27;</span>);</span><br><span class="line"><span class="variable">$filterKeywords</span> = <span class="title function_ invoke__">trim</span>(<span class="variable">$filterKeywords</span>);</span><br><span class="line"><span class="variable">$filterKeywords</span> = <span class="title function_ invoke__">str_replace</span>(<span class="keyword">array</span>(<span class="string">&#x27;+&#x27;</span>, <span class="string">&#x27;-&#x27;</span>, <span class="string">&#x27;&amp;&#x27;</span>, <span class="string">&#x27;|&#x27;</span>, <span class="string">&#x27;!&#x27;</span>, <span class="string">&#x27;(&#x27;</span>, <span class="string">&#x27;)&#x27;</span>, <span class="string">&#x27;&#123;&#x27;</span>, <span class="string">&#x27;&#125;&#x27;</span>, <span class="string">&#x27;[&#x27;</span>, <span class="string">&#x27;]&#x27;</span>, <span class="string">&#x27;^&#x27;</span>, <span class="string">&#x27;&quot;&#x27;</span>, <span class="string">&#x27;~&#x27;</span>, <span class="string">&#x27;*&#x27;</span>, <span class="string">&#x27;?&#x27;</span>, <span class="string">&#x27;:&#x27;</span>, <span class="string">&#x27;\\&#x27;</span>), <span class="string">&#x27;&#x27;</span>, <span class="variable">$filterKeywords</span>);</span><br></pre></td></tr></table></figure><p>修改为：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 修改后的代码</span></span><br><span class="line"><span class="variable">$filterKeywords</span> = <span class="variable language_">$this</span>-&gt;request-&gt;<span class="title function_ invoke__">get</span>(<span class="string">&#x27;keywords&#x27;</span>);</span><br><span class="line"><span class="variable">$filterKeywords</span> = <span class="title function_ invoke__">trim</span>(<span class="variable">$filterKeywords</span>);</span><br><span class="line"><span class="comment">// 注释掉或删除符号过滤代码</span></span><br><span class="line"><span class="comment">// $filterKeywords = str_replace(array(&#x27;+&#x27;, &#x27;-&#x27;, &#x27;&amp;&#x27;, &#x27;|&#x27;, &#x27;!&#x27;, &#x27;(&#x27;, &#x27;)&#x27;, &#x27;&#123;&#x27;, &#x27;&#125;&#x27;, &#x27;[&#x27;, &#x27;]&#x27;, &#x27;^&#x27;, &#x27;&quot;&#x27;, &#x27;~&#x27;, &#x27;*&#x27;, &#x27;?&#x27;, &#x27;:&#x27;, &#x27;\\&#x27;), &#x27;&#x27;, $filterKeywords);</span></span><br></pre></td></tr></table></figure><h3 id="第二处：SQL查询构建"><a href="#第二处：SQL查询构建" class="headerlink" title="第二处：SQL查询构建"></a>第二处：SQL查询构建</h3><p>找到构建SQL查询的部分：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 原始代码</span></span><br><span class="line"><span class="keyword">if</span> (!<span class="keyword">empty</span>(<span class="variable">$filterKeywords</span>)) &#123;</span><br><span class="line">    <span class="variable">$filterKeywords</span> = <span class="string">&#x27;%&#x27;</span> . <span class="variable">$filterKeywords</span> . <span class="string">&#x27;%&#x27;</span>;</span><br><span class="line">    <span class="variable language_">$this</span>-&gt;db-&gt;<span class="title function_ invoke__">where</span>(<span class="string">&#x27;table.contents.title LIKE ? OR table.contents.text LIKE ?&#x27;</span>, <span class="variable">$filterKeywords</span>, <span class="variable">$filterKeywords</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>修改为：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 修改后的代码</span></span><br><span class="line"><span class="keyword">if</span> (!<span class="keyword">empty</span>(<span class="variable">$filterKeywords</span>)) &#123;</span><br><span class="line">    <span class="comment">// 支持特殊符号的搜索</span></span><br><span class="line">    <span class="variable">$filterKeywords</span> = <span class="string">&#x27;%&#x27;</span> . <span class="title function_ invoke__">addslashes</span>(<span class="variable">$filterKeywords</span>) . <span class="string">&#x27;%&#x27;</span>;</span><br><span class="line">    <span class="variable language_">$this</span>-&gt;db-&gt;<span class="title function_ invoke__">where</span>(<span class="string">&#x27;table.contents.title LIKE ? OR table.contents.text LIKE ?&#x27;</span>, <span class="variable">$filterKeywords</span>, <span class="variable">$filterKeywords</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="完整修改示例"><a href="#完整修改示例" class="headerlink" title="完整修改示例"></a>完整修改示例</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">// var/Widget/Archive.php 修改示例</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Widget_Archive</span> <span class="keyword">extends</span> <span class="title">Widget_Abstract_Contents</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="comment">// ... 其他代码 ...</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 执行搜索</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">search</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;db-&gt;<span class="title function_ invoke__">select</span>(<span class="string">&#x27;table.contents.cid&#x27;</span>, <span class="string">&#x27;table.contents.title&#x27;</span>, <span class="string">&#x27;table.contents.slug&#x27;</span>, <span class="string">&#x27;table.contents.created&#x27;</span>, <span class="string">&#x27;table.contents.authorId&#x27;</span>, <span class="string">&#x27;table.contents.modified&#x27;</span>, <span class="string">&#x27;table.contents.type&#x27;</span>, <span class="string">&#x27;table.contents.status&#x27;</span>, <span class="string">&#x27;table.contents.password&#x27;</span>, <span class="string">&#x27;table.contents.commentsNum&#x27;</span>, <span class="string">&#x27;table.contents.order&#x27;</span>, <span class="string">&#x27;table.contents.template&#x27;</span>, <span class="string">&#x27;table.contents.allowComment&#x27;</span>, <span class="string">&#x27;table.contents.allowPing&#x27;</span>, <span class="string">&#x27;table.contents.allowFeed&#x27;</span>);</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;db-&gt;<span class="keyword">from</span>(<span class="string">&#x27;table.contents&#x27;</span>);</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 获取搜索关键词</span></span><br><span class="line">        <span class="variable">$filterKeywords</span> = <span class="variable language_">$this</span>-&gt;request-&gt;<span class="title function_ invoke__">get</span>(<span class="string">&#x27;keywords&#x27;</span>);</span><br><span class="line">        <span class="variable">$filterKeywords</span> = <span class="title function_ invoke__">trim</span>(<span class="variable">$filterKeywords</span>);</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 注释掉符号过滤，支持符号搜索</span></span><br><span class="line">        <span class="comment">// $filterKeywords = str_replace(array(&#x27;+&#x27;, &#x27;-&#x27;, &#x27;&amp;&#x27;, &#x27;|&#x27;, &#x27;!&#x27;, &#x27;(&#x27;, &#x27;)&#x27;, &#x27;&#123;&#x27;, &#x27;&#125;&#x27;, &#x27;[&#x27;, &#x27;]&#x27;, &#x27;^&#x27;, &#x27;&quot;&#x27;, &#x27;~&#x27;, &#x27;*&#x27;, &#x27;?&#x27;, &#x27;:&#x27;, &#x27;\\&#x27;), &#x27;&#x27;, $filterKeywords);</span></span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> (!<span class="keyword">empty</span>(<span class="variable">$filterKeywords</span>)) &#123;</span><br><span class="line">            <span class="comment">// 使用addslashes防止SQL注入，同时支持符号搜索</span></span><br><span class="line">            <span class="variable">$filterKeywords</span> = <span class="string">&#x27;%&#x27;</span> . <span class="title function_ invoke__">addslashes</span>(<span class="variable">$filterKeywords</span>) . <span class="string">&#x27;%&#x27;</span>;</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;db-&gt;<span class="title function_ invoke__">where</span>(<span class="string">&#x27;table.contents.title LIKE ? OR table.contents.text LIKE ?&#x27;</span>, <span class="variable">$filterKeywords</span>, <span class="variable">$filterKeywords</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// ... 其他搜索逻辑 ...</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="安全注意事项"><a href="#安全注意事项" class="headerlink" title="安全注意事项"></a>安全注意事项</h2><h3 id="1-SQL注入防护"><a href="#1-SQL注入防护" class="headerlink" title="1. SQL注入防护"></a>1. SQL注入防护</h3><p>虽然我们允许符号搜索，但必须确保SQL安全：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 使用addslashes或更好的方法处理输入</span></span><br><span class="line"><span class="variable">$filterKeywords</span> = <span class="title function_ invoke__">addslashes</span>(<span class="variable">$filterKeywords</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 或者使用预处理语句</span></span><br><span class="line"><span class="variable">$stmt</span> = <span class="variable language_">$this</span>-&gt;db-&gt;<span class="title function_ invoke__">prepare</span>(<span class="string">&#x27;SELECT * FROM table.contents WHERE title LIKE ? OR text LIKE ?&#x27;</span>);</span><br><span class="line"><span class="variable">$stmt</span>-&gt;<span class="title function_ invoke__">execute</span>(<span class="keyword">array</span>(<span class="variable">$filterKeywords</span>, <span class="variable">$filterKeywords</span>));</span><br></pre></td></tr></table></figure><h3 id="2-输入验证"><a href="#2-输入验证" class="headerlink" title="2. 输入验证"></a>2. 输入验证</h3><p>添加输入长度和内容验证：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 验证搜索关键词长度</span></span><br><span class="line"><span class="keyword">if</span> (<span class="title function_ invoke__">strlen</span>(<span class="variable">$filterKeywords</span>) &gt; <span class="number">100</span>) &#123;</span><br><span class="line">    <span class="variable">$filterKeywords</span> = <span class="title function_ invoke__">substr</span>(<span class="variable">$filterKeywords</span>, <span class="number">0</span>, <span class="number">100</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 验证是否包含恶意内容</span></span><br><span class="line"><span class="keyword">if</span> (<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/&lt;script|javascript|vbscript|onload|onerror/i&#x27;</span>, <span class="variable">$filterKeywords</span>)) &#123;</span><br><span class="line">    <span class="variable">$filterKeywords</span> = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="测试验证"><a href="#测试验证" class="headerlink" title="测试验证"></a>测试验证</h2><h3 id="1-基本符号测试"><a href="#1-基本符号测试" class="headerlink" title="1. 基本符号测试"></a>1. 基本符号测试</h3><p>测试以下符号是否能正常搜索：</p><ul><li><code>+</code> 加号</li><li><code>-</code> 减号</li><li><code>&amp;</code> 与号</li><li><code>|</code> 或号</li><li><code>!</code> 感叹号</li><li><code>()</code> 括号</li><li><code>[]</code> 方括号</li><li><code>&#123;&#125;</code> 花括号</li></ul><h3 id="2-复杂搜索测试"><a href="#2-复杂搜索测试" class="headerlink" title="2. 复杂搜索测试"></a>2. 复杂搜索测试</h3><p>测试复杂搜索表达式：</p><ul><li><code>PHP + MySQL</code></li><li><code>(前端|后端)开发</code></li><li><code>ongwu &amp; 插件</code></li><li><code>[重要] 更新</code></li></ul><h2 id="性能优化建议"><a href="#性能优化建议" class="headerlink" title="性能优化建议"></a>性能优化建议</h2><h3 id="1-索引优化"><a href="#1-索引优化" class="headerlink" title="1. 索引优化"></a>1. 索引优化</h3><p>为搜索字段添加数据库索引：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 为标题和内容字段添加全文索引</span></span><br><span class="line"><span class="keyword">ALTER TABLE</span> ongwu_contents <span class="keyword">ADD</span> FULLTEXT(title, text);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 或者添加普通索引</span></span><br><span class="line"><span class="keyword">CREATE</span> INDEX idx_contents_title <span class="keyword">ON</span> ongwu_contents(title);</span><br><span class="line"><span class="keyword">CREATE</span> INDEX idx_contents_text <span class="keyword">ON</span> ongwu_contents(text);</span><br></pre></td></tr></table></figure><h3 id="2-搜索结果缓存"><a href="#2-搜索结果缓存" class="headerlink" title="2. 搜索结果缓存"></a>2. 搜索结果缓存</h3><p>实现搜索结果缓存机制：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 缓存搜索结果</span></span><br><span class="line"><span class="variable">$cacheKey</span> = <span class="string">&#x27;search_&#x27;</span> . <span class="title function_ invoke__">md5</span>(<span class="variable">$filterKeywords</span>);</span><br><span class="line"><span class="variable">$cachedResult</span> = <span class="variable language_">$this</span>-&gt;cache-&gt;<span class="title function_ invoke__">get</span>(<span class="variable">$cacheKey</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="variable">$cachedResult</span> !== <span class="literal">false</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="variable">$cachedResult</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 执行搜索</span></span><br><span class="line"><span class="variable">$result</span> = <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">performSearch</span>(<span class="variable">$filterKeywords</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 缓存结果</span></span><br><span class="line"><span class="variable language_">$this</span>-&gt;cache-&gt;<span class="title function_ invoke__">set</span>(<span class="variable">$cacheKey</span>, <span class="variable">$result</span>, <span class="number">3600</span>); <span class="comment">// 缓存1小时</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="variable">$result</span>;</span><br></pre></td></tr></table></figure><h2 id="兼容性考虑"><a href="#兼容性考虑" class="headerlink" title="兼容性考虑"></a>兼容性考虑</h2><h3 id="1-版本兼容"><a href="#1-版本兼容" class="headerlink" title="1. 版本兼容"></a>1. 版本兼容</h3><p>确保修改后的代码与ongwu版本兼容：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 检查ongwu版本</span></span><br><span class="line"><span class="keyword">if</span> (<span class="title function_ invoke__">version_compare</span>(ongwu_<span class="title class_">Common</span>::<span class="variable constant_">VERSION</span>, <span class="string">&#x27;1.2.0&#x27;</span>, <span class="string">&#x27;&gt;=&#x27;</span>)) &#123;</span><br><span class="line">    <span class="comment">// 新版本代码</span></span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="comment">// 旧版本兼容代码</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2-插件兼容"><a href="#2-插件兼容" class="headerlink" title="2. 插件兼容"></a>2. 插件兼容</h3><p>如果使用了其他搜索相关插件，需要确保兼容性：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 检查是否有其他搜索插件</span></span><br><span class="line"><span class="keyword">if</span> (<span class="title function_ invoke__">class_exists</span>(<span class="string">&#x27;Widget_Archive_Search&#x27;</span>)) &#123;</span><br><span class="line">    <span class="comment">// 使用插件提供的搜索功能</span></span><br><span class="line">    <span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">pluginSearch</span>(<span class="variable">$filterKeywords</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>通过修改ongwu源码，我们可以实现符号搜索功能，但需要注意：</p><ol><li><strong>安全性</strong>：使用<code>addslashes</code>或预处理语句防止SQL注入</li><li><strong>性能</strong>：添加适当的数据库索引和缓存机制</li><li><strong>兼容性</strong>：确保与ongwu版本和其他插件的兼容性</li><li><strong>维护性</strong>：记录修改内容，便于后续升级</li></ol><p>这样修改后，ongwu就能支持包含符号的搜索了，满足更复杂的搜索需求。</p><hr><p><em>注意：修改源码后，在ongwu升级时需要重新应用这些修改。建议将修改内容记录在文档中，或者创建补丁文件。</em></p>]]></content>
      
      
      <categories>
          
          <category> tutorial </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ongwu </tag>
            
            <tag> 搜索功能 </tag>
            
            <tag> 源码修改 </tag>
            
            <tag> 符号搜索 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>让ongwu支持搜索符号</title>
      <link href="/2025/01/09/7%20-%20%E5%89%AF%E6%9C%AC%20(3)/"/>
      <url>/2025/01/09/7%20-%20%E5%89%AF%E6%9C%AC%20(3)/</url>
      
        <content type="html"><![CDATA[<h1 id="让ongwu支持搜索符号"><a href="#让ongwu支持搜索符号" class="headerlink" title="让ongwu支持搜索符号"></a>让ongwu支持搜索符号</h1><h2 id="问题背景"><a href="#问题背景" class="headerlink" title="问题背景"></a>问题背景</h2><p>用过ongwu的应该都清楚它本身搜索是不支持符号的，一般都会过滤掉，只会保留文字字母数字进行搜索。这种过滤应该是出于安全考虑的，但如果你的需求需要搜索符号之类的东西，则可以通过修改源码的方式实现。</p><h2 id="修改原理"><a href="#修改原理" class="headerlink" title="修改原理"></a>修改原理</h2><p>ongwu的搜索功能是在<code>var/Widget/Archive.php</code>中实现的，所以需要修改两处代码：</p><h3 id="第一处：关键词过滤逻辑"><a href="#第一处：关键词过滤逻辑" class="headerlink" title="第一处：关键词过滤逻辑"></a>第一处：关键词过滤逻辑</h3><p>在<code>var/Widget/Archive.php</code>文件中找到以下代码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 原始代码</span></span><br><span class="line"><span class="variable">$filterKeywords</span> = <span class="variable language_">$this</span>-&gt;request-&gt;<span class="title function_ invoke__">get</span>(<span class="string">&#x27;keywords&#x27;</span>);</span><br><span class="line"><span class="variable">$filterKeywords</span> = <span class="title function_ invoke__">trim</span>(<span class="variable">$filterKeywords</span>);</span><br><span class="line"><span class="variable">$filterKeywords</span> = <span class="title function_ invoke__">str_replace</span>(<span class="keyword">array</span>(<span class="string">&#x27;+&#x27;</span>, <span class="string">&#x27;-&#x27;</span>, <span class="string">&#x27;&amp;&#x27;</span>, <span class="string">&#x27;|&#x27;</span>, <span class="string">&#x27;!&#x27;</span>, <span class="string">&#x27;(&#x27;</span>, <span class="string">&#x27;)&#x27;</span>, <span class="string">&#x27;&#123;&#x27;</span>, <span class="string">&#x27;&#125;&#x27;</span>, <span class="string">&#x27;[&#x27;</span>, <span class="string">&#x27;]&#x27;</span>, <span class="string">&#x27;^&#x27;</span>, <span class="string">&#x27;&quot;&#x27;</span>, <span class="string">&#x27;~&#x27;</span>, <span class="string">&#x27;*&#x27;</span>, <span class="string">&#x27;?&#x27;</span>, <span class="string">&#x27;:&#x27;</span>, <span class="string">&#x27;\\&#x27;</span>), <span class="string">&#x27;&#x27;</span>, <span class="variable">$filterKeywords</span>);</span><br></pre></td></tr></table></figure><p>修改为：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 修改后的代码</span></span><br><span class="line"><span class="variable">$filterKeywords</span> = <span class="variable language_">$this</span>-&gt;request-&gt;<span class="title function_ invoke__">get</span>(<span class="string">&#x27;keywords&#x27;</span>);</span><br><span class="line"><span class="variable">$filterKeywords</span> = <span class="title function_ invoke__">trim</span>(<span class="variable">$filterKeywords</span>);</span><br><span class="line"><span class="comment">// 注释掉或删除符号过滤代码</span></span><br><span class="line"><span class="comment">// $filterKeywords = str_replace(array(&#x27;+&#x27;, &#x27;-&#x27;, &#x27;&amp;&#x27;, &#x27;|&#x27;, &#x27;!&#x27;, &#x27;(&#x27;, &#x27;)&#x27;, &#x27;&#123;&#x27;, &#x27;&#125;&#x27;, &#x27;[&#x27;, &#x27;]&#x27;, &#x27;^&#x27;, &#x27;&quot;&#x27;, &#x27;~&#x27;, &#x27;*&#x27;, &#x27;?&#x27;, &#x27;:&#x27;, &#x27;\\&#x27;), &#x27;&#x27;, $filterKeywords);</span></span><br></pre></td></tr></table></figure><h3 id="第二处：SQL查询构建"><a href="#第二处：SQL查询构建" class="headerlink" title="第二处：SQL查询构建"></a>第二处：SQL查询构建</h3><p>找到构建SQL查询的部分：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 原始代码</span></span><br><span class="line"><span class="keyword">if</span> (!<span class="keyword">empty</span>(<span class="variable">$filterKeywords</span>)) &#123;</span><br><span class="line">    <span class="variable">$filterKeywords</span> = <span class="string">&#x27;%&#x27;</span> . <span class="variable">$filterKeywords</span> . <span class="string">&#x27;%&#x27;</span>;</span><br><span class="line">    <span class="variable language_">$this</span>-&gt;db-&gt;<span class="title function_ invoke__">where</span>(<span class="string">&#x27;table.contents.title LIKE ? OR table.contents.text LIKE ?&#x27;</span>, <span class="variable">$filterKeywords</span>, <span class="variable">$filterKeywords</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>修改为：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 修改后的代码</span></span><br><span class="line"><span class="keyword">if</span> (!<span class="keyword">empty</span>(<span class="variable">$filterKeywords</span>)) &#123;</span><br><span class="line">    <span class="comment">// 支持特殊符号的搜索</span></span><br><span class="line">    <span class="variable">$filterKeywords</span> = <span class="string">&#x27;%&#x27;</span> . <span class="title function_ invoke__">addslashes</span>(<span class="variable">$filterKeywords</span>) . <span class="string">&#x27;%&#x27;</span>;</span><br><span class="line">    <span class="variable language_">$this</span>-&gt;db-&gt;<span class="title function_ invoke__">where</span>(<span class="string">&#x27;table.contents.title LIKE ? OR table.contents.text LIKE ?&#x27;</span>, <span class="variable">$filterKeywords</span>, <span class="variable">$filterKeywords</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="完整修改示例"><a href="#完整修改示例" class="headerlink" title="完整修改示例"></a>完整修改示例</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">// var/Widget/Archive.php 修改示例</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Widget_Archive</span> <span class="keyword">extends</span> <span class="title">Widget_Abstract_Contents</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="comment">// ... 其他代码 ...</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 执行搜索</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">search</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;db-&gt;<span class="title function_ invoke__">select</span>(<span class="string">&#x27;table.contents.cid&#x27;</span>, <span class="string">&#x27;table.contents.title&#x27;</span>, <span class="string">&#x27;table.contents.slug&#x27;</span>, <span class="string">&#x27;table.contents.created&#x27;</span>, <span class="string">&#x27;table.contents.authorId&#x27;</span>, <span class="string">&#x27;table.contents.modified&#x27;</span>, <span class="string">&#x27;table.contents.type&#x27;</span>, <span class="string">&#x27;table.contents.status&#x27;</span>, <span class="string">&#x27;table.contents.password&#x27;</span>, <span class="string">&#x27;table.contents.commentsNum&#x27;</span>, <span class="string">&#x27;table.contents.order&#x27;</span>, <span class="string">&#x27;table.contents.template&#x27;</span>, <span class="string">&#x27;table.contents.allowComment&#x27;</span>, <span class="string">&#x27;table.contents.allowPing&#x27;</span>, <span class="string">&#x27;table.contents.allowFeed&#x27;</span>);</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;db-&gt;<span class="keyword">from</span>(<span class="string">&#x27;table.contents&#x27;</span>);</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 获取搜索关键词</span></span><br><span class="line">        <span class="variable">$filterKeywords</span> = <span class="variable language_">$this</span>-&gt;request-&gt;<span class="title function_ invoke__">get</span>(<span class="string">&#x27;keywords&#x27;</span>);</span><br><span class="line">        <span class="variable">$filterKeywords</span> = <span class="title function_ invoke__">trim</span>(<span class="variable">$filterKeywords</span>);</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 注释掉符号过滤，支持符号搜索</span></span><br><span class="line">        <span class="comment">// $filterKeywords = str_replace(array(&#x27;+&#x27;, &#x27;-&#x27;, &#x27;&amp;&#x27;, &#x27;|&#x27;, &#x27;!&#x27;, &#x27;(&#x27;, &#x27;)&#x27;, &#x27;&#123;&#x27;, &#x27;&#125;&#x27;, &#x27;[&#x27;, &#x27;]&#x27;, &#x27;^&#x27;, &#x27;&quot;&#x27;, &#x27;~&#x27;, &#x27;*&#x27;, &#x27;?&#x27;, &#x27;:&#x27;, &#x27;\\&#x27;), &#x27;&#x27;, $filterKeywords);</span></span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> (!<span class="keyword">empty</span>(<span class="variable">$filterKeywords</span>)) &#123;</span><br><span class="line">            <span class="comment">// 使用addslashes防止SQL注入，同时支持符号搜索</span></span><br><span class="line">            <span class="variable">$filterKeywords</span> = <span class="string">&#x27;%&#x27;</span> . <span class="title function_ invoke__">addslashes</span>(<span class="variable">$filterKeywords</span>) . <span class="string">&#x27;%&#x27;</span>;</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;db-&gt;<span class="title function_ invoke__">where</span>(<span class="string">&#x27;table.contents.title LIKE ? OR table.contents.text LIKE ?&#x27;</span>, <span class="variable">$filterKeywords</span>, <span class="variable">$filterKeywords</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// ... 其他搜索逻辑 ...</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="安全注意事项"><a href="#安全注意事项" class="headerlink" title="安全注意事项"></a>安全注意事项</h2><h3 id="1-SQL注入防护"><a href="#1-SQL注入防护" class="headerlink" title="1. SQL注入防护"></a>1. SQL注入防护</h3><p>虽然我们允许符号搜索，但必须确保SQL安全：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 使用addslashes或更好的方法处理输入</span></span><br><span class="line"><span class="variable">$filterKeywords</span> = <span class="title function_ invoke__">addslashes</span>(<span class="variable">$filterKeywords</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 或者使用预处理语句</span></span><br><span class="line"><span class="variable">$stmt</span> = <span class="variable language_">$this</span>-&gt;db-&gt;<span class="title function_ invoke__">prepare</span>(<span class="string">&#x27;SELECT * FROM table.contents WHERE title LIKE ? OR text LIKE ?&#x27;</span>);</span><br><span class="line"><span class="variable">$stmt</span>-&gt;<span class="title function_ invoke__">execute</span>(<span class="keyword">array</span>(<span class="variable">$filterKeywords</span>, <span class="variable">$filterKeywords</span>));</span><br></pre></td></tr></table></figure><h3 id="2-输入验证"><a href="#2-输入验证" class="headerlink" title="2. 输入验证"></a>2. 输入验证</h3><p>添加输入长度和内容验证：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 验证搜索关键词长度</span></span><br><span class="line"><span class="keyword">if</span> (<span class="title function_ invoke__">strlen</span>(<span class="variable">$filterKeywords</span>) &gt; <span class="number">100</span>) &#123;</span><br><span class="line">    <span class="variable">$filterKeywords</span> = <span class="title function_ invoke__">substr</span>(<span class="variable">$filterKeywords</span>, <span class="number">0</span>, <span class="number">100</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 验证是否包含恶意内容</span></span><br><span class="line"><span class="keyword">if</span> (<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/&lt;script|javascript|vbscript|onload|onerror/i&#x27;</span>, <span class="variable">$filterKeywords</span>)) &#123;</span><br><span class="line">    <span class="variable">$filterKeywords</span> = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="测试验证"><a href="#测试验证" class="headerlink" title="测试验证"></a>测试验证</h2><h3 id="1-基本符号测试"><a href="#1-基本符号测试" class="headerlink" title="1. 基本符号测试"></a>1. 基本符号测试</h3><p>测试以下符号是否能正常搜索：</p><ul><li><code>+</code> 加号</li><li><code>-</code> 减号</li><li><code>&amp;</code> 与号</li><li><code>|</code> 或号</li><li><code>!</code> 感叹号</li><li><code>()</code> 括号</li><li><code>[]</code> 方括号</li><li><code>&#123;&#125;</code> 花括号</li></ul><h3 id="2-复杂搜索测试"><a href="#2-复杂搜索测试" class="headerlink" title="2. 复杂搜索测试"></a>2. 复杂搜索测试</h3><p>测试复杂搜索表达式：</p><ul><li><code>PHP + MySQL</code></li><li><code>(前端|后端)开发</code></li><li><code>ongwu &amp; 插件</code></li><li><code>[重要] 更新</code></li></ul><h2 id="性能优化建议"><a href="#性能优化建议" class="headerlink" title="性能优化建议"></a>性能优化建议</h2><h3 id="1-索引优化"><a href="#1-索引优化" class="headerlink" title="1. 索引优化"></a>1. 索引优化</h3><p>为搜索字段添加数据库索引：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 为标题和内容字段添加全文索引</span></span><br><span class="line"><span class="keyword">ALTER TABLE</span> ongwu_contents <span class="keyword">ADD</span> FULLTEXT(title, text);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 或者添加普通索引</span></span><br><span class="line"><span class="keyword">CREATE</span> INDEX idx_contents_title <span class="keyword">ON</span> ongwu_contents(title);</span><br><span class="line"><span class="keyword">CREATE</span> INDEX idx_contents_text <span class="keyword">ON</span> ongwu_contents(text);</span><br></pre></td></tr></table></figure><h3 id="2-搜索结果缓存"><a href="#2-搜索结果缓存" class="headerlink" title="2. 搜索结果缓存"></a>2. 搜索结果缓存</h3><p>实现搜索结果缓存机制：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 缓存搜索结果</span></span><br><span class="line"><span class="variable">$cacheKey</span> = <span class="string">&#x27;search_&#x27;</span> . <span class="title function_ invoke__">md5</span>(<span class="variable">$filterKeywords</span>);</span><br><span class="line"><span class="variable">$cachedResult</span> = <span class="variable language_">$this</span>-&gt;cache-&gt;<span class="title function_ invoke__">get</span>(<span class="variable">$cacheKey</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="variable">$cachedResult</span> !== <span class="literal">false</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="variable">$cachedResult</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 执行搜索</span></span><br><span class="line"><span class="variable">$result</span> = <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">performSearch</span>(<span class="variable">$filterKeywords</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 缓存结果</span></span><br><span class="line"><span class="variable language_">$this</span>-&gt;cache-&gt;<span class="title function_ invoke__">set</span>(<span class="variable">$cacheKey</span>, <span class="variable">$result</span>, <span class="number">3600</span>); <span class="comment">// 缓存1小时</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="variable">$result</span>;</span><br></pre></td></tr></table></figure><h2 id="兼容性考虑"><a href="#兼容性考虑" class="headerlink" title="兼容性考虑"></a>兼容性考虑</h2><h3 id="1-版本兼容"><a href="#1-版本兼容" class="headerlink" title="1. 版本兼容"></a>1. 版本兼容</h3><p>确保修改后的代码与ongwu版本兼容：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 检查ongwu版本</span></span><br><span class="line"><span class="keyword">if</span> (<span class="title function_ invoke__">version_compare</span>(ongwu_<span class="title class_">Common</span>::<span class="variable constant_">VERSION</span>, <span class="string">&#x27;1.2.0&#x27;</span>, <span class="string">&#x27;&gt;=&#x27;</span>)) &#123;</span><br><span class="line">    <span class="comment">// 新版本代码</span></span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="comment">// 旧版本兼容代码</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2-插件兼容"><a href="#2-插件兼容" class="headerlink" title="2. 插件兼容"></a>2. 插件兼容</h3><p>如果使用了其他搜索相关插件，需要确保兼容性：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 检查是否有其他搜索插件</span></span><br><span class="line"><span class="keyword">if</span> (<span class="title function_ invoke__">class_exists</span>(<span class="string">&#x27;Widget_Archive_Search&#x27;</span>)) &#123;</span><br><span class="line">    <span class="comment">// 使用插件提供的搜索功能</span></span><br><span class="line">    <span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">pluginSearch</span>(<span class="variable">$filterKeywords</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>通过修改ongwu源码，我们可以实现符号搜索功能，但需要注意：</p><ol><li><strong>安全性</strong>：使用<code>addslashes</code>或预处理语句防止SQL注入</li><li><strong>性能</strong>：添加适当的数据库索引和缓存机制</li><li><strong>兼容性</strong>：确保与ongwu版本和其他插件的兼容性</li><li><strong>维护性</strong>：记录修改内容，便于后续升级</li></ol><p>这样修改后，ongwu就能支持包含符号的搜索了，满足更复杂的搜索需求。</p><hr><p><em>注意：修改源码后，在ongwu升级时需要重新应用这些修改。建议将修改内容记录在文档中，或者创建补丁文件。</em></p>]]></content>
      
      
      <categories>
          
          <category> tutorial </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ongwu </tag>
            
            <tag> 搜索功能 </tag>
            
            <tag> 源码修改 </tag>
            
            <tag> 符号搜索 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>让ongwu支持搜索符号</title>
      <link href="/2025/01/09/7%20-%20%E5%89%AF%E6%9C%AC%20(4)/"/>
      <url>/2025/01/09/7%20-%20%E5%89%AF%E6%9C%AC%20(4)/</url>
      
        <content type="html"><![CDATA[<h1 id="让ongwu支持搜索符号"><a href="#让ongwu支持搜索符号" class="headerlink" title="让ongwu支持搜索符号"></a>让ongwu支持搜索符号</h1><h2 id="问题背景"><a href="#问题背景" class="headerlink" title="问题背景"></a>问题背景</h2><p>用过ongwu的应该都清楚它本身搜索是不支持符号的，一般都会过滤掉，只会保留文字字母数字进行搜索。这种过滤应该是出于安全考虑的，但如果你的需求需要搜索符号之类的东西，则可以通过修改源码的方式实现。</p><h2 id="修改原理"><a href="#修改原理" class="headerlink" title="修改原理"></a>修改原理</h2><p>ongwu的搜索功能是在<code>var/Widget/Archive.php</code>中实现的，所以需要修改两处代码：</p><h3 id="第一处：关键词过滤逻辑"><a href="#第一处：关键词过滤逻辑" class="headerlink" title="第一处：关键词过滤逻辑"></a>第一处：关键词过滤逻辑</h3><p>在<code>var/Widget/Archive.php</code>文件中找到以下代码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 原始代码</span></span><br><span class="line"><span class="variable">$filterKeywords</span> = <span class="variable language_">$this</span>-&gt;request-&gt;<span class="title function_ invoke__">get</span>(<span class="string">&#x27;keywords&#x27;</span>);</span><br><span class="line"><span class="variable">$filterKeywords</span> = <span class="title function_ invoke__">trim</span>(<span class="variable">$filterKeywords</span>);</span><br><span class="line"><span class="variable">$filterKeywords</span> = <span class="title function_ invoke__">str_replace</span>(<span class="keyword">array</span>(<span class="string">&#x27;+&#x27;</span>, <span class="string">&#x27;-&#x27;</span>, <span class="string">&#x27;&amp;&#x27;</span>, <span class="string">&#x27;|&#x27;</span>, <span class="string">&#x27;!&#x27;</span>, <span class="string">&#x27;(&#x27;</span>, <span class="string">&#x27;)&#x27;</span>, <span class="string">&#x27;&#123;&#x27;</span>, <span class="string">&#x27;&#125;&#x27;</span>, <span class="string">&#x27;[&#x27;</span>, <span class="string">&#x27;]&#x27;</span>, <span class="string">&#x27;^&#x27;</span>, <span class="string">&#x27;&quot;&#x27;</span>, <span class="string">&#x27;~&#x27;</span>, <span class="string">&#x27;*&#x27;</span>, <span class="string">&#x27;?&#x27;</span>, <span class="string">&#x27;:&#x27;</span>, <span class="string">&#x27;\\&#x27;</span>), <span class="string">&#x27;&#x27;</span>, <span class="variable">$filterKeywords</span>);</span><br></pre></td></tr></table></figure><p>修改为：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 修改后的代码</span></span><br><span class="line"><span class="variable">$filterKeywords</span> = <span class="variable language_">$this</span>-&gt;request-&gt;<span class="title function_ invoke__">get</span>(<span class="string">&#x27;keywords&#x27;</span>);</span><br><span class="line"><span class="variable">$filterKeywords</span> = <span class="title function_ invoke__">trim</span>(<span class="variable">$filterKeywords</span>);</span><br><span class="line"><span class="comment">// 注释掉或删除符号过滤代码</span></span><br><span class="line"><span class="comment">// $filterKeywords = str_replace(array(&#x27;+&#x27;, &#x27;-&#x27;, &#x27;&amp;&#x27;, &#x27;|&#x27;, &#x27;!&#x27;, &#x27;(&#x27;, &#x27;)&#x27;, &#x27;&#123;&#x27;, &#x27;&#125;&#x27;, &#x27;[&#x27;, &#x27;]&#x27;, &#x27;^&#x27;, &#x27;&quot;&#x27;, &#x27;~&#x27;, &#x27;*&#x27;, &#x27;?&#x27;, &#x27;:&#x27;, &#x27;\\&#x27;), &#x27;&#x27;, $filterKeywords);</span></span><br></pre></td></tr></table></figure><h3 id="第二处：SQL查询构建"><a href="#第二处：SQL查询构建" class="headerlink" title="第二处：SQL查询构建"></a>第二处：SQL查询构建</h3><p>找到构建SQL查询的部分：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 原始代码</span></span><br><span class="line"><span class="keyword">if</span> (!<span class="keyword">empty</span>(<span class="variable">$filterKeywords</span>)) &#123;</span><br><span class="line">    <span class="variable">$filterKeywords</span> = <span class="string">&#x27;%&#x27;</span> . <span class="variable">$filterKeywords</span> . <span class="string">&#x27;%&#x27;</span>;</span><br><span class="line">    <span class="variable language_">$this</span>-&gt;db-&gt;<span class="title function_ invoke__">where</span>(<span class="string">&#x27;table.contents.title LIKE ? OR table.contents.text LIKE ?&#x27;</span>, <span class="variable">$filterKeywords</span>, <span class="variable">$filterKeywords</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>修改为：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 修改后的代码</span></span><br><span class="line"><span class="keyword">if</span> (!<span class="keyword">empty</span>(<span class="variable">$filterKeywords</span>)) &#123;</span><br><span class="line">    <span class="comment">// 支持特殊符号的搜索</span></span><br><span class="line">    <span class="variable">$filterKeywords</span> = <span class="string">&#x27;%&#x27;</span> . <span class="title function_ invoke__">addslashes</span>(<span class="variable">$filterKeywords</span>) . <span class="string">&#x27;%&#x27;</span>;</span><br><span class="line">    <span class="variable language_">$this</span>-&gt;db-&gt;<span class="title function_ invoke__">where</span>(<span class="string">&#x27;table.contents.title LIKE ? OR table.contents.text LIKE ?&#x27;</span>, <span class="variable">$filterKeywords</span>, <span class="variable">$filterKeywords</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="完整修改示例"><a href="#完整修改示例" class="headerlink" title="完整修改示例"></a>完整修改示例</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">// var/Widget/Archive.php 修改示例</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Widget_Archive</span> <span class="keyword">extends</span> <span class="title">Widget_Abstract_Contents</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="comment">// ... 其他代码 ...</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 执行搜索</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">search</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;db-&gt;<span class="title function_ invoke__">select</span>(<span class="string">&#x27;table.contents.cid&#x27;</span>, <span class="string">&#x27;table.contents.title&#x27;</span>, <span class="string">&#x27;table.contents.slug&#x27;</span>, <span class="string">&#x27;table.contents.created&#x27;</span>, <span class="string">&#x27;table.contents.authorId&#x27;</span>, <span class="string">&#x27;table.contents.modified&#x27;</span>, <span class="string">&#x27;table.contents.type&#x27;</span>, <span class="string">&#x27;table.contents.status&#x27;</span>, <span class="string">&#x27;table.contents.password&#x27;</span>, <span class="string">&#x27;table.contents.commentsNum&#x27;</span>, <span class="string">&#x27;table.contents.order&#x27;</span>, <span class="string">&#x27;table.contents.template&#x27;</span>, <span class="string">&#x27;table.contents.allowComment&#x27;</span>, <span class="string">&#x27;table.contents.allowPing&#x27;</span>, <span class="string">&#x27;table.contents.allowFeed&#x27;</span>);</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;db-&gt;<span class="keyword">from</span>(<span class="string">&#x27;table.contents&#x27;</span>);</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 获取搜索关键词</span></span><br><span class="line">        <span class="variable">$filterKeywords</span> = <span class="variable language_">$this</span>-&gt;request-&gt;<span class="title function_ invoke__">get</span>(<span class="string">&#x27;keywords&#x27;</span>);</span><br><span class="line">        <span class="variable">$filterKeywords</span> = <span class="title function_ invoke__">trim</span>(<span class="variable">$filterKeywords</span>);</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 注释掉符号过滤，支持符号搜索</span></span><br><span class="line">        <span class="comment">// $filterKeywords = str_replace(array(&#x27;+&#x27;, &#x27;-&#x27;, &#x27;&amp;&#x27;, &#x27;|&#x27;, &#x27;!&#x27;, &#x27;(&#x27;, &#x27;)&#x27;, &#x27;&#123;&#x27;, &#x27;&#125;&#x27;, &#x27;[&#x27;, &#x27;]&#x27;, &#x27;^&#x27;, &#x27;&quot;&#x27;, &#x27;~&#x27;, &#x27;*&#x27;, &#x27;?&#x27;, &#x27;:&#x27;, &#x27;\\&#x27;), &#x27;&#x27;, $filterKeywords);</span></span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> (!<span class="keyword">empty</span>(<span class="variable">$filterKeywords</span>)) &#123;</span><br><span class="line">            <span class="comment">// 使用addslashes防止SQL注入，同时支持符号搜索</span></span><br><span class="line">            <span class="variable">$filterKeywords</span> = <span class="string">&#x27;%&#x27;</span> . <span class="title function_ invoke__">addslashes</span>(<span class="variable">$filterKeywords</span>) . <span class="string">&#x27;%&#x27;</span>;</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;db-&gt;<span class="title function_ invoke__">where</span>(<span class="string">&#x27;table.contents.title LIKE ? OR table.contents.text LIKE ?&#x27;</span>, <span class="variable">$filterKeywords</span>, <span class="variable">$filterKeywords</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// ... 其他搜索逻辑 ...</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="安全注意事项"><a href="#安全注意事项" class="headerlink" title="安全注意事项"></a>安全注意事项</h2><h3 id="1-SQL注入防护"><a href="#1-SQL注入防护" class="headerlink" title="1. SQL注入防护"></a>1. SQL注入防护</h3><p>虽然我们允许符号搜索，但必须确保SQL安全：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 使用addslashes或更好的方法处理输入</span></span><br><span class="line"><span class="variable">$filterKeywords</span> = <span class="title function_ invoke__">addslashes</span>(<span class="variable">$filterKeywords</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 或者使用预处理语句</span></span><br><span class="line"><span class="variable">$stmt</span> = <span class="variable language_">$this</span>-&gt;db-&gt;<span class="title function_ invoke__">prepare</span>(<span class="string">&#x27;SELECT * FROM table.contents WHERE title LIKE ? OR text LIKE ?&#x27;</span>);</span><br><span class="line"><span class="variable">$stmt</span>-&gt;<span class="title function_ invoke__">execute</span>(<span class="keyword">array</span>(<span class="variable">$filterKeywords</span>, <span class="variable">$filterKeywords</span>));</span><br></pre></td></tr></table></figure><h3 id="2-输入验证"><a href="#2-输入验证" class="headerlink" title="2. 输入验证"></a>2. 输入验证</h3><p>添加输入长度和内容验证：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 验证搜索关键词长度</span></span><br><span class="line"><span class="keyword">if</span> (<span class="title function_ invoke__">strlen</span>(<span class="variable">$filterKeywords</span>) &gt; <span class="number">100</span>) &#123;</span><br><span class="line">    <span class="variable">$filterKeywords</span> = <span class="title function_ invoke__">substr</span>(<span class="variable">$filterKeywords</span>, <span class="number">0</span>, <span class="number">100</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 验证是否包含恶意内容</span></span><br><span class="line"><span class="keyword">if</span> (<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/&lt;script|javascript|vbscript|onload|onerror/i&#x27;</span>, <span class="variable">$filterKeywords</span>)) &#123;</span><br><span class="line">    <span class="variable">$filterKeywords</span> = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="测试验证"><a href="#测试验证" class="headerlink" title="测试验证"></a>测试验证</h2><h3 id="1-基本符号测试"><a href="#1-基本符号测试" class="headerlink" title="1. 基本符号测试"></a>1. 基本符号测试</h3><p>测试以下符号是否能正常搜索：</p><ul><li><code>+</code> 加号</li><li><code>-</code> 减号</li><li><code>&amp;</code> 与号</li><li><code>|</code> 或号</li><li><code>!</code> 感叹号</li><li><code>()</code> 括号</li><li><code>[]</code> 方括号</li><li><code>&#123;&#125;</code> 花括号</li></ul><h3 id="2-复杂搜索测试"><a href="#2-复杂搜索测试" class="headerlink" title="2. 复杂搜索测试"></a>2. 复杂搜索测试</h3><p>测试复杂搜索表达式：</p><ul><li><code>PHP + MySQL</code></li><li><code>(前端|后端)开发</code></li><li><code>ongwu &amp; 插件</code></li><li><code>[重要] 更新</code></li></ul><h2 id="性能优化建议"><a href="#性能优化建议" class="headerlink" title="性能优化建议"></a>性能优化建议</h2><h3 id="1-索引优化"><a href="#1-索引优化" class="headerlink" title="1. 索引优化"></a>1. 索引优化</h3><p>为搜索字段添加数据库索引：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 为标题和内容字段添加全文索引</span></span><br><span class="line"><span class="keyword">ALTER TABLE</span> ongwu_contents <span class="keyword">ADD</span> FULLTEXT(title, text);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 或者添加普通索引</span></span><br><span class="line"><span class="keyword">CREATE</span> INDEX idx_contents_title <span class="keyword">ON</span> ongwu_contents(title);</span><br><span class="line"><span class="keyword">CREATE</span> INDEX idx_contents_text <span class="keyword">ON</span> ongwu_contents(text);</span><br></pre></td></tr></table></figure><h3 id="2-搜索结果缓存"><a href="#2-搜索结果缓存" class="headerlink" title="2. 搜索结果缓存"></a>2. 搜索结果缓存</h3><p>实现搜索结果缓存机制：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 缓存搜索结果</span></span><br><span class="line"><span class="variable">$cacheKey</span> = <span class="string">&#x27;search_&#x27;</span> . <span class="title function_ invoke__">md5</span>(<span class="variable">$filterKeywords</span>);</span><br><span class="line"><span class="variable">$cachedResult</span> = <span class="variable language_">$this</span>-&gt;cache-&gt;<span class="title function_ invoke__">get</span>(<span class="variable">$cacheKey</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="variable">$cachedResult</span> !== <span class="literal">false</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="variable">$cachedResult</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 执行搜索</span></span><br><span class="line"><span class="variable">$result</span> = <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">performSearch</span>(<span class="variable">$filterKeywords</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 缓存结果</span></span><br><span class="line"><span class="variable language_">$this</span>-&gt;cache-&gt;<span class="title function_ invoke__">set</span>(<span class="variable">$cacheKey</span>, <span class="variable">$result</span>, <span class="number">3600</span>); <span class="comment">// 缓存1小时</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="variable">$result</span>;</span><br></pre></td></tr></table></figure><h2 id="兼容性考虑"><a href="#兼容性考虑" class="headerlink" title="兼容性考虑"></a>兼容性考虑</h2><h3 id="1-版本兼容"><a href="#1-版本兼容" class="headerlink" title="1. 版本兼容"></a>1. 版本兼容</h3><p>确保修改后的代码与ongwu版本兼容：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 检查ongwu版本</span></span><br><span class="line"><span class="keyword">if</span> (<span class="title function_ invoke__">version_compare</span>(ongwu_<span class="title class_">Common</span>::<span class="variable constant_">VERSION</span>, <span class="string">&#x27;1.2.0&#x27;</span>, <span class="string">&#x27;&gt;=&#x27;</span>)) &#123;</span><br><span class="line">    <span class="comment">// 新版本代码</span></span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="comment">// 旧版本兼容代码</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2-插件兼容"><a href="#2-插件兼容" class="headerlink" title="2. 插件兼容"></a>2. 插件兼容</h3><p>如果使用了其他搜索相关插件，需要确保兼容性：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 检查是否有其他搜索插件</span></span><br><span class="line"><span class="keyword">if</span> (<span class="title function_ invoke__">class_exists</span>(<span class="string">&#x27;Widget_Archive_Search&#x27;</span>)) &#123;</span><br><span class="line">    <span class="comment">// 使用插件提供的搜索功能</span></span><br><span class="line">    <span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">pluginSearch</span>(<span class="variable">$filterKeywords</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>通过修改ongwu源码，我们可以实现符号搜索功能，但需要注意：</p><ol><li><strong>安全性</strong>：使用<code>addslashes</code>或预处理语句防止SQL注入</li><li><strong>性能</strong>：添加适当的数据库索引和缓存机制</li><li><strong>兼容性</strong>：确保与ongwu版本和其他插件的兼容性</li><li><strong>维护性</strong>：记录修改内容，便于后续升级</li></ol><p>这样修改后，ongwu就能支持包含符号的搜索了，满足更复杂的搜索需求。</p><hr><p><em>注意：修改源码后，在ongwu升级时需要重新应用这些修改。建议将修改内容记录在文档中，或者创建补丁文件。</em></p>]]></content>
      
      
      <categories>
          
          <category> tutorial </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ongwu </tag>
            
            <tag> 搜索功能 </tag>
            
            <tag> 源码修改 </tag>
            
            <tag> 符号搜索 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>让ongwu支持搜索符号</title>
      <link href="/2025/01/09/7%20-%20%E5%89%AF%E6%9C%AC%20(5)%20-%20%E5%89%AF%E6%9C%AC/"/>
      <url>/2025/01/09/7%20-%20%E5%89%AF%E6%9C%AC%20(5)%20-%20%E5%89%AF%E6%9C%AC/</url>
      
        <content type="html"><![CDATA[<h1 id="让ongwu支持搜索符号"><a href="#让ongwu支持搜索符号" class="headerlink" title="让ongwu支持搜索符号"></a>让ongwu支持搜索符号</h1><h2 id="问题背景"><a href="#问题背景" class="headerlink" title="问题背景"></a>问题背景</h2><p>用过ongwu的应该都清楚它本身搜索是不支持符号的，一般都会过滤掉，只会保留文字字母数字进行搜索。这种过滤应该是出于安全考虑的，但如果你的需求需要搜索符号之类的东西，则可以通过修改源码的方式实现。</p><h2 id="修改原理"><a href="#修改原理" class="headerlink" title="修改原理"></a>修改原理</h2><p>ongwu的搜索功能是在<code>var/Widget/Archive.php</code>中实现的，所以需要修改两处代码：</p><h3 id="第一处：关键词过滤逻辑"><a href="#第一处：关键词过滤逻辑" class="headerlink" title="第一处：关键词过滤逻辑"></a>第一处：关键词过滤逻辑</h3><p>在<code>var/Widget/Archive.php</code>文件中找到以下代码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 原始代码</span></span><br><span class="line"><span class="variable">$filterKeywords</span> = <span class="variable language_">$this</span>-&gt;request-&gt;<span class="title function_ invoke__">get</span>(<span class="string">&#x27;keywords&#x27;</span>);</span><br><span class="line"><span class="variable">$filterKeywords</span> = <span class="title function_ invoke__">trim</span>(<span class="variable">$filterKeywords</span>);</span><br><span class="line"><span class="variable">$filterKeywords</span> = <span class="title function_ invoke__">str_replace</span>(<span class="keyword">array</span>(<span class="string">&#x27;+&#x27;</span>, <span class="string">&#x27;-&#x27;</span>, <span class="string">&#x27;&amp;&#x27;</span>, <span class="string">&#x27;|&#x27;</span>, <span class="string">&#x27;!&#x27;</span>, <span class="string">&#x27;(&#x27;</span>, <span class="string">&#x27;)&#x27;</span>, <span class="string">&#x27;&#123;&#x27;</span>, <span class="string">&#x27;&#125;&#x27;</span>, <span class="string">&#x27;[&#x27;</span>, <span class="string">&#x27;]&#x27;</span>, <span class="string">&#x27;^&#x27;</span>, <span class="string">&#x27;&quot;&#x27;</span>, <span class="string">&#x27;~&#x27;</span>, <span class="string">&#x27;*&#x27;</span>, <span class="string">&#x27;?&#x27;</span>, <span class="string">&#x27;:&#x27;</span>, <span class="string">&#x27;\\&#x27;</span>), <span class="string">&#x27;&#x27;</span>, <span class="variable">$filterKeywords</span>);</span><br></pre></td></tr></table></figure><p>修改为：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 修改后的代码</span></span><br><span class="line"><span class="variable">$filterKeywords</span> = <span class="variable language_">$this</span>-&gt;request-&gt;<span class="title function_ invoke__">get</span>(<span class="string">&#x27;keywords&#x27;</span>);</span><br><span class="line"><span class="variable">$filterKeywords</span> = <span class="title function_ invoke__">trim</span>(<span class="variable">$filterKeywords</span>);</span><br><span class="line"><span class="comment">// 注释掉或删除符号过滤代码</span></span><br><span class="line"><span class="comment">// $filterKeywords = str_replace(array(&#x27;+&#x27;, &#x27;-&#x27;, &#x27;&amp;&#x27;, &#x27;|&#x27;, &#x27;!&#x27;, &#x27;(&#x27;, &#x27;)&#x27;, &#x27;&#123;&#x27;, &#x27;&#125;&#x27;, &#x27;[&#x27;, &#x27;]&#x27;, &#x27;^&#x27;, &#x27;&quot;&#x27;, &#x27;~&#x27;, &#x27;*&#x27;, &#x27;?&#x27;, &#x27;:&#x27;, &#x27;\\&#x27;), &#x27;&#x27;, $filterKeywords);</span></span><br></pre></td></tr></table></figure><h3 id="第二处：SQL查询构建"><a href="#第二处：SQL查询构建" class="headerlink" title="第二处：SQL查询构建"></a>第二处：SQL查询构建</h3><p>找到构建SQL查询的部分：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 原始代码</span></span><br><span class="line"><span class="keyword">if</span> (!<span class="keyword">empty</span>(<span class="variable">$filterKeywords</span>)) &#123;</span><br><span class="line">    <span class="variable">$filterKeywords</span> = <span class="string">&#x27;%&#x27;</span> . <span class="variable">$filterKeywords</span> . <span class="string">&#x27;%&#x27;</span>;</span><br><span class="line">    <span class="variable language_">$this</span>-&gt;db-&gt;<span class="title function_ invoke__">where</span>(<span class="string">&#x27;table.contents.title LIKE ? OR table.contents.text LIKE ?&#x27;</span>, <span class="variable">$filterKeywords</span>, <span class="variable">$filterKeywords</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>修改为：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 修改后的代码</span></span><br><span class="line"><span class="keyword">if</span> (!<span class="keyword">empty</span>(<span class="variable">$filterKeywords</span>)) &#123;</span><br><span class="line">    <span class="comment">// 支持特殊符号的搜索</span></span><br><span class="line">    <span class="variable">$filterKeywords</span> = <span class="string">&#x27;%&#x27;</span> . <span class="title function_ invoke__">addslashes</span>(<span class="variable">$filterKeywords</span>) . <span class="string">&#x27;%&#x27;</span>;</span><br><span class="line">    <span class="variable language_">$this</span>-&gt;db-&gt;<span class="title function_ invoke__">where</span>(<span class="string">&#x27;table.contents.title LIKE ? OR table.contents.text LIKE ?&#x27;</span>, <span class="variable">$filterKeywords</span>, <span class="variable">$filterKeywords</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="完整修改示例"><a href="#完整修改示例" class="headerlink" title="完整修改示例"></a>完整修改示例</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">// var/Widget/Archive.php 修改示例</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Widget_Archive</span> <span class="keyword">extends</span> <span class="title">Widget_Abstract_Contents</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="comment">// ... 其他代码 ...</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 执行搜索</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">search</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;db-&gt;<span class="title function_ invoke__">select</span>(<span class="string">&#x27;table.contents.cid&#x27;</span>, <span class="string">&#x27;table.contents.title&#x27;</span>, <span class="string">&#x27;table.contents.slug&#x27;</span>, <span class="string">&#x27;table.contents.created&#x27;</span>, <span class="string">&#x27;table.contents.authorId&#x27;</span>, <span class="string">&#x27;table.contents.modified&#x27;</span>, <span class="string">&#x27;table.contents.type&#x27;</span>, <span class="string">&#x27;table.contents.status&#x27;</span>, <span class="string">&#x27;table.contents.password&#x27;</span>, <span class="string">&#x27;table.contents.commentsNum&#x27;</span>, <span class="string">&#x27;table.contents.order&#x27;</span>, <span class="string">&#x27;table.contents.template&#x27;</span>, <span class="string">&#x27;table.contents.allowComment&#x27;</span>, <span class="string">&#x27;table.contents.allowPing&#x27;</span>, <span class="string">&#x27;table.contents.allowFeed&#x27;</span>);</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;db-&gt;<span class="keyword">from</span>(<span class="string">&#x27;table.contents&#x27;</span>);</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 获取搜索关键词</span></span><br><span class="line">        <span class="variable">$filterKeywords</span> = <span class="variable language_">$this</span>-&gt;request-&gt;<span class="title function_ invoke__">get</span>(<span class="string">&#x27;keywords&#x27;</span>);</span><br><span class="line">        <span class="variable">$filterKeywords</span> = <span class="title function_ invoke__">trim</span>(<span class="variable">$filterKeywords</span>);</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 注释掉符号过滤，支持符号搜索</span></span><br><span class="line">        <span class="comment">// $filterKeywords = str_replace(array(&#x27;+&#x27;, &#x27;-&#x27;, &#x27;&amp;&#x27;, &#x27;|&#x27;, &#x27;!&#x27;, &#x27;(&#x27;, &#x27;)&#x27;, &#x27;&#123;&#x27;, &#x27;&#125;&#x27;, &#x27;[&#x27;, &#x27;]&#x27;, &#x27;^&#x27;, &#x27;&quot;&#x27;, &#x27;~&#x27;, &#x27;*&#x27;, &#x27;?&#x27;, &#x27;:&#x27;, &#x27;\\&#x27;), &#x27;&#x27;, $filterKeywords);</span></span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> (!<span class="keyword">empty</span>(<span class="variable">$filterKeywords</span>)) &#123;</span><br><span class="line">            <span class="comment">// 使用addslashes防止SQL注入，同时支持符号搜索</span></span><br><span class="line">            <span class="variable">$filterKeywords</span> = <span class="string">&#x27;%&#x27;</span> . <span class="title function_ invoke__">addslashes</span>(<span class="variable">$filterKeywords</span>) . <span class="string">&#x27;%&#x27;</span>;</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;db-&gt;<span class="title function_ invoke__">where</span>(<span class="string">&#x27;table.contents.title LIKE ? OR table.contents.text LIKE ?&#x27;</span>, <span class="variable">$filterKeywords</span>, <span class="variable">$filterKeywords</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// ... 其他搜索逻辑 ...</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="安全注意事项"><a href="#安全注意事项" class="headerlink" title="安全注意事项"></a>安全注意事项</h2><h3 id="1-SQL注入防护"><a href="#1-SQL注入防护" class="headerlink" title="1. SQL注入防护"></a>1. SQL注入防护</h3><p>虽然我们允许符号搜索，但必须确保SQL安全：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 使用addslashes或更好的方法处理输入</span></span><br><span class="line"><span class="variable">$filterKeywords</span> = <span class="title function_ invoke__">addslashes</span>(<span class="variable">$filterKeywords</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 或者使用预处理语句</span></span><br><span class="line"><span class="variable">$stmt</span> = <span class="variable language_">$this</span>-&gt;db-&gt;<span class="title function_ invoke__">prepare</span>(<span class="string">&#x27;SELECT * FROM table.contents WHERE title LIKE ? OR text LIKE ?&#x27;</span>);</span><br><span class="line"><span class="variable">$stmt</span>-&gt;<span class="title function_ invoke__">execute</span>(<span class="keyword">array</span>(<span class="variable">$filterKeywords</span>, <span class="variable">$filterKeywords</span>));</span><br></pre></td></tr></table></figure><h3 id="2-输入验证"><a href="#2-输入验证" class="headerlink" title="2. 输入验证"></a>2. 输入验证</h3><p>添加输入长度和内容验证：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 验证搜索关键词长度</span></span><br><span class="line"><span class="keyword">if</span> (<span class="title function_ invoke__">strlen</span>(<span class="variable">$filterKeywords</span>) &gt; <span class="number">100</span>) &#123;</span><br><span class="line">    <span class="variable">$filterKeywords</span> = <span class="title function_ invoke__">substr</span>(<span class="variable">$filterKeywords</span>, <span class="number">0</span>, <span class="number">100</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 验证是否包含恶意内容</span></span><br><span class="line"><span class="keyword">if</span> (<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/&lt;script|javascript|vbscript|onload|onerror/i&#x27;</span>, <span class="variable">$filterKeywords</span>)) &#123;</span><br><span class="line">    <span class="variable">$filterKeywords</span> = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="测试验证"><a href="#测试验证" class="headerlink" title="测试验证"></a>测试验证</h2><h3 id="1-基本符号测试"><a href="#1-基本符号测试" class="headerlink" title="1. 基本符号测试"></a>1. 基本符号测试</h3><p>测试以下符号是否能正常搜索：</p><ul><li><code>+</code> 加号</li><li><code>-</code> 减号</li><li><code>&amp;</code> 与号</li><li><code>|</code> 或号</li><li><code>!</code> 感叹号</li><li><code>()</code> 括号</li><li><code>[]</code> 方括号</li><li><code>&#123;&#125;</code> 花括号</li></ul><h3 id="2-复杂搜索测试"><a href="#2-复杂搜索测试" class="headerlink" title="2. 复杂搜索测试"></a>2. 复杂搜索测试</h3><p>测试复杂搜索表达式：</p><ul><li><code>PHP + MySQL</code></li><li><code>(前端|后端)开发</code></li><li><code>ongwu &amp; 插件</code></li><li><code>[重要] 更新</code></li></ul><h2 id="性能优化建议"><a href="#性能优化建议" class="headerlink" title="性能优化建议"></a>性能优化建议</h2><h3 id="1-索引优化"><a href="#1-索引优化" class="headerlink" title="1. 索引优化"></a>1. 索引优化</h3><p>为搜索字段添加数据库索引：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 为标题和内容字段添加全文索引</span></span><br><span class="line"><span class="keyword">ALTER TABLE</span> ongwu_contents <span class="keyword">ADD</span> FULLTEXT(title, text);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 或者添加普通索引</span></span><br><span class="line"><span class="keyword">CREATE</span> INDEX idx_contents_title <span class="keyword">ON</span> ongwu_contents(title);</span><br><span class="line"><span class="keyword">CREATE</span> INDEX idx_contents_text <span class="keyword">ON</span> ongwu_contents(text);</span><br></pre></td></tr></table></figure><h3 id="2-搜索结果缓存"><a href="#2-搜索结果缓存" class="headerlink" title="2. 搜索结果缓存"></a>2. 搜索结果缓存</h3><p>实现搜索结果缓存机制：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 缓存搜索结果</span></span><br><span class="line"><span class="variable">$cacheKey</span> = <span class="string">&#x27;search_&#x27;</span> . <span class="title function_ invoke__">md5</span>(<span class="variable">$filterKeywords</span>);</span><br><span class="line"><span class="variable">$cachedResult</span> = <span class="variable language_">$this</span>-&gt;cache-&gt;<span class="title function_ invoke__">get</span>(<span class="variable">$cacheKey</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="variable">$cachedResult</span> !== <span class="literal">false</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="variable">$cachedResult</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 执行搜索</span></span><br><span class="line"><span class="variable">$result</span> = <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">performSearch</span>(<span class="variable">$filterKeywords</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 缓存结果</span></span><br><span class="line"><span class="variable language_">$this</span>-&gt;cache-&gt;<span class="title function_ invoke__">set</span>(<span class="variable">$cacheKey</span>, <span class="variable">$result</span>, <span class="number">3600</span>); <span class="comment">// 缓存1小时</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="variable">$result</span>;</span><br></pre></td></tr></table></figure><h2 id="兼容性考虑"><a href="#兼容性考虑" class="headerlink" title="兼容性考虑"></a>兼容性考虑</h2><h3 id="1-版本兼容"><a href="#1-版本兼容" class="headerlink" title="1. 版本兼容"></a>1. 版本兼容</h3><p>确保修改后的代码与ongwu版本兼容：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 检查ongwu版本</span></span><br><span class="line"><span class="keyword">if</span> (<span class="title function_ invoke__">version_compare</span>(ongwu_<span class="title class_">Common</span>::<span class="variable constant_">VERSION</span>, <span class="string">&#x27;1.2.0&#x27;</span>, <span class="string">&#x27;&gt;=&#x27;</span>)) &#123;</span><br><span class="line">    <span class="comment">// 新版本代码</span></span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="comment">// 旧版本兼容代码</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2-插件兼容"><a href="#2-插件兼容" class="headerlink" title="2. 插件兼容"></a>2. 插件兼容</h3><p>如果使用了其他搜索相关插件，需要确保兼容性：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 检查是否有其他搜索插件</span></span><br><span class="line"><span class="keyword">if</span> (<span class="title function_ invoke__">class_exists</span>(<span class="string">&#x27;Widget_Archive_Search&#x27;</span>)) &#123;</span><br><span class="line">    <span class="comment">// 使用插件提供的搜索功能</span></span><br><span class="line">    <span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">pluginSearch</span>(<span class="variable">$filterKeywords</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>通过修改ongwu源码，我们可以实现符号搜索功能，但需要注意：</p><ol><li><strong>安全性</strong>：使用<code>addslashes</code>或预处理语句防止SQL注入</li><li><strong>性能</strong>：添加适当的数据库索引和缓存机制</li><li><strong>兼容性</strong>：确保与ongwu版本和其他插件的兼容性</li><li><strong>维护性</strong>：记录修改内容，便于后续升级</li></ol><p>这样修改后，ongwu就能支持包含符号的搜索了，满足更复杂的搜索需求。</p><hr><p><em>注意：修改源码后，在ongwu升级时需要重新应用这些修改。建议将修改内容记录在文档中，或者创建补丁文件。</em></p>]]></content>
      
      
      <categories>
          
          <category> tutorial </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ongwu </tag>
            
            <tag> 搜索功能 </tag>
            
            <tag> 源码修改 </tag>
            
            <tag> 符号搜索 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>让ongwu支持搜索符号</title>
      <link href="/2025/01/09/7%20-%20%E5%89%AF%E6%9C%AC%20(5)/"/>
      <url>/2025/01/09/7%20-%20%E5%89%AF%E6%9C%AC%20(5)/</url>
      
        <content type="html"><![CDATA[<h1 id="让ongwu支持搜索符号"><a href="#让ongwu支持搜索符号" class="headerlink" title="让ongwu支持搜索符号"></a>让ongwu支持搜索符号</h1><h2 id="问题背景"><a href="#问题背景" class="headerlink" title="问题背景"></a>问题背景</h2><p>用过ongwu的应该都清楚它本身搜索是不支持符号的，一般都会过滤掉，只会保留文字字母数字进行搜索。这种过滤应该是出于安全考虑的，但如果你的需求需要搜索符号之类的东西，则可以通过修改源码的方式实现。</p><h2 id="修改原理"><a href="#修改原理" class="headerlink" title="修改原理"></a>修改原理</h2><p>ongwu的搜索功能是在<code>var/Widget/Archive.php</code>中实现的，所以需要修改两处代码：</p><h3 id="第一处：关键词过滤逻辑"><a href="#第一处：关键词过滤逻辑" class="headerlink" title="第一处：关键词过滤逻辑"></a>第一处：关键词过滤逻辑</h3><p>在<code>var/Widget/Archive.php</code>文件中找到以下代码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 原始代码</span></span><br><span class="line"><span class="variable">$filterKeywords</span> = <span class="variable language_">$this</span>-&gt;request-&gt;<span class="title function_ invoke__">get</span>(<span class="string">&#x27;keywords&#x27;</span>);</span><br><span class="line"><span class="variable">$filterKeywords</span> = <span class="title function_ invoke__">trim</span>(<span class="variable">$filterKeywords</span>);</span><br><span class="line"><span class="variable">$filterKeywords</span> = <span class="title function_ invoke__">str_replace</span>(<span class="keyword">array</span>(<span class="string">&#x27;+&#x27;</span>, <span class="string">&#x27;-&#x27;</span>, <span class="string">&#x27;&amp;&#x27;</span>, <span class="string">&#x27;|&#x27;</span>, <span class="string">&#x27;!&#x27;</span>, <span class="string">&#x27;(&#x27;</span>, <span class="string">&#x27;)&#x27;</span>, <span class="string">&#x27;&#123;&#x27;</span>, <span class="string">&#x27;&#125;&#x27;</span>, <span class="string">&#x27;[&#x27;</span>, <span class="string">&#x27;]&#x27;</span>, <span class="string">&#x27;^&#x27;</span>, <span class="string">&#x27;&quot;&#x27;</span>, <span class="string">&#x27;~&#x27;</span>, <span class="string">&#x27;*&#x27;</span>, <span class="string">&#x27;?&#x27;</span>, <span class="string">&#x27;:&#x27;</span>, <span class="string">&#x27;\\&#x27;</span>), <span class="string">&#x27;&#x27;</span>, <span class="variable">$filterKeywords</span>);</span><br></pre></td></tr></table></figure><p>修改为：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 修改后的代码</span></span><br><span class="line"><span class="variable">$filterKeywords</span> = <span class="variable language_">$this</span>-&gt;request-&gt;<span class="title function_ invoke__">get</span>(<span class="string">&#x27;keywords&#x27;</span>);</span><br><span class="line"><span class="variable">$filterKeywords</span> = <span class="title function_ invoke__">trim</span>(<span class="variable">$filterKeywords</span>);</span><br><span class="line"><span class="comment">// 注释掉或删除符号过滤代码</span></span><br><span class="line"><span class="comment">// $filterKeywords = str_replace(array(&#x27;+&#x27;, &#x27;-&#x27;, &#x27;&amp;&#x27;, &#x27;|&#x27;, &#x27;!&#x27;, &#x27;(&#x27;, &#x27;)&#x27;, &#x27;&#123;&#x27;, &#x27;&#125;&#x27;, &#x27;[&#x27;, &#x27;]&#x27;, &#x27;^&#x27;, &#x27;&quot;&#x27;, &#x27;~&#x27;, &#x27;*&#x27;, &#x27;?&#x27;, &#x27;:&#x27;, &#x27;\\&#x27;), &#x27;&#x27;, $filterKeywords);</span></span><br></pre></td></tr></table></figure><h3 id="第二处：SQL查询构建"><a href="#第二处：SQL查询构建" class="headerlink" title="第二处：SQL查询构建"></a>第二处：SQL查询构建</h3><p>找到构建SQL查询的部分：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 原始代码</span></span><br><span class="line"><span class="keyword">if</span> (!<span class="keyword">empty</span>(<span class="variable">$filterKeywords</span>)) &#123;</span><br><span class="line">    <span class="variable">$filterKeywords</span> = <span class="string">&#x27;%&#x27;</span> . <span class="variable">$filterKeywords</span> . <span class="string">&#x27;%&#x27;</span>;</span><br><span class="line">    <span class="variable language_">$this</span>-&gt;db-&gt;<span class="title function_ invoke__">where</span>(<span class="string">&#x27;table.contents.title LIKE ? OR table.contents.text LIKE ?&#x27;</span>, <span class="variable">$filterKeywords</span>, <span class="variable">$filterKeywords</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>修改为：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 修改后的代码</span></span><br><span class="line"><span class="keyword">if</span> (!<span class="keyword">empty</span>(<span class="variable">$filterKeywords</span>)) &#123;</span><br><span class="line">    <span class="comment">// 支持特殊符号的搜索</span></span><br><span class="line">    <span class="variable">$filterKeywords</span> = <span class="string">&#x27;%&#x27;</span> . <span class="title function_ invoke__">addslashes</span>(<span class="variable">$filterKeywords</span>) . <span class="string">&#x27;%&#x27;</span>;</span><br><span class="line">    <span class="variable language_">$this</span>-&gt;db-&gt;<span class="title function_ invoke__">where</span>(<span class="string">&#x27;table.contents.title LIKE ? OR table.contents.text LIKE ?&#x27;</span>, <span class="variable">$filterKeywords</span>, <span class="variable">$filterKeywords</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="完整修改示例"><a href="#完整修改示例" class="headerlink" title="完整修改示例"></a>完整修改示例</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">// var/Widget/Archive.php 修改示例</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Widget_Archive</span> <span class="keyword">extends</span> <span class="title">Widget_Abstract_Contents</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="comment">// ... 其他代码 ...</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 执行搜索</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">search</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;db-&gt;<span class="title function_ invoke__">select</span>(<span class="string">&#x27;table.contents.cid&#x27;</span>, <span class="string">&#x27;table.contents.title&#x27;</span>, <span class="string">&#x27;table.contents.slug&#x27;</span>, <span class="string">&#x27;table.contents.created&#x27;</span>, <span class="string">&#x27;table.contents.authorId&#x27;</span>, <span class="string">&#x27;table.contents.modified&#x27;</span>, <span class="string">&#x27;table.contents.type&#x27;</span>, <span class="string">&#x27;table.contents.status&#x27;</span>, <span class="string">&#x27;table.contents.password&#x27;</span>, <span class="string">&#x27;table.contents.commentsNum&#x27;</span>, <span class="string">&#x27;table.contents.order&#x27;</span>, <span class="string">&#x27;table.contents.template&#x27;</span>, <span class="string">&#x27;table.contents.allowComment&#x27;</span>, <span class="string">&#x27;table.contents.allowPing&#x27;</span>, <span class="string">&#x27;table.contents.allowFeed&#x27;</span>);</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;db-&gt;<span class="keyword">from</span>(<span class="string">&#x27;table.contents&#x27;</span>);</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 获取搜索关键词</span></span><br><span class="line">        <span class="variable">$filterKeywords</span> = <span class="variable language_">$this</span>-&gt;request-&gt;<span class="title function_ invoke__">get</span>(<span class="string">&#x27;keywords&#x27;</span>);</span><br><span class="line">        <span class="variable">$filterKeywords</span> = <span class="title function_ invoke__">trim</span>(<span class="variable">$filterKeywords</span>);</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 注释掉符号过滤，支持符号搜索</span></span><br><span class="line">        <span class="comment">// $filterKeywords = str_replace(array(&#x27;+&#x27;, &#x27;-&#x27;, &#x27;&amp;&#x27;, &#x27;|&#x27;, &#x27;!&#x27;, &#x27;(&#x27;, &#x27;)&#x27;, &#x27;&#123;&#x27;, &#x27;&#125;&#x27;, &#x27;[&#x27;, &#x27;]&#x27;, &#x27;^&#x27;, &#x27;&quot;&#x27;, &#x27;~&#x27;, &#x27;*&#x27;, &#x27;?&#x27;, &#x27;:&#x27;, &#x27;\\&#x27;), &#x27;&#x27;, $filterKeywords);</span></span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> (!<span class="keyword">empty</span>(<span class="variable">$filterKeywords</span>)) &#123;</span><br><span class="line">            <span class="comment">// 使用addslashes防止SQL注入，同时支持符号搜索</span></span><br><span class="line">            <span class="variable">$filterKeywords</span> = <span class="string">&#x27;%&#x27;</span> . <span class="title function_ invoke__">addslashes</span>(<span class="variable">$filterKeywords</span>) . <span class="string">&#x27;%&#x27;</span>;</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;db-&gt;<span class="title function_ invoke__">where</span>(<span class="string">&#x27;table.contents.title LIKE ? OR table.contents.text LIKE ?&#x27;</span>, <span class="variable">$filterKeywords</span>, <span class="variable">$filterKeywords</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// ... 其他搜索逻辑 ...</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="安全注意事项"><a href="#安全注意事项" class="headerlink" title="安全注意事项"></a>安全注意事项</h2><h3 id="1-SQL注入防护"><a href="#1-SQL注入防护" class="headerlink" title="1. SQL注入防护"></a>1. SQL注入防护</h3><p>虽然我们允许符号搜索，但必须确保SQL安全：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 使用addslashes或更好的方法处理输入</span></span><br><span class="line"><span class="variable">$filterKeywords</span> = <span class="title function_ invoke__">addslashes</span>(<span class="variable">$filterKeywords</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 或者使用预处理语句</span></span><br><span class="line"><span class="variable">$stmt</span> = <span class="variable language_">$this</span>-&gt;db-&gt;<span class="title function_ invoke__">prepare</span>(<span class="string">&#x27;SELECT * FROM table.contents WHERE title LIKE ? OR text LIKE ?&#x27;</span>);</span><br><span class="line"><span class="variable">$stmt</span>-&gt;<span class="title function_ invoke__">execute</span>(<span class="keyword">array</span>(<span class="variable">$filterKeywords</span>, <span class="variable">$filterKeywords</span>));</span><br></pre></td></tr></table></figure><h3 id="2-输入验证"><a href="#2-输入验证" class="headerlink" title="2. 输入验证"></a>2. 输入验证</h3><p>添加输入长度和内容验证：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 验证搜索关键词长度</span></span><br><span class="line"><span class="keyword">if</span> (<span class="title function_ invoke__">strlen</span>(<span class="variable">$filterKeywords</span>) &gt; <span class="number">100</span>) &#123;</span><br><span class="line">    <span class="variable">$filterKeywords</span> = <span class="title function_ invoke__">substr</span>(<span class="variable">$filterKeywords</span>, <span class="number">0</span>, <span class="number">100</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 验证是否包含恶意内容</span></span><br><span class="line"><span class="keyword">if</span> (<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/&lt;script|javascript|vbscript|onload|onerror/i&#x27;</span>, <span class="variable">$filterKeywords</span>)) &#123;</span><br><span class="line">    <span class="variable">$filterKeywords</span> = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="测试验证"><a href="#测试验证" class="headerlink" title="测试验证"></a>测试验证</h2><h3 id="1-基本符号测试"><a href="#1-基本符号测试" class="headerlink" title="1. 基本符号测试"></a>1. 基本符号测试</h3><p>测试以下符号是否能正常搜索：</p><ul><li><code>+</code> 加号</li><li><code>-</code> 减号</li><li><code>&amp;</code> 与号</li><li><code>|</code> 或号</li><li><code>!</code> 感叹号</li><li><code>()</code> 括号</li><li><code>[]</code> 方括号</li><li><code>&#123;&#125;</code> 花括号</li></ul><h3 id="2-复杂搜索测试"><a href="#2-复杂搜索测试" class="headerlink" title="2. 复杂搜索测试"></a>2. 复杂搜索测试</h3><p>测试复杂搜索表达式：</p><ul><li><code>PHP + MySQL</code></li><li><code>(前端|后端)开发</code></li><li><code>ongwu &amp; 插件</code></li><li><code>[重要] 更新</code></li></ul><h2 id="性能优化建议"><a href="#性能优化建议" class="headerlink" title="性能优化建议"></a>性能优化建议</h2><h3 id="1-索引优化"><a href="#1-索引优化" class="headerlink" title="1. 索引优化"></a>1. 索引优化</h3><p>为搜索字段添加数据库索引：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 为标题和内容字段添加全文索引</span></span><br><span class="line"><span class="keyword">ALTER TABLE</span> ongwu_contents <span class="keyword">ADD</span> FULLTEXT(title, text);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 或者添加普通索引</span></span><br><span class="line"><span class="keyword">CREATE</span> INDEX idx_contents_title <span class="keyword">ON</span> ongwu_contents(title);</span><br><span class="line"><span class="keyword">CREATE</span> INDEX idx_contents_text <span class="keyword">ON</span> ongwu_contents(text);</span><br></pre></td></tr></table></figure><h3 id="2-搜索结果缓存"><a href="#2-搜索结果缓存" class="headerlink" title="2. 搜索结果缓存"></a>2. 搜索结果缓存</h3><p>实现搜索结果缓存机制：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 缓存搜索结果</span></span><br><span class="line"><span class="variable">$cacheKey</span> = <span class="string">&#x27;search_&#x27;</span> . <span class="title function_ invoke__">md5</span>(<span class="variable">$filterKeywords</span>);</span><br><span class="line"><span class="variable">$cachedResult</span> = <span class="variable language_">$this</span>-&gt;cache-&gt;<span class="title function_ invoke__">get</span>(<span class="variable">$cacheKey</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="variable">$cachedResult</span> !== <span class="literal">false</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="variable">$cachedResult</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 执行搜索</span></span><br><span class="line"><span class="variable">$result</span> = <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">performSearch</span>(<span class="variable">$filterKeywords</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 缓存结果</span></span><br><span class="line"><span class="variable language_">$this</span>-&gt;cache-&gt;<span class="title function_ invoke__">set</span>(<span class="variable">$cacheKey</span>, <span class="variable">$result</span>, <span class="number">3600</span>); <span class="comment">// 缓存1小时</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="variable">$result</span>;</span><br></pre></td></tr></table></figure><h2 id="兼容性考虑"><a href="#兼容性考虑" class="headerlink" title="兼容性考虑"></a>兼容性考虑</h2><h3 id="1-版本兼容"><a href="#1-版本兼容" class="headerlink" title="1. 版本兼容"></a>1. 版本兼容</h3><p>确保修改后的代码与ongwu版本兼容：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 检查ongwu版本</span></span><br><span class="line"><span class="keyword">if</span> (<span class="title function_ invoke__">version_compare</span>(ongwu_<span class="title class_">Common</span>::<span class="variable constant_">VERSION</span>, <span class="string">&#x27;1.2.0&#x27;</span>, <span class="string">&#x27;&gt;=&#x27;</span>)) &#123;</span><br><span class="line">    <span class="comment">// 新版本代码</span></span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="comment">// 旧版本兼容代码</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2-插件兼容"><a href="#2-插件兼容" class="headerlink" title="2. 插件兼容"></a>2. 插件兼容</h3><p>如果使用了其他搜索相关插件，需要确保兼容性：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 检查是否有其他搜索插件</span></span><br><span class="line"><span class="keyword">if</span> (<span class="title function_ invoke__">class_exists</span>(<span class="string">&#x27;Widget_Archive_Search&#x27;</span>)) &#123;</span><br><span class="line">    <span class="comment">// 使用插件提供的搜索功能</span></span><br><span class="line">    <span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">pluginSearch</span>(<span class="variable">$filterKeywords</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>通过修改ongwu源码，我们可以实现符号搜索功能，但需要注意：</p><ol><li><strong>安全性</strong>：使用<code>addslashes</code>或预处理语句防止SQL注入</li><li><strong>性能</strong>：添加适当的数据库索引和缓存机制</li><li><strong>兼容性</strong>：确保与ongwu版本和其他插件的兼容性</li><li><strong>维护性</strong>：记录修改内容，便于后续升级</li></ol><p>这样修改后，ongwu就能支持包含符号的搜索了，满足更复杂的搜索需求。</p><hr><p><em>注意：修改源码后，在ongwu升级时需要重新应用这些修改。建议将修改内容记录在文档中，或者创建补丁文件。</em></p>]]></content>
      
      
      <categories>
          
          <category> tutorial </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ongwu </tag>
            
            <tag> 搜索功能 </tag>
            
            <tag> 源码修改 </tag>
            
            <tag> 符号搜索 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>让ongwu支持搜索符号</title>
      <link href="/2025/01/09/7%20-%20%E5%89%AF%E6%9C%AC%20(6)%20-%20%E5%89%AF%E6%9C%AC/"/>
      <url>/2025/01/09/7%20-%20%E5%89%AF%E6%9C%AC%20(6)%20-%20%E5%89%AF%E6%9C%AC/</url>
      
        <content type="html"><![CDATA[<h1 id="让ongwu支持搜索符号"><a href="#让ongwu支持搜索符号" class="headerlink" title="让ongwu支持搜索符号"></a>让ongwu支持搜索符号</h1><h2 id="问题背景"><a href="#问题背景" class="headerlink" title="问题背景"></a>问题背景</h2><p>用过ongwu的应该都清楚它本身搜索是不支持符号的，一般都会过滤掉，只会保留文字字母数字进行搜索。这种过滤应该是出于安全考虑的，但如果你的需求需要搜索符号之类的东西，则可以通过修改源码的方式实现。</p><h2 id="修改原理"><a href="#修改原理" class="headerlink" title="修改原理"></a>修改原理</h2><p>ongwu的搜索功能是在<code>var/Widget/Archive.php</code>中实现的，所以需要修改两处代码：</p><h3 id="第一处：关键词过滤逻辑"><a href="#第一处：关键词过滤逻辑" class="headerlink" title="第一处：关键词过滤逻辑"></a>第一处：关键词过滤逻辑</h3><p>在<code>var/Widget/Archive.php</code>文件中找到以下代码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 原始代码</span></span><br><span class="line"><span class="variable">$filterKeywords</span> = <span class="variable language_">$this</span>-&gt;request-&gt;<span class="title function_ invoke__">get</span>(<span class="string">&#x27;keywords&#x27;</span>);</span><br><span class="line"><span class="variable">$filterKeywords</span> = <span class="title function_ invoke__">trim</span>(<span class="variable">$filterKeywords</span>);</span><br><span class="line"><span class="variable">$filterKeywords</span> = <span class="title function_ invoke__">str_replace</span>(<span class="keyword">array</span>(<span class="string">&#x27;+&#x27;</span>, <span class="string">&#x27;-&#x27;</span>, <span class="string">&#x27;&amp;&#x27;</span>, <span class="string">&#x27;|&#x27;</span>, <span class="string">&#x27;!&#x27;</span>, <span class="string">&#x27;(&#x27;</span>, <span class="string">&#x27;)&#x27;</span>, <span class="string">&#x27;&#123;&#x27;</span>, <span class="string">&#x27;&#125;&#x27;</span>, <span class="string">&#x27;[&#x27;</span>, <span class="string">&#x27;]&#x27;</span>, <span class="string">&#x27;^&#x27;</span>, <span class="string">&#x27;&quot;&#x27;</span>, <span class="string">&#x27;~&#x27;</span>, <span class="string">&#x27;*&#x27;</span>, <span class="string">&#x27;?&#x27;</span>, <span class="string">&#x27;:&#x27;</span>, <span class="string">&#x27;\\&#x27;</span>), <span class="string">&#x27;&#x27;</span>, <span class="variable">$filterKeywords</span>);</span><br></pre></td></tr></table></figure><p>修改为：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 修改后的代码</span></span><br><span class="line"><span class="variable">$filterKeywords</span> = <span class="variable language_">$this</span>-&gt;request-&gt;<span class="title function_ invoke__">get</span>(<span class="string">&#x27;keywords&#x27;</span>);</span><br><span class="line"><span class="variable">$filterKeywords</span> = <span class="title function_ invoke__">trim</span>(<span class="variable">$filterKeywords</span>);</span><br><span class="line"><span class="comment">// 注释掉或删除符号过滤代码</span></span><br><span class="line"><span class="comment">// $filterKeywords = str_replace(array(&#x27;+&#x27;, &#x27;-&#x27;, &#x27;&amp;&#x27;, &#x27;|&#x27;, &#x27;!&#x27;, &#x27;(&#x27;, &#x27;)&#x27;, &#x27;&#123;&#x27;, &#x27;&#125;&#x27;, &#x27;[&#x27;, &#x27;]&#x27;, &#x27;^&#x27;, &#x27;&quot;&#x27;, &#x27;~&#x27;, &#x27;*&#x27;, &#x27;?&#x27;, &#x27;:&#x27;, &#x27;\\&#x27;), &#x27;&#x27;, $filterKeywords);</span></span><br></pre></td></tr></table></figure><h3 id="第二处：SQL查询构建"><a href="#第二处：SQL查询构建" class="headerlink" title="第二处：SQL查询构建"></a>第二处：SQL查询构建</h3><p>找到构建SQL查询的部分：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 原始代码</span></span><br><span class="line"><span class="keyword">if</span> (!<span class="keyword">empty</span>(<span class="variable">$filterKeywords</span>)) &#123;</span><br><span class="line">    <span class="variable">$filterKeywords</span> = <span class="string">&#x27;%&#x27;</span> . <span class="variable">$filterKeywords</span> . <span class="string">&#x27;%&#x27;</span>;</span><br><span class="line">    <span class="variable language_">$this</span>-&gt;db-&gt;<span class="title function_ invoke__">where</span>(<span class="string">&#x27;table.contents.title LIKE ? OR table.contents.text LIKE ?&#x27;</span>, <span class="variable">$filterKeywords</span>, <span class="variable">$filterKeywords</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>修改为：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 修改后的代码</span></span><br><span class="line"><span class="keyword">if</span> (!<span class="keyword">empty</span>(<span class="variable">$filterKeywords</span>)) &#123;</span><br><span class="line">    <span class="comment">// 支持特殊符号的搜索</span></span><br><span class="line">    <span class="variable">$filterKeywords</span> = <span class="string">&#x27;%&#x27;</span> . <span class="title function_ invoke__">addslashes</span>(<span class="variable">$filterKeywords</span>) . <span class="string">&#x27;%&#x27;</span>;</span><br><span class="line">    <span class="variable language_">$this</span>-&gt;db-&gt;<span class="title function_ invoke__">where</span>(<span class="string">&#x27;table.contents.title LIKE ? OR table.contents.text LIKE ?&#x27;</span>, <span class="variable">$filterKeywords</span>, <span class="variable">$filterKeywords</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="完整修改示例"><a href="#完整修改示例" class="headerlink" title="完整修改示例"></a>完整修改示例</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">// var/Widget/Archive.php 修改示例</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Widget_Archive</span> <span class="keyword">extends</span> <span class="title">Widget_Abstract_Contents</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="comment">// ... 其他代码 ...</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 执行搜索</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">search</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;db-&gt;<span class="title function_ invoke__">select</span>(<span class="string">&#x27;table.contents.cid&#x27;</span>, <span class="string">&#x27;table.contents.title&#x27;</span>, <span class="string">&#x27;table.contents.slug&#x27;</span>, <span class="string">&#x27;table.contents.created&#x27;</span>, <span class="string">&#x27;table.contents.authorId&#x27;</span>, <span class="string">&#x27;table.contents.modified&#x27;</span>, <span class="string">&#x27;table.contents.type&#x27;</span>, <span class="string">&#x27;table.contents.status&#x27;</span>, <span class="string">&#x27;table.contents.password&#x27;</span>, <span class="string">&#x27;table.contents.commentsNum&#x27;</span>, <span class="string">&#x27;table.contents.order&#x27;</span>, <span class="string">&#x27;table.contents.template&#x27;</span>, <span class="string">&#x27;table.contents.allowComment&#x27;</span>, <span class="string">&#x27;table.contents.allowPing&#x27;</span>, <span class="string">&#x27;table.contents.allowFeed&#x27;</span>);</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;db-&gt;<span class="keyword">from</span>(<span class="string">&#x27;table.contents&#x27;</span>);</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 获取搜索关键词</span></span><br><span class="line">        <span class="variable">$filterKeywords</span> = <span class="variable language_">$this</span>-&gt;request-&gt;<span class="title function_ invoke__">get</span>(<span class="string">&#x27;keywords&#x27;</span>);</span><br><span class="line">        <span class="variable">$filterKeywords</span> = <span class="title function_ invoke__">trim</span>(<span class="variable">$filterKeywords</span>);</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 注释掉符号过滤，支持符号搜索</span></span><br><span class="line">        <span class="comment">// $filterKeywords = str_replace(array(&#x27;+&#x27;, &#x27;-&#x27;, &#x27;&amp;&#x27;, &#x27;|&#x27;, &#x27;!&#x27;, &#x27;(&#x27;, &#x27;)&#x27;, &#x27;&#123;&#x27;, &#x27;&#125;&#x27;, &#x27;[&#x27;, &#x27;]&#x27;, &#x27;^&#x27;, &#x27;&quot;&#x27;, &#x27;~&#x27;, &#x27;*&#x27;, &#x27;?&#x27;, &#x27;:&#x27;, &#x27;\\&#x27;), &#x27;&#x27;, $filterKeywords);</span></span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> (!<span class="keyword">empty</span>(<span class="variable">$filterKeywords</span>)) &#123;</span><br><span class="line">            <span class="comment">// 使用addslashes防止SQL注入，同时支持符号搜索</span></span><br><span class="line">            <span class="variable">$filterKeywords</span> = <span class="string">&#x27;%&#x27;</span> . <span class="title function_ invoke__">addslashes</span>(<span class="variable">$filterKeywords</span>) . <span class="string">&#x27;%&#x27;</span>;</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;db-&gt;<span class="title function_ invoke__">where</span>(<span class="string">&#x27;table.contents.title LIKE ? OR table.contents.text LIKE ?&#x27;</span>, <span class="variable">$filterKeywords</span>, <span class="variable">$filterKeywords</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// ... 其他搜索逻辑 ...</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="安全注意事项"><a href="#安全注意事项" class="headerlink" title="安全注意事项"></a>安全注意事项</h2><h3 id="1-SQL注入防护"><a href="#1-SQL注入防护" class="headerlink" title="1. SQL注入防护"></a>1. SQL注入防护</h3><p>虽然我们允许符号搜索，但必须确保SQL安全：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 使用addslashes或更好的方法处理输入</span></span><br><span class="line"><span class="variable">$filterKeywords</span> = <span class="title function_ invoke__">addslashes</span>(<span class="variable">$filterKeywords</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 或者使用预处理语句</span></span><br><span class="line"><span class="variable">$stmt</span> = <span class="variable language_">$this</span>-&gt;db-&gt;<span class="title function_ invoke__">prepare</span>(<span class="string">&#x27;SELECT * FROM table.contents WHERE title LIKE ? OR text LIKE ?&#x27;</span>);</span><br><span class="line"><span class="variable">$stmt</span>-&gt;<span class="title function_ invoke__">execute</span>(<span class="keyword">array</span>(<span class="variable">$filterKeywords</span>, <span class="variable">$filterKeywords</span>));</span><br></pre></td></tr></table></figure><h3 id="2-输入验证"><a href="#2-输入验证" class="headerlink" title="2. 输入验证"></a>2. 输入验证</h3><p>添加输入长度和内容验证：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 验证搜索关键词长度</span></span><br><span class="line"><span class="keyword">if</span> (<span class="title function_ invoke__">strlen</span>(<span class="variable">$filterKeywords</span>) &gt; <span class="number">100</span>) &#123;</span><br><span class="line">    <span class="variable">$filterKeywords</span> = <span class="title function_ invoke__">substr</span>(<span class="variable">$filterKeywords</span>, <span class="number">0</span>, <span class="number">100</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 验证是否包含恶意内容</span></span><br><span class="line"><span class="keyword">if</span> (<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/&lt;script|javascript|vbscript|onload|onerror/i&#x27;</span>, <span class="variable">$filterKeywords</span>)) &#123;</span><br><span class="line">    <span class="variable">$filterKeywords</span> = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="测试验证"><a href="#测试验证" class="headerlink" title="测试验证"></a>测试验证</h2><h3 id="1-基本符号测试"><a href="#1-基本符号测试" class="headerlink" title="1. 基本符号测试"></a>1. 基本符号测试</h3><p>测试以下符号是否能正常搜索：</p><ul><li><code>+</code> 加号</li><li><code>-</code> 减号</li><li><code>&amp;</code> 与号</li><li><code>|</code> 或号</li><li><code>!</code> 感叹号</li><li><code>()</code> 括号</li><li><code>[]</code> 方括号</li><li><code>&#123;&#125;</code> 花括号</li></ul><h3 id="2-复杂搜索测试"><a href="#2-复杂搜索测试" class="headerlink" title="2. 复杂搜索测试"></a>2. 复杂搜索测试</h3><p>测试复杂搜索表达式：</p><ul><li><code>PHP + MySQL</code></li><li><code>(前端|后端)开发</code></li><li><code>ongwu &amp; 插件</code></li><li><code>[重要] 更新</code></li></ul><h2 id="性能优化建议"><a href="#性能优化建议" class="headerlink" title="性能优化建议"></a>性能优化建议</h2><h3 id="1-索引优化"><a href="#1-索引优化" class="headerlink" title="1. 索引优化"></a>1. 索引优化</h3><p>为搜索字段添加数据库索引：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 为标题和内容字段添加全文索引</span></span><br><span class="line"><span class="keyword">ALTER TABLE</span> ongwu_contents <span class="keyword">ADD</span> FULLTEXT(title, text);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 或者添加普通索引</span></span><br><span class="line"><span class="keyword">CREATE</span> INDEX idx_contents_title <span class="keyword">ON</span> ongwu_contents(title);</span><br><span class="line"><span class="keyword">CREATE</span> INDEX idx_contents_text <span class="keyword">ON</span> ongwu_contents(text);</span><br></pre></td></tr></table></figure><h3 id="2-搜索结果缓存"><a href="#2-搜索结果缓存" class="headerlink" title="2. 搜索结果缓存"></a>2. 搜索结果缓存</h3><p>实现搜索结果缓存机制：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 缓存搜索结果</span></span><br><span class="line"><span class="variable">$cacheKey</span> = <span class="string">&#x27;search_&#x27;</span> . <span class="title function_ invoke__">md5</span>(<span class="variable">$filterKeywords</span>);</span><br><span class="line"><span class="variable">$cachedResult</span> = <span class="variable language_">$this</span>-&gt;cache-&gt;<span class="title function_ invoke__">get</span>(<span class="variable">$cacheKey</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="variable">$cachedResult</span> !== <span class="literal">false</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="variable">$cachedResult</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 执行搜索</span></span><br><span class="line"><span class="variable">$result</span> = <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">performSearch</span>(<span class="variable">$filterKeywords</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 缓存结果</span></span><br><span class="line"><span class="variable language_">$this</span>-&gt;cache-&gt;<span class="title function_ invoke__">set</span>(<span class="variable">$cacheKey</span>, <span class="variable">$result</span>, <span class="number">3600</span>); <span class="comment">// 缓存1小时</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="variable">$result</span>;</span><br></pre></td></tr></table></figure><h2 id="兼容性考虑"><a href="#兼容性考虑" class="headerlink" title="兼容性考虑"></a>兼容性考虑</h2><h3 id="1-版本兼容"><a href="#1-版本兼容" class="headerlink" title="1. 版本兼容"></a>1. 版本兼容</h3><p>确保修改后的代码与ongwu版本兼容：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 检查ongwu版本</span></span><br><span class="line"><span class="keyword">if</span> (<span class="title function_ invoke__">version_compare</span>(ongwu_<span class="title class_">Common</span>::<span class="variable constant_">VERSION</span>, <span class="string">&#x27;1.2.0&#x27;</span>, <span class="string">&#x27;&gt;=&#x27;</span>)) &#123;</span><br><span class="line">    <span class="comment">// 新版本代码</span></span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="comment">// 旧版本兼容代码</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2-插件兼容"><a href="#2-插件兼容" class="headerlink" title="2. 插件兼容"></a>2. 插件兼容</h3><p>如果使用了其他搜索相关插件，需要确保兼容性：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 检查是否有其他搜索插件</span></span><br><span class="line"><span class="keyword">if</span> (<span class="title function_ invoke__">class_exists</span>(<span class="string">&#x27;Widget_Archive_Search&#x27;</span>)) &#123;</span><br><span class="line">    <span class="comment">// 使用插件提供的搜索功能</span></span><br><span class="line">    <span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">pluginSearch</span>(<span class="variable">$filterKeywords</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>通过修改ongwu源码，我们可以实现符号搜索功能，但需要注意：</p><ol><li><strong>安全性</strong>：使用<code>addslashes</code>或预处理语句防止SQL注入</li><li><strong>性能</strong>：添加适当的数据库索引和缓存机制</li><li><strong>兼容性</strong>：确保与ongwu版本和其他插件的兼容性</li><li><strong>维护性</strong>：记录修改内容，便于后续升级</li></ol><p>这样修改后，ongwu就能支持包含符号的搜索了，满足更复杂的搜索需求。</p><hr><p><em>注意：修改源码后，在ongwu升级时需要重新应用这些修改。建议将修改内容记录在文档中，或者创建补丁文件。</em></p>]]></content>
      
      
      <categories>
          
          <category> tutorial </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ongwu </tag>
            
            <tag> 搜索功能 </tag>
            
            <tag> 源码修改 </tag>
            
            <tag> 符号搜索 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>让ongwu支持搜索符号</title>
      <link href="/2025/01/09/7%20-%20%E5%89%AF%E6%9C%AC%20(6)/"/>
      <url>/2025/01/09/7%20-%20%E5%89%AF%E6%9C%AC%20(6)/</url>
      
        <content type="html"><![CDATA[<h1 id="让ongwu支持搜索符号"><a href="#让ongwu支持搜索符号" class="headerlink" title="让ongwu支持搜索符号"></a>让ongwu支持搜索符号</h1><h2 id="问题背景"><a href="#问题背景" class="headerlink" title="问题背景"></a>问题背景</h2><p>用过ongwu的应该都清楚它本身搜索是不支持符号的，一般都会过滤掉，只会保留文字字母数字进行搜索。这种过滤应该是出于安全考虑的，但如果你的需求需要搜索符号之类的东西，则可以通过修改源码的方式实现。</p><h2 id="修改原理"><a href="#修改原理" class="headerlink" title="修改原理"></a>修改原理</h2><p>ongwu的搜索功能是在<code>var/Widget/Archive.php</code>中实现的，所以需要修改两处代码：</p><h3 id="第一处：关键词过滤逻辑"><a href="#第一处：关键词过滤逻辑" class="headerlink" title="第一处：关键词过滤逻辑"></a>第一处：关键词过滤逻辑</h3><p>在<code>var/Widget/Archive.php</code>文件中找到以下代码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 原始代码</span></span><br><span class="line"><span class="variable">$filterKeywords</span> = <span class="variable language_">$this</span>-&gt;request-&gt;<span class="title function_ invoke__">get</span>(<span class="string">&#x27;keywords&#x27;</span>);</span><br><span class="line"><span class="variable">$filterKeywords</span> = <span class="title function_ invoke__">trim</span>(<span class="variable">$filterKeywords</span>);</span><br><span class="line"><span class="variable">$filterKeywords</span> = <span class="title function_ invoke__">str_replace</span>(<span class="keyword">array</span>(<span class="string">&#x27;+&#x27;</span>, <span class="string">&#x27;-&#x27;</span>, <span class="string">&#x27;&amp;&#x27;</span>, <span class="string">&#x27;|&#x27;</span>, <span class="string">&#x27;!&#x27;</span>, <span class="string">&#x27;(&#x27;</span>, <span class="string">&#x27;)&#x27;</span>, <span class="string">&#x27;&#123;&#x27;</span>, <span class="string">&#x27;&#125;&#x27;</span>, <span class="string">&#x27;[&#x27;</span>, <span class="string">&#x27;]&#x27;</span>, <span class="string">&#x27;^&#x27;</span>, <span class="string">&#x27;&quot;&#x27;</span>, <span class="string">&#x27;~&#x27;</span>, <span class="string">&#x27;*&#x27;</span>, <span class="string">&#x27;?&#x27;</span>, <span class="string">&#x27;:&#x27;</span>, <span class="string">&#x27;\\&#x27;</span>), <span class="string">&#x27;&#x27;</span>, <span class="variable">$filterKeywords</span>);</span><br></pre></td></tr></table></figure><p>修改为：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 修改后的代码</span></span><br><span class="line"><span class="variable">$filterKeywords</span> = <span class="variable language_">$this</span>-&gt;request-&gt;<span class="title function_ invoke__">get</span>(<span class="string">&#x27;keywords&#x27;</span>);</span><br><span class="line"><span class="variable">$filterKeywords</span> = <span class="title function_ invoke__">trim</span>(<span class="variable">$filterKeywords</span>);</span><br><span class="line"><span class="comment">// 注释掉或删除符号过滤代码</span></span><br><span class="line"><span class="comment">// $filterKeywords = str_replace(array(&#x27;+&#x27;, &#x27;-&#x27;, &#x27;&amp;&#x27;, &#x27;|&#x27;, &#x27;!&#x27;, &#x27;(&#x27;, &#x27;)&#x27;, &#x27;&#123;&#x27;, &#x27;&#125;&#x27;, &#x27;[&#x27;, &#x27;]&#x27;, &#x27;^&#x27;, &#x27;&quot;&#x27;, &#x27;~&#x27;, &#x27;*&#x27;, &#x27;?&#x27;, &#x27;:&#x27;, &#x27;\\&#x27;), &#x27;&#x27;, $filterKeywords);</span></span><br></pre></td></tr></table></figure><h3 id="第二处：SQL查询构建"><a href="#第二处：SQL查询构建" class="headerlink" title="第二处：SQL查询构建"></a>第二处：SQL查询构建</h3><p>找到构建SQL查询的部分：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 原始代码</span></span><br><span class="line"><span class="keyword">if</span> (!<span class="keyword">empty</span>(<span class="variable">$filterKeywords</span>)) &#123;</span><br><span class="line">    <span class="variable">$filterKeywords</span> = <span class="string">&#x27;%&#x27;</span> . <span class="variable">$filterKeywords</span> . <span class="string">&#x27;%&#x27;</span>;</span><br><span class="line">    <span class="variable language_">$this</span>-&gt;db-&gt;<span class="title function_ invoke__">where</span>(<span class="string">&#x27;table.contents.title LIKE ? OR table.contents.text LIKE ?&#x27;</span>, <span class="variable">$filterKeywords</span>, <span class="variable">$filterKeywords</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>修改为：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 修改后的代码</span></span><br><span class="line"><span class="keyword">if</span> (!<span class="keyword">empty</span>(<span class="variable">$filterKeywords</span>)) &#123;</span><br><span class="line">    <span class="comment">// 支持特殊符号的搜索</span></span><br><span class="line">    <span class="variable">$filterKeywords</span> = <span class="string">&#x27;%&#x27;</span> . <span class="title function_ invoke__">addslashes</span>(<span class="variable">$filterKeywords</span>) . <span class="string">&#x27;%&#x27;</span>;</span><br><span class="line">    <span class="variable language_">$this</span>-&gt;db-&gt;<span class="title function_ invoke__">where</span>(<span class="string">&#x27;table.contents.title LIKE ? OR table.contents.text LIKE ?&#x27;</span>, <span class="variable">$filterKeywords</span>, <span class="variable">$filterKeywords</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="完整修改示例"><a href="#完整修改示例" class="headerlink" title="完整修改示例"></a>完整修改示例</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">// var/Widget/Archive.php 修改示例</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Widget_Archive</span> <span class="keyword">extends</span> <span class="title">Widget_Abstract_Contents</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="comment">// ... 其他代码 ...</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 执行搜索</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">search</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;db-&gt;<span class="title function_ invoke__">select</span>(<span class="string">&#x27;table.contents.cid&#x27;</span>, <span class="string">&#x27;table.contents.title&#x27;</span>, <span class="string">&#x27;table.contents.slug&#x27;</span>, <span class="string">&#x27;table.contents.created&#x27;</span>, <span class="string">&#x27;table.contents.authorId&#x27;</span>, <span class="string">&#x27;table.contents.modified&#x27;</span>, <span class="string">&#x27;table.contents.type&#x27;</span>, <span class="string">&#x27;table.contents.status&#x27;</span>, <span class="string">&#x27;table.contents.password&#x27;</span>, <span class="string">&#x27;table.contents.commentsNum&#x27;</span>, <span class="string">&#x27;table.contents.order&#x27;</span>, <span class="string">&#x27;table.contents.template&#x27;</span>, <span class="string">&#x27;table.contents.allowComment&#x27;</span>, <span class="string">&#x27;table.contents.allowPing&#x27;</span>, <span class="string">&#x27;table.contents.allowFeed&#x27;</span>);</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;db-&gt;<span class="keyword">from</span>(<span class="string">&#x27;table.contents&#x27;</span>);</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 获取搜索关键词</span></span><br><span class="line">        <span class="variable">$filterKeywords</span> = <span class="variable language_">$this</span>-&gt;request-&gt;<span class="title function_ invoke__">get</span>(<span class="string">&#x27;keywords&#x27;</span>);</span><br><span class="line">        <span class="variable">$filterKeywords</span> = <span class="title function_ invoke__">trim</span>(<span class="variable">$filterKeywords</span>);</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 注释掉符号过滤，支持符号搜索</span></span><br><span class="line">        <span class="comment">// $filterKeywords = str_replace(array(&#x27;+&#x27;, &#x27;-&#x27;, &#x27;&amp;&#x27;, &#x27;|&#x27;, &#x27;!&#x27;, &#x27;(&#x27;, &#x27;)&#x27;, &#x27;&#123;&#x27;, &#x27;&#125;&#x27;, &#x27;[&#x27;, &#x27;]&#x27;, &#x27;^&#x27;, &#x27;&quot;&#x27;, &#x27;~&#x27;, &#x27;*&#x27;, &#x27;?&#x27;, &#x27;:&#x27;, &#x27;\\&#x27;), &#x27;&#x27;, $filterKeywords);</span></span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> (!<span class="keyword">empty</span>(<span class="variable">$filterKeywords</span>)) &#123;</span><br><span class="line">            <span class="comment">// 使用addslashes防止SQL注入，同时支持符号搜索</span></span><br><span class="line">            <span class="variable">$filterKeywords</span> = <span class="string">&#x27;%&#x27;</span> . <span class="title function_ invoke__">addslashes</span>(<span class="variable">$filterKeywords</span>) . <span class="string">&#x27;%&#x27;</span>;</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;db-&gt;<span class="title function_ invoke__">where</span>(<span class="string">&#x27;table.contents.title LIKE ? OR table.contents.text LIKE ?&#x27;</span>, <span class="variable">$filterKeywords</span>, <span class="variable">$filterKeywords</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// ... 其他搜索逻辑 ...</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="安全注意事项"><a href="#安全注意事项" class="headerlink" title="安全注意事项"></a>安全注意事项</h2><h3 id="1-SQL注入防护"><a href="#1-SQL注入防护" class="headerlink" title="1. SQL注入防护"></a>1. SQL注入防护</h3><p>虽然我们允许符号搜索，但必须确保SQL安全：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 使用addslashes或更好的方法处理输入</span></span><br><span class="line"><span class="variable">$filterKeywords</span> = <span class="title function_ invoke__">addslashes</span>(<span class="variable">$filterKeywords</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 或者使用预处理语句</span></span><br><span class="line"><span class="variable">$stmt</span> = <span class="variable language_">$this</span>-&gt;db-&gt;<span class="title function_ invoke__">prepare</span>(<span class="string">&#x27;SELECT * FROM table.contents WHERE title LIKE ? OR text LIKE ?&#x27;</span>);</span><br><span class="line"><span class="variable">$stmt</span>-&gt;<span class="title function_ invoke__">execute</span>(<span class="keyword">array</span>(<span class="variable">$filterKeywords</span>, <span class="variable">$filterKeywords</span>));</span><br></pre></td></tr></table></figure><h3 id="2-输入验证"><a href="#2-输入验证" class="headerlink" title="2. 输入验证"></a>2. 输入验证</h3><p>添加输入长度和内容验证：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 验证搜索关键词长度</span></span><br><span class="line"><span class="keyword">if</span> (<span class="title function_ invoke__">strlen</span>(<span class="variable">$filterKeywords</span>) &gt; <span class="number">100</span>) &#123;</span><br><span class="line">    <span class="variable">$filterKeywords</span> = <span class="title function_ invoke__">substr</span>(<span class="variable">$filterKeywords</span>, <span class="number">0</span>, <span class="number">100</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 验证是否包含恶意内容</span></span><br><span class="line"><span class="keyword">if</span> (<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/&lt;script|javascript|vbscript|onload|onerror/i&#x27;</span>, <span class="variable">$filterKeywords</span>)) &#123;</span><br><span class="line">    <span class="variable">$filterKeywords</span> = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="测试验证"><a href="#测试验证" class="headerlink" title="测试验证"></a>测试验证</h2><h3 id="1-基本符号测试"><a href="#1-基本符号测试" class="headerlink" title="1. 基本符号测试"></a>1. 基本符号测试</h3><p>测试以下符号是否能正常搜索：</p><ul><li><code>+</code> 加号</li><li><code>-</code> 减号</li><li><code>&amp;</code> 与号</li><li><code>|</code> 或号</li><li><code>!</code> 感叹号</li><li><code>()</code> 括号</li><li><code>[]</code> 方括号</li><li><code>&#123;&#125;</code> 花括号</li></ul><h3 id="2-复杂搜索测试"><a href="#2-复杂搜索测试" class="headerlink" title="2. 复杂搜索测试"></a>2. 复杂搜索测试</h3><p>测试复杂搜索表达式：</p><ul><li><code>PHP + MySQL</code></li><li><code>(前端|后端)开发</code></li><li><code>ongwu &amp; 插件</code></li><li><code>[重要] 更新</code></li></ul><h2 id="性能优化建议"><a href="#性能优化建议" class="headerlink" title="性能优化建议"></a>性能优化建议</h2><h3 id="1-索引优化"><a href="#1-索引优化" class="headerlink" title="1. 索引优化"></a>1. 索引优化</h3><p>为搜索字段添加数据库索引：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 为标题和内容字段添加全文索引</span></span><br><span class="line"><span class="keyword">ALTER TABLE</span> ongwu_contents <span class="keyword">ADD</span> FULLTEXT(title, text);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 或者添加普通索引</span></span><br><span class="line"><span class="keyword">CREATE</span> INDEX idx_contents_title <span class="keyword">ON</span> ongwu_contents(title);</span><br><span class="line"><span class="keyword">CREATE</span> INDEX idx_contents_text <span class="keyword">ON</span> ongwu_contents(text);</span><br></pre></td></tr></table></figure><h3 id="2-搜索结果缓存"><a href="#2-搜索结果缓存" class="headerlink" title="2. 搜索结果缓存"></a>2. 搜索结果缓存</h3><p>实现搜索结果缓存机制：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 缓存搜索结果</span></span><br><span class="line"><span class="variable">$cacheKey</span> = <span class="string">&#x27;search_&#x27;</span> . <span class="title function_ invoke__">md5</span>(<span class="variable">$filterKeywords</span>);</span><br><span class="line"><span class="variable">$cachedResult</span> = <span class="variable language_">$this</span>-&gt;cache-&gt;<span class="title function_ invoke__">get</span>(<span class="variable">$cacheKey</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="variable">$cachedResult</span> !== <span class="literal">false</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="variable">$cachedResult</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 执行搜索</span></span><br><span class="line"><span class="variable">$result</span> = <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">performSearch</span>(<span class="variable">$filterKeywords</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 缓存结果</span></span><br><span class="line"><span class="variable language_">$this</span>-&gt;cache-&gt;<span class="title function_ invoke__">set</span>(<span class="variable">$cacheKey</span>, <span class="variable">$result</span>, <span class="number">3600</span>); <span class="comment">// 缓存1小时</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="variable">$result</span>;</span><br></pre></td></tr></table></figure><h2 id="兼容性考虑"><a href="#兼容性考虑" class="headerlink" title="兼容性考虑"></a>兼容性考虑</h2><h3 id="1-版本兼容"><a href="#1-版本兼容" class="headerlink" title="1. 版本兼容"></a>1. 版本兼容</h3><p>确保修改后的代码与ongwu版本兼容：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 检查ongwu版本</span></span><br><span class="line"><span class="keyword">if</span> (<span class="title function_ invoke__">version_compare</span>(ongwu_<span class="title class_">Common</span>::<span class="variable constant_">VERSION</span>, <span class="string">&#x27;1.2.0&#x27;</span>, <span class="string">&#x27;&gt;=&#x27;</span>)) &#123;</span><br><span class="line">    <span class="comment">// 新版本代码</span></span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="comment">// 旧版本兼容代码</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2-插件兼容"><a href="#2-插件兼容" class="headerlink" title="2. 插件兼容"></a>2. 插件兼容</h3><p>如果使用了其他搜索相关插件，需要确保兼容性：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 检查是否有其他搜索插件</span></span><br><span class="line"><span class="keyword">if</span> (<span class="title function_ invoke__">class_exists</span>(<span class="string">&#x27;Widget_Archive_Search&#x27;</span>)) &#123;</span><br><span class="line">    <span class="comment">// 使用插件提供的搜索功能</span></span><br><span class="line">    <span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">pluginSearch</span>(<span class="variable">$filterKeywords</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>通过修改ongwu源码，我们可以实现符号搜索功能，但需要注意：</p><ol><li><strong>安全性</strong>：使用<code>addslashes</code>或预处理语句防止SQL注入</li><li><strong>性能</strong>：添加适当的数据库索引和缓存机制</li><li><strong>兼容性</strong>：确保与ongwu版本和其他插件的兼容性</li><li><strong>维护性</strong>：记录修改内容，便于后续升级</li></ol><p>这样修改后，ongwu就能支持包含符号的搜索了，满足更复杂的搜索需求。</p><hr><p><em>注意：修改源码后，在ongwu升级时需要重新应用这些修改。建议将修改内容记录在文档中，或者创建补丁文件。</em></p>]]></content>
      
      
      <categories>
          
          <category> tutorial </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ongwu </tag>
            
            <tag> 搜索功能 </tag>
            
            <tag> 源码修改 </tag>
            
            <tag> 符号搜索 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>让ongwu支持搜索符号</title>
      <link href="/2025/01/09/7%20-%20%E5%89%AF%E6%9C%AC%20(7)%20-%20%E5%89%AF%E6%9C%AC/"/>
      <url>/2025/01/09/7%20-%20%E5%89%AF%E6%9C%AC%20(7)%20-%20%E5%89%AF%E6%9C%AC/</url>
      
        <content type="html"><![CDATA[<h1 id="让ongwu支持搜索符号"><a href="#让ongwu支持搜索符号" class="headerlink" title="让ongwu支持搜索符号"></a>让ongwu支持搜索符号</h1><h2 id="问题背景"><a href="#问题背景" class="headerlink" title="问题背景"></a>问题背景</h2><p>用过ongwu的应该都清楚它本身搜索是不支持符号的，一般都会过滤掉，只会保留文字字母数字进行搜索。这种过滤应该是出于安全考虑的，但如果你的需求需要搜索符号之类的东西，则可以通过修改源码的方式实现。</p><h2 id="修改原理"><a href="#修改原理" class="headerlink" title="修改原理"></a>修改原理</h2><p>ongwu的搜索功能是在<code>var/Widget/Archive.php</code>中实现的，所以需要修改两处代码：</p><h3 id="第一处：关键词过滤逻辑"><a href="#第一处：关键词过滤逻辑" class="headerlink" title="第一处：关键词过滤逻辑"></a>第一处：关键词过滤逻辑</h3><p>在<code>var/Widget/Archive.php</code>文件中找到以下代码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 原始代码</span></span><br><span class="line"><span class="variable">$filterKeywords</span> = <span class="variable language_">$this</span>-&gt;request-&gt;<span class="title function_ invoke__">get</span>(<span class="string">&#x27;keywords&#x27;</span>);</span><br><span class="line"><span class="variable">$filterKeywords</span> = <span class="title function_ invoke__">trim</span>(<span class="variable">$filterKeywords</span>);</span><br><span class="line"><span class="variable">$filterKeywords</span> = <span class="title function_ invoke__">str_replace</span>(<span class="keyword">array</span>(<span class="string">&#x27;+&#x27;</span>, <span class="string">&#x27;-&#x27;</span>, <span class="string">&#x27;&amp;&#x27;</span>, <span class="string">&#x27;|&#x27;</span>, <span class="string">&#x27;!&#x27;</span>, <span class="string">&#x27;(&#x27;</span>, <span class="string">&#x27;)&#x27;</span>, <span class="string">&#x27;&#123;&#x27;</span>, <span class="string">&#x27;&#125;&#x27;</span>, <span class="string">&#x27;[&#x27;</span>, <span class="string">&#x27;]&#x27;</span>, <span class="string">&#x27;^&#x27;</span>, <span class="string">&#x27;&quot;&#x27;</span>, <span class="string">&#x27;~&#x27;</span>, <span class="string">&#x27;*&#x27;</span>, <span class="string">&#x27;?&#x27;</span>, <span class="string">&#x27;:&#x27;</span>, <span class="string">&#x27;\\&#x27;</span>), <span class="string">&#x27;&#x27;</span>, <span class="variable">$filterKeywords</span>);</span><br></pre></td></tr></table></figure><p>修改为：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 修改后的代码</span></span><br><span class="line"><span class="variable">$filterKeywords</span> = <span class="variable language_">$this</span>-&gt;request-&gt;<span class="title function_ invoke__">get</span>(<span class="string">&#x27;keywords&#x27;</span>);</span><br><span class="line"><span class="variable">$filterKeywords</span> = <span class="title function_ invoke__">trim</span>(<span class="variable">$filterKeywords</span>);</span><br><span class="line"><span class="comment">// 注释掉或删除符号过滤代码</span></span><br><span class="line"><span class="comment">// $filterKeywords = str_replace(array(&#x27;+&#x27;, &#x27;-&#x27;, &#x27;&amp;&#x27;, &#x27;|&#x27;, &#x27;!&#x27;, &#x27;(&#x27;, &#x27;)&#x27;, &#x27;&#123;&#x27;, &#x27;&#125;&#x27;, &#x27;[&#x27;, &#x27;]&#x27;, &#x27;^&#x27;, &#x27;&quot;&#x27;, &#x27;~&#x27;, &#x27;*&#x27;, &#x27;?&#x27;, &#x27;:&#x27;, &#x27;\\&#x27;), &#x27;&#x27;, $filterKeywords);</span></span><br></pre></td></tr></table></figure><h3 id="第二处：SQL查询构建"><a href="#第二处：SQL查询构建" class="headerlink" title="第二处：SQL查询构建"></a>第二处：SQL查询构建</h3><p>找到构建SQL查询的部分：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 原始代码</span></span><br><span class="line"><span class="keyword">if</span> (!<span class="keyword">empty</span>(<span class="variable">$filterKeywords</span>)) &#123;</span><br><span class="line">    <span class="variable">$filterKeywords</span> = <span class="string">&#x27;%&#x27;</span> . <span class="variable">$filterKeywords</span> . <span class="string">&#x27;%&#x27;</span>;</span><br><span class="line">    <span class="variable language_">$this</span>-&gt;db-&gt;<span class="title function_ invoke__">where</span>(<span class="string">&#x27;table.contents.title LIKE ? OR table.contents.text LIKE ?&#x27;</span>, <span class="variable">$filterKeywords</span>, <span class="variable">$filterKeywords</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>修改为：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 修改后的代码</span></span><br><span class="line"><span class="keyword">if</span> (!<span class="keyword">empty</span>(<span class="variable">$filterKeywords</span>)) &#123;</span><br><span class="line">    <span class="comment">// 支持特殊符号的搜索</span></span><br><span class="line">    <span class="variable">$filterKeywords</span> = <span class="string">&#x27;%&#x27;</span> . <span class="title function_ invoke__">addslashes</span>(<span class="variable">$filterKeywords</span>) . <span class="string">&#x27;%&#x27;</span>;</span><br><span class="line">    <span class="variable language_">$this</span>-&gt;db-&gt;<span class="title function_ invoke__">where</span>(<span class="string">&#x27;table.contents.title LIKE ? OR table.contents.text LIKE ?&#x27;</span>, <span class="variable">$filterKeywords</span>, <span class="variable">$filterKeywords</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="完整修改示例"><a href="#完整修改示例" class="headerlink" title="完整修改示例"></a>完整修改示例</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">// var/Widget/Archive.php 修改示例</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Widget_Archive</span> <span class="keyword">extends</span> <span class="title">Widget_Abstract_Contents</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="comment">// ... 其他代码 ...</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 执行搜索</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">search</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;db-&gt;<span class="title function_ invoke__">select</span>(<span class="string">&#x27;table.contents.cid&#x27;</span>, <span class="string">&#x27;table.contents.title&#x27;</span>, <span class="string">&#x27;table.contents.slug&#x27;</span>, <span class="string">&#x27;table.contents.created&#x27;</span>, <span class="string">&#x27;table.contents.authorId&#x27;</span>, <span class="string">&#x27;table.contents.modified&#x27;</span>, <span class="string">&#x27;table.contents.type&#x27;</span>, <span class="string">&#x27;table.contents.status&#x27;</span>, <span class="string">&#x27;table.contents.password&#x27;</span>, <span class="string">&#x27;table.contents.commentsNum&#x27;</span>, <span class="string">&#x27;table.contents.order&#x27;</span>, <span class="string">&#x27;table.contents.template&#x27;</span>, <span class="string">&#x27;table.contents.allowComment&#x27;</span>, <span class="string">&#x27;table.contents.allowPing&#x27;</span>, <span class="string">&#x27;table.contents.allowFeed&#x27;</span>);</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;db-&gt;<span class="keyword">from</span>(<span class="string">&#x27;table.contents&#x27;</span>);</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 获取搜索关键词</span></span><br><span class="line">        <span class="variable">$filterKeywords</span> = <span class="variable language_">$this</span>-&gt;request-&gt;<span class="title function_ invoke__">get</span>(<span class="string">&#x27;keywords&#x27;</span>);</span><br><span class="line">        <span class="variable">$filterKeywords</span> = <span class="title function_ invoke__">trim</span>(<span class="variable">$filterKeywords</span>);</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 注释掉符号过滤，支持符号搜索</span></span><br><span class="line">        <span class="comment">// $filterKeywords = str_replace(array(&#x27;+&#x27;, &#x27;-&#x27;, &#x27;&amp;&#x27;, &#x27;|&#x27;, &#x27;!&#x27;, &#x27;(&#x27;, &#x27;)&#x27;, &#x27;&#123;&#x27;, &#x27;&#125;&#x27;, &#x27;[&#x27;, &#x27;]&#x27;, &#x27;^&#x27;, &#x27;&quot;&#x27;, &#x27;~&#x27;, &#x27;*&#x27;, &#x27;?&#x27;, &#x27;:&#x27;, &#x27;\\&#x27;), &#x27;&#x27;, $filterKeywords);</span></span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> (!<span class="keyword">empty</span>(<span class="variable">$filterKeywords</span>)) &#123;</span><br><span class="line">            <span class="comment">// 使用addslashes防止SQL注入，同时支持符号搜索</span></span><br><span class="line">            <span class="variable">$filterKeywords</span> = <span class="string">&#x27;%&#x27;</span> . <span class="title function_ invoke__">addslashes</span>(<span class="variable">$filterKeywords</span>) . <span class="string">&#x27;%&#x27;</span>;</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;db-&gt;<span class="title function_ invoke__">where</span>(<span class="string">&#x27;table.contents.title LIKE ? OR table.contents.text LIKE ?&#x27;</span>, <span class="variable">$filterKeywords</span>, <span class="variable">$filterKeywords</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// ... 其他搜索逻辑 ...</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="安全注意事项"><a href="#安全注意事项" class="headerlink" title="安全注意事项"></a>安全注意事项</h2><h3 id="1-SQL注入防护"><a href="#1-SQL注入防护" class="headerlink" title="1. SQL注入防护"></a>1. SQL注入防护</h3><p>虽然我们允许符号搜索，但必须确保SQL安全：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 使用addslashes或更好的方法处理输入</span></span><br><span class="line"><span class="variable">$filterKeywords</span> = <span class="title function_ invoke__">addslashes</span>(<span class="variable">$filterKeywords</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 或者使用预处理语句</span></span><br><span class="line"><span class="variable">$stmt</span> = <span class="variable language_">$this</span>-&gt;db-&gt;<span class="title function_ invoke__">prepare</span>(<span class="string">&#x27;SELECT * FROM table.contents WHERE title LIKE ? OR text LIKE ?&#x27;</span>);</span><br><span class="line"><span class="variable">$stmt</span>-&gt;<span class="title function_ invoke__">execute</span>(<span class="keyword">array</span>(<span class="variable">$filterKeywords</span>, <span class="variable">$filterKeywords</span>));</span><br></pre></td></tr></table></figure><h3 id="2-输入验证"><a href="#2-输入验证" class="headerlink" title="2. 输入验证"></a>2. 输入验证</h3><p>添加输入长度和内容验证：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 验证搜索关键词长度</span></span><br><span class="line"><span class="keyword">if</span> (<span class="title function_ invoke__">strlen</span>(<span class="variable">$filterKeywords</span>) &gt; <span class="number">100</span>) &#123;</span><br><span class="line">    <span class="variable">$filterKeywords</span> = <span class="title function_ invoke__">substr</span>(<span class="variable">$filterKeywords</span>, <span class="number">0</span>, <span class="number">100</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 验证是否包含恶意内容</span></span><br><span class="line"><span class="keyword">if</span> (<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/&lt;script|javascript|vbscript|onload|onerror/i&#x27;</span>, <span class="variable">$filterKeywords</span>)) &#123;</span><br><span class="line">    <span class="variable">$filterKeywords</span> = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="测试验证"><a href="#测试验证" class="headerlink" title="测试验证"></a>测试验证</h2><h3 id="1-基本符号测试"><a href="#1-基本符号测试" class="headerlink" title="1. 基本符号测试"></a>1. 基本符号测试</h3><p>测试以下符号是否能正常搜索：</p><ul><li><code>+</code> 加号</li><li><code>-</code> 减号</li><li><code>&amp;</code> 与号</li><li><code>|</code> 或号</li><li><code>!</code> 感叹号</li><li><code>()</code> 括号</li><li><code>[]</code> 方括号</li><li><code>&#123;&#125;</code> 花括号</li></ul><h3 id="2-复杂搜索测试"><a href="#2-复杂搜索测试" class="headerlink" title="2. 复杂搜索测试"></a>2. 复杂搜索测试</h3><p>测试复杂搜索表达式：</p><ul><li><code>PHP + MySQL</code></li><li><code>(前端|后端)开发</code></li><li><code>ongwu &amp; 插件</code></li><li><code>[重要] 更新</code></li></ul><h2 id="性能优化建议"><a href="#性能优化建议" class="headerlink" title="性能优化建议"></a>性能优化建议</h2><h3 id="1-索引优化"><a href="#1-索引优化" class="headerlink" title="1. 索引优化"></a>1. 索引优化</h3><p>为搜索字段添加数据库索引：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 为标题和内容字段添加全文索引</span></span><br><span class="line"><span class="keyword">ALTER TABLE</span> ongwu_contents <span class="keyword">ADD</span> FULLTEXT(title, text);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 或者添加普通索引</span></span><br><span class="line"><span class="keyword">CREATE</span> INDEX idx_contents_title <span class="keyword">ON</span> ongwu_contents(title);</span><br><span class="line"><span class="keyword">CREATE</span> INDEX idx_contents_text <span class="keyword">ON</span> ongwu_contents(text);</span><br></pre></td></tr></table></figure><h3 id="2-搜索结果缓存"><a href="#2-搜索结果缓存" class="headerlink" title="2. 搜索结果缓存"></a>2. 搜索结果缓存</h3><p>实现搜索结果缓存机制：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 缓存搜索结果</span></span><br><span class="line"><span class="variable">$cacheKey</span> = <span class="string">&#x27;search_&#x27;</span> . <span class="title function_ invoke__">md5</span>(<span class="variable">$filterKeywords</span>);</span><br><span class="line"><span class="variable">$cachedResult</span> = <span class="variable language_">$this</span>-&gt;cache-&gt;<span class="title function_ invoke__">get</span>(<span class="variable">$cacheKey</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="variable">$cachedResult</span> !== <span class="literal">false</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="variable">$cachedResult</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 执行搜索</span></span><br><span class="line"><span class="variable">$result</span> = <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">performSearch</span>(<span class="variable">$filterKeywords</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 缓存结果</span></span><br><span class="line"><span class="variable language_">$this</span>-&gt;cache-&gt;<span class="title function_ invoke__">set</span>(<span class="variable">$cacheKey</span>, <span class="variable">$result</span>, <span class="number">3600</span>); <span class="comment">// 缓存1小时</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="variable">$result</span>;</span><br></pre></td></tr></table></figure><h2 id="兼容性考虑"><a href="#兼容性考虑" class="headerlink" title="兼容性考虑"></a>兼容性考虑</h2><h3 id="1-版本兼容"><a href="#1-版本兼容" class="headerlink" title="1. 版本兼容"></a>1. 版本兼容</h3><p>确保修改后的代码与ongwu版本兼容：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 检查ongwu版本</span></span><br><span class="line"><span class="keyword">if</span> (<span class="title function_ invoke__">version_compare</span>(ongwu_<span class="title class_">Common</span>::<span class="variable constant_">VERSION</span>, <span class="string">&#x27;1.2.0&#x27;</span>, <span class="string">&#x27;&gt;=&#x27;</span>)) &#123;</span><br><span class="line">    <span class="comment">// 新版本代码</span></span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="comment">// 旧版本兼容代码</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2-插件兼容"><a href="#2-插件兼容" class="headerlink" title="2. 插件兼容"></a>2. 插件兼容</h3><p>如果使用了其他搜索相关插件，需要确保兼容性：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 检查是否有其他搜索插件</span></span><br><span class="line"><span class="keyword">if</span> (<span class="title function_ invoke__">class_exists</span>(<span class="string">&#x27;Widget_Archive_Search&#x27;</span>)) &#123;</span><br><span class="line">    <span class="comment">// 使用插件提供的搜索功能</span></span><br><span class="line">    <span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">pluginSearch</span>(<span class="variable">$filterKeywords</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>通过修改ongwu源码，我们可以实现符号搜索功能，但需要注意：</p><ol><li><strong>安全性</strong>：使用<code>addslashes</code>或预处理语句防止SQL注入</li><li><strong>性能</strong>：添加适当的数据库索引和缓存机制</li><li><strong>兼容性</strong>：确保与ongwu版本和其他插件的兼容性</li><li><strong>维护性</strong>：记录修改内容，便于后续升级</li></ol><p>这样修改后，ongwu就能支持包含符号的搜索了，满足更复杂的搜索需求。</p><hr><p><em>注意：修改源码后，在ongwu升级时需要重新应用这些修改。建议将修改内容记录在文档中，或者创建补丁文件。</em></p>]]></content>
      
      
      <categories>
          
          <category> tutorial </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ongwu </tag>
            
            <tag> 搜索功能 </tag>
            
            <tag> 源码修改 </tag>
            
            <tag> 符号搜索 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>让ongwu支持搜索符号</title>
      <link href="/2025/01/09/7%20-%20%E5%89%AF%E6%9C%AC%20(7)/"/>
      <url>/2025/01/09/7%20-%20%E5%89%AF%E6%9C%AC%20(7)/</url>
      
        <content type="html"><![CDATA[<h1 id="让ongwu支持搜索符号"><a href="#让ongwu支持搜索符号" class="headerlink" title="让ongwu支持搜索符号"></a>让ongwu支持搜索符号</h1><h2 id="问题背景"><a href="#问题背景" class="headerlink" title="问题背景"></a>问题背景</h2><p>用过ongwu的应该都清楚它本身搜索是不支持符号的，一般都会过滤掉，只会保留文字字母数字进行搜索。这种过滤应该是出于安全考虑的，但如果你的需求需要搜索符号之类的东西，则可以通过修改源码的方式实现。</p><h2 id="修改原理"><a href="#修改原理" class="headerlink" title="修改原理"></a>修改原理</h2><p>ongwu的搜索功能是在<code>var/Widget/Archive.php</code>中实现的，所以需要修改两处代码：</p><h3 id="第一处：关键词过滤逻辑"><a href="#第一处：关键词过滤逻辑" class="headerlink" title="第一处：关键词过滤逻辑"></a>第一处：关键词过滤逻辑</h3><p>在<code>var/Widget/Archive.php</code>文件中找到以下代码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 原始代码</span></span><br><span class="line"><span class="variable">$filterKeywords</span> = <span class="variable language_">$this</span>-&gt;request-&gt;<span class="title function_ invoke__">get</span>(<span class="string">&#x27;keywords&#x27;</span>);</span><br><span class="line"><span class="variable">$filterKeywords</span> = <span class="title function_ invoke__">trim</span>(<span class="variable">$filterKeywords</span>);</span><br><span class="line"><span class="variable">$filterKeywords</span> = <span class="title function_ invoke__">str_replace</span>(<span class="keyword">array</span>(<span class="string">&#x27;+&#x27;</span>, <span class="string">&#x27;-&#x27;</span>, <span class="string">&#x27;&amp;&#x27;</span>, <span class="string">&#x27;|&#x27;</span>, <span class="string">&#x27;!&#x27;</span>, <span class="string">&#x27;(&#x27;</span>, <span class="string">&#x27;)&#x27;</span>, <span class="string">&#x27;&#123;&#x27;</span>, <span class="string">&#x27;&#125;&#x27;</span>, <span class="string">&#x27;[&#x27;</span>, <span class="string">&#x27;]&#x27;</span>, <span class="string">&#x27;^&#x27;</span>, <span class="string">&#x27;&quot;&#x27;</span>, <span class="string">&#x27;~&#x27;</span>, <span class="string">&#x27;*&#x27;</span>, <span class="string">&#x27;?&#x27;</span>, <span class="string">&#x27;:&#x27;</span>, <span class="string">&#x27;\\&#x27;</span>), <span class="string">&#x27;&#x27;</span>, <span class="variable">$filterKeywords</span>);</span><br></pre></td></tr></table></figure><p>修改为：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 修改后的代码</span></span><br><span class="line"><span class="variable">$filterKeywords</span> = <span class="variable language_">$this</span>-&gt;request-&gt;<span class="title function_ invoke__">get</span>(<span class="string">&#x27;keywords&#x27;</span>);</span><br><span class="line"><span class="variable">$filterKeywords</span> = <span class="title function_ invoke__">trim</span>(<span class="variable">$filterKeywords</span>);</span><br><span class="line"><span class="comment">// 注释掉或删除符号过滤代码</span></span><br><span class="line"><span class="comment">// $filterKeywords = str_replace(array(&#x27;+&#x27;, &#x27;-&#x27;, &#x27;&amp;&#x27;, &#x27;|&#x27;, &#x27;!&#x27;, &#x27;(&#x27;, &#x27;)&#x27;, &#x27;&#123;&#x27;, &#x27;&#125;&#x27;, &#x27;[&#x27;, &#x27;]&#x27;, &#x27;^&#x27;, &#x27;&quot;&#x27;, &#x27;~&#x27;, &#x27;*&#x27;, &#x27;?&#x27;, &#x27;:&#x27;, &#x27;\\&#x27;), &#x27;&#x27;, $filterKeywords);</span></span><br></pre></td></tr></table></figure><h3 id="第二处：SQL查询构建"><a href="#第二处：SQL查询构建" class="headerlink" title="第二处：SQL查询构建"></a>第二处：SQL查询构建</h3><p>找到构建SQL查询的部分：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 原始代码</span></span><br><span class="line"><span class="keyword">if</span> (!<span class="keyword">empty</span>(<span class="variable">$filterKeywords</span>)) &#123;</span><br><span class="line">    <span class="variable">$filterKeywords</span> = <span class="string">&#x27;%&#x27;</span> . <span class="variable">$filterKeywords</span> . <span class="string">&#x27;%&#x27;</span>;</span><br><span class="line">    <span class="variable language_">$this</span>-&gt;db-&gt;<span class="title function_ invoke__">where</span>(<span class="string">&#x27;table.contents.title LIKE ? OR table.contents.text LIKE ?&#x27;</span>, <span class="variable">$filterKeywords</span>, <span class="variable">$filterKeywords</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>修改为：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 修改后的代码</span></span><br><span class="line"><span class="keyword">if</span> (!<span class="keyword">empty</span>(<span class="variable">$filterKeywords</span>)) &#123;</span><br><span class="line">    <span class="comment">// 支持特殊符号的搜索</span></span><br><span class="line">    <span class="variable">$filterKeywords</span> = <span class="string">&#x27;%&#x27;</span> . <span class="title function_ invoke__">addslashes</span>(<span class="variable">$filterKeywords</span>) . <span class="string">&#x27;%&#x27;</span>;</span><br><span class="line">    <span class="variable language_">$this</span>-&gt;db-&gt;<span class="title function_ invoke__">where</span>(<span class="string">&#x27;table.contents.title LIKE ? OR table.contents.text LIKE ?&#x27;</span>, <span class="variable">$filterKeywords</span>, <span class="variable">$filterKeywords</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="完整修改示例"><a href="#完整修改示例" class="headerlink" title="完整修改示例"></a>完整修改示例</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">// var/Widget/Archive.php 修改示例</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Widget_Archive</span> <span class="keyword">extends</span> <span class="title">Widget_Abstract_Contents</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="comment">// ... 其他代码 ...</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 执行搜索</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">search</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;db-&gt;<span class="title function_ invoke__">select</span>(<span class="string">&#x27;table.contents.cid&#x27;</span>, <span class="string">&#x27;table.contents.title&#x27;</span>, <span class="string">&#x27;table.contents.slug&#x27;</span>, <span class="string">&#x27;table.contents.created&#x27;</span>, <span class="string">&#x27;table.contents.authorId&#x27;</span>, <span class="string">&#x27;table.contents.modified&#x27;</span>, <span class="string">&#x27;table.contents.type&#x27;</span>, <span class="string">&#x27;table.contents.status&#x27;</span>, <span class="string">&#x27;table.contents.password&#x27;</span>, <span class="string">&#x27;table.contents.commentsNum&#x27;</span>, <span class="string">&#x27;table.contents.order&#x27;</span>, <span class="string">&#x27;table.contents.template&#x27;</span>, <span class="string">&#x27;table.contents.allowComment&#x27;</span>, <span class="string">&#x27;table.contents.allowPing&#x27;</span>, <span class="string">&#x27;table.contents.allowFeed&#x27;</span>);</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;db-&gt;<span class="keyword">from</span>(<span class="string">&#x27;table.contents&#x27;</span>);</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 获取搜索关键词</span></span><br><span class="line">        <span class="variable">$filterKeywords</span> = <span class="variable language_">$this</span>-&gt;request-&gt;<span class="title function_ invoke__">get</span>(<span class="string">&#x27;keywords&#x27;</span>);</span><br><span class="line">        <span class="variable">$filterKeywords</span> = <span class="title function_ invoke__">trim</span>(<span class="variable">$filterKeywords</span>);</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 注释掉符号过滤，支持符号搜索</span></span><br><span class="line">        <span class="comment">// $filterKeywords = str_replace(array(&#x27;+&#x27;, &#x27;-&#x27;, &#x27;&amp;&#x27;, &#x27;|&#x27;, &#x27;!&#x27;, &#x27;(&#x27;, &#x27;)&#x27;, &#x27;&#123;&#x27;, &#x27;&#125;&#x27;, &#x27;[&#x27;, &#x27;]&#x27;, &#x27;^&#x27;, &#x27;&quot;&#x27;, &#x27;~&#x27;, &#x27;*&#x27;, &#x27;?&#x27;, &#x27;:&#x27;, &#x27;\\&#x27;), &#x27;&#x27;, $filterKeywords);</span></span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> (!<span class="keyword">empty</span>(<span class="variable">$filterKeywords</span>)) &#123;</span><br><span class="line">            <span class="comment">// 使用addslashes防止SQL注入，同时支持符号搜索</span></span><br><span class="line">            <span class="variable">$filterKeywords</span> = <span class="string">&#x27;%&#x27;</span> . <span class="title function_ invoke__">addslashes</span>(<span class="variable">$filterKeywords</span>) . <span class="string">&#x27;%&#x27;</span>;</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;db-&gt;<span class="title function_ invoke__">where</span>(<span class="string">&#x27;table.contents.title LIKE ? OR table.contents.text LIKE ?&#x27;</span>, <span class="variable">$filterKeywords</span>, <span class="variable">$filterKeywords</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// ... 其他搜索逻辑 ...</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="安全注意事项"><a href="#安全注意事项" class="headerlink" title="安全注意事项"></a>安全注意事项</h2><h3 id="1-SQL注入防护"><a href="#1-SQL注入防护" class="headerlink" title="1. SQL注入防护"></a>1. SQL注入防护</h3><p>虽然我们允许符号搜索，但必须确保SQL安全：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 使用addslashes或更好的方法处理输入</span></span><br><span class="line"><span class="variable">$filterKeywords</span> = <span class="title function_ invoke__">addslashes</span>(<span class="variable">$filterKeywords</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 或者使用预处理语句</span></span><br><span class="line"><span class="variable">$stmt</span> = <span class="variable language_">$this</span>-&gt;db-&gt;<span class="title function_ invoke__">prepare</span>(<span class="string">&#x27;SELECT * FROM table.contents WHERE title LIKE ? OR text LIKE ?&#x27;</span>);</span><br><span class="line"><span class="variable">$stmt</span>-&gt;<span class="title function_ invoke__">execute</span>(<span class="keyword">array</span>(<span class="variable">$filterKeywords</span>, <span class="variable">$filterKeywords</span>));</span><br></pre></td></tr></table></figure><h3 id="2-输入验证"><a href="#2-输入验证" class="headerlink" title="2. 输入验证"></a>2. 输入验证</h3><p>添加输入长度和内容验证：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 验证搜索关键词长度</span></span><br><span class="line"><span class="keyword">if</span> (<span class="title function_ invoke__">strlen</span>(<span class="variable">$filterKeywords</span>) &gt; <span class="number">100</span>) &#123;</span><br><span class="line">    <span class="variable">$filterKeywords</span> = <span class="title function_ invoke__">substr</span>(<span class="variable">$filterKeywords</span>, <span class="number">0</span>, <span class="number">100</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 验证是否包含恶意内容</span></span><br><span class="line"><span class="keyword">if</span> (<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/&lt;script|javascript|vbscript|onload|onerror/i&#x27;</span>, <span class="variable">$filterKeywords</span>)) &#123;</span><br><span class="line">    <span class="variable">$filterKeywords</span> = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="测试验证"><a href="#测试验证" class="headerlink" title="测试验证"></a>测试验证</h2><h3 id="1-基本符号测试"><a href="#1-基本符号测试" class="headerlink" title="1. 基本符号测试"></a>1. 基本符号测试</h3><p>测试以下符号是否能正常搜索：</p><ul><li><code>+</code> 加号</li><li><code>-</code> 减号</li><li><code>&amp;</code> 与号</li><li><code>|</code> 或号</li><li><code>!</code> 感叹号</li><li><code>()</code> 括号</li><li><code>[]</code> 方括号</li><li><code>&#123;&#125;</code> 花括号</li></ul><h3 id="2-复杂搜索测试"><a href="#2-复杂搜索测试" class="headerlink" title="2. 复杂搜索测试"></a>2. 复杂搜索测试</h3><p>测试复杂搜索表达式：</p><ul><li><code>PHP + MySQL</code></li><li><code>(前端|后端)开发</code></li><li><code>ongwu &amp; 插件</code></li><li><code>[重要] 更新</code></li></ul><h2 id="性能优化建议"><a href="#性能优化建议" class="headerlink" title="性能优化建议"></a>性能优化建议</h2><h3 id="1-索引优化"><a href="#1-索引优化" class="headerlink" title="1. 索引优化"></a>1. 索引优化</h3><p>为搜索字段添加数据库索引：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 为标题和内容字段添加全文索引</span></span><br><span class="line"><span class="keyword">ALTER TABLE</span> ongwu_contents <span class="keyword">ADD</span> FULLTEXT(title, text);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 或者添加普通索引</span></span><br><span class="line"><span class="keyword">CREATE</span> INDEX idx_contents_title <span class="keyword">ON</span> ongwu_contents(title);</span><br><span class="line"><span class="keyword">CREATE</span> INDEX idx_contents_text <span class="keyword">ON</span> ongwu_contents(text);</span><br></pre></td></tr></table></figure><h3 id="2-搜索结果缓存"><a href="#2-搜索结果缓存" class="headerlink" title="2. 搜索结果缓存"></a>2. 搜索结果缓存</h3><p>实现搜索结果缓存机制：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 缓存搜索结果</span></span><br><span class="line"><span class="variable">$cacheKey</span> = <span class="string">&#x27;search_&#x27;</span> . <span class="title function_ invoke__">md5</span>(<span class="variable">$filterKeywords</span>);</span><br><span class="line"><span class="variable">$cachedResult</span> = <span class="variable language_">$this</span>-&gt;cache-&gt;<span class="title function_ invoke__">get</span>(<span class="variable">$cacheKey</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="variable">$cachedResult</span> !== <span class="literal">false</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="variable">$cachedResult</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 执行搜索</span></span><br><span class="line"><span class="variable">$result</span> = <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">performSearch</span>(<span class="variable">$filterKeywords</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 缓存结果</span></span><br><span class="line"><span class="variable language_">$this</span>-&gt;cache-&gt;<span class="title function_ invoke__">set</span>(<span class="variable">$cacheKey</span>, <span class="variable">$result</span>, <span class="number">3600</span>); <span class="comment">// 缓存1小时</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="variable">$result</span>;</span><br></pre></td></tr></table></figure><h2 id="兼容性考虑"><a href="#兼容性考虑" class="headerlink" title="兼容性考虑"></a>兼容性考虑</h2><h3 id="1-版本兼容"><a href="#1-版本兼容" class="headerlink" title="1. 版本兼容"></a>1. 版本兼容</h3><p>确保修改后的代码与ongwu版本兼容：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 检查ongwu版本</span></span><br><span class="line"><span class="keyword">if</span> (<span class="title function_ invoke__">version_compare</span>(ongwu_<span class="title class_">Common</span>::<span class="variable constant_">VERSION</span>, <span class="string">&#x27;1.2.0&#x27;</span>, <span class="string">&#x27;&gt;=&#x27;</span>)) &#123;</span><br><span class="line">    <span class="comment">// 新版本代码</span></span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="comment">// 旧版本兼容代码</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2-插件兼容"><a href="#2-插件兼容" class="headerlink" title="2. 插件兼容"></a>2. 插件兼容</h3><p>如果使用了其他搜索相关插件，需要确保兼容性：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 检查是否有其他搜索插件</span></span><br><span class="line"><span class="keyword">if</span> (<span class="title function_ invoke__">class_exists</span>(<span class="string">&#x27;Widget_Archive_Search&#x27;</span>)) &#123;</span><br><span class="line">    <span class="comment">// 使用插件提供的搜索功能</span></span><br><span class="line">    <span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">pluginSearch</span>(<span class="variable">$filterKeywords</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>通过修改ongwu源码，我们可以实现符号搜索功能，但需要注意：</p><ol><li><strong>安全性</strong>：使用<code>addslashes</code>或预处理语句防止SQL注入</li><li><strong>性能</strong>：添加适当的数据库索引和缓存机制</li><li><strong>兼容性</strong>：确保与ongwu版本和其他插件的兼容性</li><li><strong>维护性</strong>：记录修改内容，便于后续升级</li></ol><p>这样修改后，ongwu就能支持包含符号的搜索了，满足更复杂的搜索需求。</p><hr><p><em>注意：修改源码后，在ongwu升级时需要重新应用这些修改。建议将修改内容记录在文档中，或者创建补丁文件。</em></p>]]></content>
      
      
      <categories>
          
          <category> tutorial </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ongwu </tag>
            
            <tag> 搜索功能 </tag>
            
            <tag> 源码修改 </tag>
            
            <tag> 符号搜索 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>让ongwu支持搜索符号</title>
      <link href="/2025/01/09/7%20-%20%E5%89%AF%E6%9C%AC%20(8)/"/>
      <url>/2025/01/09/7%20-%20%E5%89%AF%E6%9C%AC%20(8)/</url>
      
        <content type="html"><![CDATA[<h1 id="让ongwu支持搜索符号"><a href="#让ongwu支持搜索符号" class="headerlink" title="让ongwu支持搜索符号"></a>让ongwu支持搜索符号</h1><h2 id="问题背景"><a href="#问题背景" class="headerlink" title="问题背景"></a>问题背景</h2><p>用过ongwu的应该都清楚它本身搜索是不支持符号的，一般都会过滤掉，只会保留文字字母数字进行搜索。这种过滤应该是出于安全考虑的，但如果你的需求需要搜索符号之类的东西，则可以通过修改源码的方式实现。</p><h2 id="修改原理"><a href="#修改原理" class="headerlink" title="修改原理"></a>修改原理</h2><p>ongwu的搜索功能是在<code>var/Widget/Archive.php</code>中实现的，所以需要修改两处代码：</p><h3 id="第一处：关键词过滤逻辑"><a href="#第一处：关键词过滤逻辑" class="headerlink" title="第一处：关键词过滤逻辑"></a>第一处：关键词过滤逻辑</h3><p>在<code>var/Widget/Archive.php</code>文件中找到以下代码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 原始代码</span></span><br><span class="line"><span class="variable">$filterKeywords</span> = <span class="variable language_">$this</span>-&gt;request-&gt;<span class="title function_ invoke__">get</span>(<span class="string">&#x27;keywords&#x27;</span>);</span><br><span class="line"><span class="variable">$filterKeywords</span> = <span class="title function_ invoke__">trim</span>(<span class="variable">$filterKeywords</span>);</span><br><span class="line"><span class="variable">$filterKeywords</span> = <span class="title function_ invoke__">str_replace</span>(<span class="keyword">array</span>(<span class="string">&#x27;+&#x27;</span>, <span class="string">&#x27;-&#x27;</span>, <span class="string">&#x27;&amp;&#x27;</span>, <span class="string">&#x27;|&#x27;</span>, <span class="string">&#x27;!&#x27;</span>, <span class="string">&#x27;(&#x27;</span>, <span class="string">&#x27;)&#x27;</span>, <span class="string">&#x27;&#123;&#x27;</span>, <span class="string">&#x27;&#125;&#x27;</span>, <span class="string">&#x27;[&#x27;</span>, <span class="string">&#x27;]&#x27;</span>, <span class="string">&#x27;^&#x27;</span>, <span class="string">&#x27;&quot;&#x27;</span>, <span class="string">&#x27;~&#x27;</span>, <span class="string">&#x27;*&#x27;</span>, <span class="string">&#x27;?&#x27;</span>, <span class="string">&#x27;:&#x27;</span>, <span class="string">&#x27;\\&#x27;</span>), <span class="string">&#x27;&#x27;</span>, <span class="variable">$filterKeywords</span>);</span><br></pre></td></tr></table></figure><p>修改为：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 修改后的代码</span></span><br><span class="line"><span class="variable">$filterKeywords</span> = <span class="variable language_">$this</span>-&gt;request-&gt;<span class="title function_ invoke__">get</span>(<span class="string">&#x27;keywords&#x27;</span>);</span><br><span class="line"><span class="variable">$filterKeywords</span> = <span class="title function_ invoke__">trim</span>(<span class="variable">$filterKeywords</span>);</span><br><span class="line"><span class="comment">// 注释掉或删除符号过滤代码</span></span><br><span class="line"><span class="comment">// $filterKeywords = str_replace(array(&#x27;+&#x27;, &#x27;-&#x27;, &#x27;&amp;&#x27;, &#x27;|&#x27;, &#x27;!&#x27;, &#x27;(&#x27;, &#x27;)&#x27;, &#x27;&#123;&#x27;, &#x27;&#125;&#x27;, &#x27;[&#x27;, &#x27;]&#x27;, &#x27;^&#x27;, &#x27;&quot;&#x27;, &#x27;~&#x27;, &#x27;*&#x27;, &#x27;?&#x27;, &#x27;:&#x27;, &#x27;\\&#x27;), &#x27;&#x27;, $filterKeywords);</span></span><br></pre></td></tr></table></figure><h3 id="第二处：SQL查询构建"><a href="#第二处：SQL查询构建" class="headerlink" title="第二处：SQL查询构建"></a>第二处：SQL查询构建</h3><p>找到构建SQL查询的部分：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 原始代码</span></span><br><span class="line"><span class="keyword">if</span> (!<span class="keyword">empty</span>(<span class="variable">$filterKeywords</span>)) &#123;</span><br><span class="line">    <span class="variable">$filterKeywords</span> = <span class="string">&#x27;%&#x27;</span> . <span class="variable">$filterKeywords</span> . <span class="string">&#x27;%&#x27;</span>;</span><br><span class="line">    <span class="variable language_">$this</span>-&gt;db-&gt;<span class="title function_ invoke__">where</span>(<span class="string">&#x27;table.contents.title LIKE ? OR table.contents.text LIKE ?&#x27;</span>, <span class="variable">$filterKeywords</span>, <span class="variable">$filterKeywords</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>修改为：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 修改后的代码</span></span><br><span class="line"><span class="keyword">if</span> (!<span class="keyword">empty</span>(<span class="variable">$filterKeywords</span>)) &#123;</span><br><span class="line">    <span class="comment">// 支持特殊符号的搜索</span></span><br><span class="line">    <span class="variable">$filterKeywords</span> = <span class="string">&#x27;%&#x27;</span> . <span class="title function_ invoke__">addslashes</span>(<span class="variable">$filterKeywords</span>) . <span class="string">&#x27;%&#x27;</span>;</span><br><span class="line">    <span class="variable language_">$this</span>-&gt;db-&gt;<span class="title function_ invoke__">where</span>(<span class="string">&#x27;table.contents.title LIKE ? OR table.contents.text LIKE ?&#x27;</span>, <span class="variable">$filterKeywords</span>, <span class="variable">$filterKeywords</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="完整修改示例"><a href="#完整修改示例" class="headerlink" title="完整修改示例"></a>完整修改示例</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">// var/Widget/Archive.php 修改示例</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Widget_Archive</span> <span class="keyword">extends</span> <span class="title">Widget_Abstract_Contents</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="comment">// ... 其他代码 ...</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 执行搜索</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">search</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;db-&gt;<span class="title function_ invoke__">select</span>(<span class="string">&#x27;table.contents.cid&#x27;</span>, <span class="string">&#x27;table.contents.title&#x27;</span>, <span class="string">&#x27;table.contents.slug&#x27;</span>, <span class="string">&#x27;table.contents.created&#x27;</span>, <span class="string">&#x27;table.contents.authorId&#x27;</span>, <span class="string">&#x27;table.contents.modified&#x27;</span>, <span class="string">&#x27;table.contents.type&#x27;</span>, <span class="string">&#x27;table.contents.status&#x27;</span>, <span class="string">&#x27;table.contents.password&#x27;</span>, <span class="string">&#x27;table.contents.commentsNum&#x27;</span>, <span class="string">&#x27;table.contents.order&#x27;</span>, <span class="string">&#x27;table.contents.template&#x27;</span>, <span class="string">&#x27;table.contents.allowComment&#x27;</span>, <span class="string">&#x27;table.contents.allowPing&#x27;</span>, <span class="string">&#x27;table.contents.allowFeed&#x27;</span>);</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;db-&gt;<span class="keyword">from</span>(<span class="string">&#x27;table.contents&#x27;</span>);</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 获取搜索关键词</span></span><br><span class="line">        <span class="variable">$filterKeywords</span> = <span class="variable language_">$this</span>-&gt;request-&gt;<span class="title function_ invoke__">get</span>(<span class="string">&#x27;keywords&#x27;</span>);</span><br><span class="line">        <span class="variable">$filterKeywords</span> = <span class="title function_ invoke__">trim</span>(<span class="variable">$filterKeywords</span>);</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 注释掉符号过滤，支持符号搜索</span></span><br><span class="line">        <span class="comment">// $filterKeywords = str_replace(array(&#x27;+&#x27;, &#x27;-&#x27;, &#x27;&amp;&#x27;, &#x27;|&#x27;, &#x27;!&#x27;, &#x27;(&#x27;, &#x27;)&#x27;, &#x27;&#123;&#x27;, &#x27;&#125;&#x27;, &#x27;[&#x27;, &#x27;]&#x27;, &#x27;^&#x27;, &#x27;&quot;&#x27;, &#x27;~&#x27;, &#x27;*&#x27;, &#x27;?&#x27;, &#x27;:&#x27;, &#x27;\\&#x27;), &#x27;&#x27;, $filterKeywords);</span></span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> (!<span class="keyword">empty</span>(<span class="variable">$filterKeywords</span>)) &#123;</span><br><span class="line">            <span class="comment">// 使用addslashes防止SQL注入，同时支持符号搜索</span></span><br><span class="line">            <span class="variable">$filterKeywords</span> = <span class="string">&#x27;%&#x27;</span> . <span class="title function_ invoke__">addslashes</span>(<span class="variable">$filterKeywords</span>) . <span class="string">&#x27;%&#x27;</span>;</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;db-&gt;<span class="title function_ invoke__">where</span>(<span class="string">&#x27;table.contents.title LIKE ? OR table.contents.text LIKE ?&#x27;</span>, <span class="variable">$filterKeywords</span>, <span class="variable">$filterKeywords</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// ... 其他搜索逻辑 ...</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="安全注意事项"><a href="#安全注意事项" class="headerlink" title="安全注意事项"></a>安全注意事项</h2><h3 id="1-SQL注入防护"><a href="#1-SQL注入防护" class="headerlink" title="1. SQL注入防护"></a>1. SQL注入防护</h3><p>虽然我们允许符号搜索，但必须确保SQL安全：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 使用addslashes或更好的方法处理输入</span></span><br><span class="line"><span class="variable">$filterKeywords</span> = <span class="title function_ invoke__">addslashes</span>(<span class="variable">$filterKeywords</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 或者使用预处理语句</span></span><br><span class="line"><span class="variable">$stmt</span> = <span class="variable language_">$this</span>-&gt;db-&gt;<span class="title function_ invoke__">prepare</span>(<span class="string">&#x27;SELECT * FROM table.contents WHERE title LIKE ? OR text LIKE ?&#x27;</span>);</span><br><span class="line"><span class="variable">$stmt</span>-&gt;<span class="title function_ invoke__">execute</span>(<span class="keyword">array</span>(<span class="variable">$filterKeywords</span>, <span class="variable">$filterKeywords</span>));</span><br></pre></td></tr></table></figure><h3 id="2-输入验证"><a href="#2-输入验证" class="headerlink" title="2. 输入验证"></a>2. 输入验证</h3><p>添加输入长度和内容验证：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 验证搜索关键词长度</span></span><br><span class="line"><span class="keyword">if</span> (<span class="title function_ invoke__">strlen</span>(<span class="variable">$filterKeywords</span>) &gt; <span class="number">100</span>) &#123;</span><br><span class="line">    <span class="variable">$filterKeywords</span> = <span class="title function_ invoke__">substr</span>(<span class="variable">$filterKeywords</span>, <span class="number">0</span>, <span class="number">100</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 验证是否包含恶意内容</span></span><br><span class="line"><span class="keyword">if</span> (<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/&lt;script|javascript|vbscript|onload|onerror/i&#x27;</span>, <span class="variable">$filterKeywords</span>)) &#123;</span><br><span class="line">    <span class="variable">$filterKeywords</span> = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="测试验证"><a href="#测试验证" class="headerlink" title="测试验证"></a>测试验证</h2><h3 id="1-基本符号测试"><a href="#1-基本符号测试" class="headerlink" title="1. 基本符号测试"></a>1. 基本符号测试</h3><p>测试以下符号是否能正常搜索：</p><ul><li><code>+</code> 加号</li><li><code>-</code> 减号</li><li><code>&amp;</code> 与号</li><li><code>|</code> 或号</li><li><code>!</code> 感叹号</li><li><code>()</code> 括号</li><li><code>[]</code> 方括号</li><li><code>&#123;&#125;</code> 花括号</li></ul><h3 id="2-复杂搜索测试"><a href="#2-复杂搜索测试" class="headerlink" title="2. 复杂搜索测试"></a>2. 复杂搜索测试</h3><p>测试复杂搜索表达式：</p><ul><li><code>PHP + MySQL</code></li><li><code>(前端|后端)开发</code></li><li><code>ongwu &amp; 插件</code></li><li><code>[重要] 更新</code></li></ul><h2 id="性能优化建议"><a href="#性能优化建议" class="headerlink" title="性能优化建议"></a>性能优化建议</h2><h3 id="1-索引优化"><a href="#1-索引优化" class="headerlink" title="1. 索引优化"></a>1. 索引优化</h3><p>为搜索字段添加数据库索引：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 为标题和内容字段添加全文索引</span></span><br><span class="line"><span class="keyword">ALTER TABLE</span> ongwu_contents <span class="keyword">ADD</span> FULLTEXT(title, text);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 或者添加普通索引</span></span><br><span class="line"><span class="keyword">CREATE</span> INDEX idx_contents_title <span class="keyword">ON</span> ongwu_contents(title);</span><br><span class="line"><span class="keyword">CREATE</span> INDEX idx_contents_text <span class="keyword">ON</span> ongwu_contents(text);</span><br></pre></td></tr></table></figure><h3 id="2-搜索结果缓存"><a href="#2-搜索结果缓存" class="headerlink" title="2. 搜索结果缓存"></a>2. 搜索结果缓存</h3><p>实现搜索结果缓存机制：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 缓存搜索结果</span></span><br><span class="line"><span class="variable">$cacheKey</span> = <span class="string">&#x27;search_&#x27;</span> . <span class="title function_ invoke__">md5</span>(<span class="variable">$filterKeywords</span>);</span><br><span class="line"><span class="variable">$cachedResult</span> = <span class="variable language_">$this</span>-&gt;cache-&gt;<span class="title function_ invoke__">get</span>(<span class="variable">$cacheKey</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="variable">$cachedResult</span> !== <span class="literal">false</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="variable">$cachedResult</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 执行搜索</span></span><br><span class="line"><span class="variable">$result</span> = <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">performSearch</span>(<span class="variable">$filterKeywords</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 缓存结果</span></span><br><span class="line"><span class="variable language_">$this</span>-&gt;cache-&gt;<span class="title function_ invoke__">set</span>(<span class="variable">$cacheKey</span>, <span class="variable">$result</span>, <span class="number">3600</span>); <span class="comment">// 缓存1小时</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="variable">$result</span>;</span><br></pre></td></tr></table></figure><h2 id="兼容性考虑"><a href="#兼容性考虑" class="headerlink" title="兼容性考虑"></a>兼容性考虑</h2><h3 id="1-版本兼容"><a href="#1-版本兼容" class="headerlink" title="1. 版本兼容"></a>1. 版本兼容</h3><p>确保修改后的代码与ongwu版本兼容：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 检查ongwu版本</span></span><br><span class="line"><span class="keyword">if</span> (<span class="title function_ invoke__">version_compare</span>(ongwu_<span class="title class_">Common</span>::<span class="variable constant_">VERSION</span>, <span class="string">&#x27;1.2.0&#x27;</span>, <span class="string">&#x27;&gt;=&#x27;</span>)) &#123;</span><br><span class="line">    <span class="comment">// 新版本代码</span></span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="comment">// 旧版本兼容代码</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2-插件兼容"><a href="#2-插件兼容" class="headerlink" title="2. 插件兼容"></a>2. 插件兼容</h3><p>如果使用了其他搜索相关插件，需要确保兼容性：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 检查是否有其他搜索插件</span></span><br><span class="line"><span class="keyword">if</span> (<span class="title function_ invoke__">class_exists</span>(<span class="string">&#x27;Widget_Archive_Search&#x27;</span>)) &#123;</span><br><span class="line">    <span class="comment">// 使用插件提供的搜索功能</span></span><br><span class="line">    <span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">pluginSearch</span>(<span class="variable">$filterKeywords</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>通过修改ongwu源码，我们可以实现符号搜索功能，但需要注意：</p><ol><li><strong>安全性</strong>：使用<code>addslashes</code>或预处理语句防止SQL注入</li><li><strong>性能</strong>：添加适当的数据库索引和缓存机制</li><li><strong>兼容性</strong>：确保与ongwu版本和其他插件的兼容性</li><li><strong>维护性</strong>：记录修改内容，便于后续升级</li></ol><p>这样修改后，ongwu就能支持包含符号的搜索了，满足更复杂的搜索需求。</p><hr><p><em>注意：修改源码后，在ongwu升级时需要重新应用这些修改。建议将修改内容记录在文档中，或者创建补丁文件。</em></p>]]></content>
      
      
      <categories>
          
          <category> tutorial </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ongwu </tag>
            
            <tag> 搜索功能 </tag>
            
            <tag> 源码修改 </tag>
            
            <tag> 符号搜索 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>让ongwu支持搜索符号</title>
      <link href="/2025/01/09/7%20-%20%E5%89%AF%E6%9C%AC%20(8)%20-%20%E5%89%AF%E6%9C%AC/"/>
      <url>/2025/01/09/7%20-%20%E5%89%AF%E6%9C%AC%20(8)%20-%20%E5%89%AF%E6%9C%AC/</url>
      
        <content type="html"><![CDATA[<h1 id="让ongwu支持搜索符号"><a href="#让ongwu支持搜索符号" class="headerlink" title="让ongwu支持搜索符号"></a>让ongwu支持搜索符号</h1><h2 id="问题背景"><a href="#问题背景" class="headerlink" title="问题背景"></a>问题背景</h2><p>用过ongwu的应该都清楚它本身搜索是不支持符号的，一般都会过滤掉，只会保留文字字母数字进行搜索。这种过滤应该是出于安全考虑的，但如果你的需求需要搜索符号之类的东西，则可以通过修改源码的方式实现。</p><h2 id="修改原理"><a href="#修改原理" class="headerlink" title="修改原理"></a>修改原理</h2><p>ongwu的搜索功能是在<code>var/Widget/Archive.php</code>中实现的，所以需要修改两处代码：</p><h3 id="第一处：关键词过滤逻辑"><a href="#第一处：关键词过滤逻辑" class="headerlink" title="第一处：关键词过滤逻辑"></a>第一处：关键词过滤逻辑</h3><p>在<code>var/Widget/Archive.php</code>文件中找到以下代码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 原始代码</span></span><br><span class="line"><span class="variable">$filterKeywords</span> = <span class="variable language_">$this</span>-&gt;request-&gt;<span class="title function_ invoke__">get</span>(<span class="string">&#x27;keywords&#x27;</span>);</span><br><span class="line"><span class="variable">$filterKeywords</span> = <span class="title function_ invoke__">trim</span>(<span class="variable">$filterKeywords</span>);</span><br><span class="line"><span class="variable">$filterKeywords</span> = <span class="title function_ invoke__">str_replace</span>(<span class="keyword">array</span>(<span class="string">&#x27;+&#x27;</span>, <span class="string">&#x27;-&#x27;</span>, <span class="string">&#x27;&amp;&#x27;</span>, <span class="string">&#x27;|&#x27;</span>, <span class="string">&#x27;!&#x27;</span>, <span class="string">&#x27;(&#x27;</span>, <span class="string">&#x27;)&#x27;</span>, <span class="string">&#x27;&#123;&#x27;</span>, <span class="string">&#x27;&#125;&#x27;</span>, <span class="string">&#x27;[&#x27;</span>, <span class="string">&#x27;]&#x27;</span>, <span class="string">&#x27;^&#x27;</span>, <span class="string">&#x27;&quot;&#x27;</span>, <span class="string">&#x27;~&#x27;</span>, <span class="string">&#x27;*&#x27;</span>, <span class="string">&#x27;?&#x27;</span>, <span class="string">&#x27;:&#x27;</span>, <span class="string">&#x27;\\&#x27;</span>), <span class="string">&#x27;&#x27;</span>, <span class="variable">$filterKeywords</span>);</span><br></pre></td></tr></table></figure><p>修改为：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 修改后的代码</span></span><br><span class="line"><span class="variable">$filterKeywords</span> = <span class="variable language_">$this</span>-&gt;request-&gt;<span class="title function_ invoke__">get</span>(<span class="string">&#x27;keywords&#x27;</span>);</span><br><span class="line"><span class="variable">$filterKeywords</span> = <span class="title function_ invoke__">trim</span>(<span class="variable">$filterKeywords</span>);</span><br><span class="line"><span class="comment">// 注释掉或删除符号过滤代码</span></span><br><span class="line"><span class="comment">// $filterKeywords = str_replace(array(&#x27;+&#x27;, &#x27;-&#x27;, &#x27;&amp;&#x27;, &#x27;|&#x27;, &#x27;!&#x27;, &#x27;(&#x27;, &#x27;)&#x27;, &#x27;&#123;&#x27;, &#x27;&#125;&#x27;, &#x27;[&#x27;, &#x27;]&#x27;, &#x27;^&#x27;, &#x27;&quot;&#x27;, &#x27;~&#x27;, &#x27;*&#x27;, &#x27;?&#x27;, &#x27;:&#x27;, &#x27;\\&#x27;), &#x27;&#x27;, $filterKeywords);</span></span><br></pre></td></tr></table></figure><h3 id="第二处：SQL查询构建"><a href="#第二处：SQL查询构建" class="headerlink" title="第二处：SQL查询构建"></a>第二处：SQL查询构建</h3><p>找到构建SQL查询的部分：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 原始代码</span></span><br><span class="line"><span class="keyword">if</span> (!<span class="keyword">empty</span>(<span class="variable">$filterKeywords</span>)) &#123;</span><br><span class="line">    <span class="variable">$filterKeywords</span> = <span class="string">&#x27;%&#x27;</span> . <span class="variable">$filterKeywords</span> . <span class="string">&#x27;%&#x27;</span>;</span><br><span class="line">    <span class="variable language_">$this</span>-&gt;db-&gt;<span class="title function_ invoke__">where</span>(<span class="string">&#x27;table.contents.title LIKE ? OR table.contents.text LIKE ?&#x27;</span>, <span class="variable">$filterKeywords</span>, <span class="variable">$filterKeywords</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>修改为：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 修改后的代码</span></span><br><span class="line"><span class="keyword">if</span> (!<span class="keyword">empty</span>(<span class="variable">$filterKeywords</span>)) &#123;</span><br><span class="line">    <span class="comment">// 支持特殊符号的搜索</span></span><br><span class="line">    <span class="variable">$filterKeywords</span> = <span class="string">&#x27;%&#x27;</span> . <span class="title function_ invoke__">addslashes</span>(<span class="variable">$filterKeywords</span>) . <span class="string">&#x27;%&#x27;</span>;</span><br><span class="line">    <span class="variable language_">$this</span>-&gt;db-&gt;<span class="title function_ invoke__">where</span>(<span class="string">&#x27;table.contents.title LIKE ? OR table.contents.text LIKE ?&#x27;</span>, <span class="variable">$filterKeywords</span>, <span class="variable">$filterKeywords</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="完整修改示例"><a href="#完整修改示例" class="headerlink" title="完整修改示例"></a>完整修改示例</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">// var/Widget/Archive.php 修改示例</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Widget_Archive</span> <span class="keyword">extends</span> <span class="title">Widget_Abstract_Contents</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="comment">// ... 其他代码 ...</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 执行搜索</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">search</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;db-&gt;<span class="title function_ invoke__">select</span>(<span class="string">&#x27;table.contents.cid&#x27;</span>, <span class="string">&#x27;table.contents.title&#x27;</span>, <span class="string">&#x27;table.contents.slug&#x27;</span>, <span class="string">&#x27;table.contents.created&#x27;</span>, <span class="string">&#x27;table.contents.authorId&#x27;</span>, <span class="string">&#x27;table.contents.modified&#x27;</span>, <span class="string">&#x27;table.contents.type&#x27;</span>, <span class="string">&#x27;table.contents.status&#x27;</span>, <span class="string">&#x27;table.contents.password&#x27;</span>, <span class="string">&#x27;table.contents.commentsNum&#x27;</span>, <span class="string">&#x27;table.contents.order&#x27;</span>, <span class="string">&#x27;table.contents.template&#x27;</span>, <span class="string">&#x27;table.contents.allowComment&#x27;</span>, <span class="string">&#x27;table.contents.allowPing&#x27;</span>, <span class="string">&#x27;table.contents.allowFeed&#x27;</span>);</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;db-&gt;<span class="keyword">from</span>(<span class="string">&#x27;table.contents&#x27;</span>);</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 获取搜索关键词</span></span><br><span class="line">        <span class="variable">$filterKeywords</span> = <span class="variable language_">$this</span>-&gt;request-&gt;<span class="title function_ invoke__">get</span>(<span class="string">&#x27;keywords&#x27;</span>);</span><br><span class="line">        <span class="variable">$filterKeywords</span> = <span class="title function_ invoke__">trim</span>(<span class="variable">$filterKeywords</span>);</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 注释掉符号过滤，支持符号搜索</span></span><br><span class="line">        <span class="comment">// $filterKeywords = str_replace(array(&#x27;+&#x27;, &#x27;-&#x27;, &#x27;&amp;&#x27;, &#x27;|&#x27;, &#x27;!&#x27;, &#x27;(&#x27;, &#x27;)&#x27;, &#x27;&#123;&#x27;, &#x27;&#125;&#x27;, &#x27;[&#x27;, &#x27;]&#x27;, &#x27;^&#x27;, &#x27;&quot;&#x27;, &#x27;~&#x27;, &#x27;*&#x27;, &#x27;?&#x27;, &#x27;:&#x27;, &#x27;\\&#x27;), &#x27;&#x27;, $filterKeywords);</span></span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> (!<span class="keyword">empty</span>(<span class="variable">$filterKeywords</span>)) &#123;</span><br><span class="line">            <span class="comment">// 使用addslashes防止SQL注入，同时支持符号搜索</span></span><br><span class="line">            <span class="variable">$filterKeywords</span> = <span class="string">&#x27;%&#x27;</span> . <span class="title function_ invoke__">addslashes</span>(<span class="variable">$filterKeywords</span>) . <span class="string">&#x27;%&#x27;</span>;</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;db-&gt;<span class="title function_ invoke__">where</span>(<span class="string">&#x27;table.contents.title LIKE ? OR table.contents.text LIKE ?&#x27;</span>, <span class="variable">$filterKeywords</span>, <span class="variable">$filterKeywords</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// ... 其他搜索逻辑 ...</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="安全注意事项"><a href="#安全注意事项" class="headerlink" title="安全注意事项"></a>安全注意事项</h2><h3 id="1-SQL注入防护"><a href="#1-SQL注入防护" class="headerlink" title="1. SQL注入防护"></a>1. SQL注入防护</h3><p>虽然我们允许符号搜索，但必须确保SQL安全：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 使用addslashes或更好的方法处理输入</span></span><br><span class="line"><span class="variable">$filterKeywords</span> = <span class="title function_ invoke__">addslashes</span>(<span class="variable">$filterKeywords</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 或者使用预处理语句</span></span><br><span class="line"><span class="variable">$stmt</span> = <span class="variable language_">$this</span>-&gt;db-&gt;<span class="title function_ invoke__">prepare</span>(<span class="string">&#x27;SELECT * FROM table.contents WHERE title LIKE ? OR text LIKE ?&#x27;</span>);</span><br><span class="line"><span class="variable">$stmt</span>-&gt;<span class="title function_ invoke__">execute</span>(<span class="keyword">array</span>(<span class="variable">$filterKeywords</span>, <span class="variable">$filterKeywords</span>));</span><br></pre></td></tr></table></figure><h3 id="2-输入验证"><a href="#2-输入验证" class="headerlink" title="2. 输入验证"></a>2. 输入验证</h3><p>添加输入长度和内容验证：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 验证搜索关键词长度</span></span><br><span class="line"><span class="keyword">if</span> (<span class="title function_ invoke__">strlen</span>(<span class="variable">$filterKeywords</span>) &gt; <span class="number">100</span>) &#123;</span><br><span class="line">    <span class="variable">$filterKeywords</span> = <span class="title function_ invoke__">substr</span>(<span class="variable">$filterKeywords</span>, <span class="number">0</span>, <span class="number">100</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 验证是否包含恶意内容</span></span><br><span class="line"><span class="keyword">if</span> (<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/&lt;script|javascript|vbscript|onload|onerror/i&#x27;</span>, <span class="variable">$filterKeywords</span>)) &#123;</span><br><span class="line">    <span class="variable">$filterKeywords</span> = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="测试验证"><a href="#测试验证" class="headerlink" title="测试验证"></a>测试验证</h2><h3 id="1-基本符号测试"><a href="#1-基本符号测试" class="headerlink" title="1. 基本符号测试"></a>1. 基本符号测试</h3><p>测试以下符号是否能正常搜索：</p><ul><li><code>+</code> 加号</li><li><code>-</code> 减号</li><li><code>&amp;</code> 与号</li><li><code>|</code> 或号</li><li><code>!</code> 感叹号</li><li><code>()</code> 括号</li><li><code>[]</code> 方括号</li><li><code>&#123;&#125;</code> 花括号</li></ul><h3 id="2-复杂搜索测试"><a href="#2-复杂搜索测试" class="headerlink" title="2. 复杂搜索测试"></a>2. 复杂搜索测试</h3><p>测试复杂搜索表达式：</p><ul><li><code>PHP + MySQL</code></li><li><code>(前端|后端)开发</code></li><li><code>ongwu &amp; 插件</code></li><li><code>[重要] 更新</code></li></ul><h2 id="性能优化建议"><a href="#性能优化建议" class="headerlink" title="性能优化建议"></a>性能优化建议</h2><h3 id="1-索引优化"><a href="#1-索引优化" class="headerlink" title="1. 索引优化"></a>1. 索引优化</h3><p>为搜索字段添加数据库索引：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 为标题和内容字段添加全文索引</span></span><br><span class="line"><span class="keyword">ALTER TABLE</span> ongwu_contents <span class="keyword">ADD</span> FULLTEXT(title, text);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 或者添加普通索引</span></span><br><span class="line"><span class="keyword">CREATE</span> INDEX idx_contents_title <span class="keyword">ON</span> ongwu_contents(title);</span><br><span class="line"><span class="keyword">CREATE</span> INDEX idx_contents_text <span class="keyword">ON</span> ongwu_contents(text);</span><br></pre></td></tr></table></figure><h3 id="2-搜索结果缓存"><a href="#2-搜索结果缓存" class="headerlink" title="2. 搜索结果缓存"></a>2. 搜索结果缓存</h3><p>实现搜索结果缓存机制：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 缓存搜索结果</span></span><br><span class="line"><span class="variable">$cacheKey</span> = <span class="string">&#x27;search_&#x27;</span> . <span class="title function_ invoke__">md5</span>(<span class="variable">$filterKeywords</span>);</span><br><span class="line"><span class="variable">$cachedResult</span> = <span class="variable language_">$this</span>-&gt;cache-&gt;<span class="title function_ invoke__">get</span>(<span class="variable">$cacheKey</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="variable">$cachedResult</span> !== <span class="literal">false</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="variable">$cachedResult</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 执行搜索</span></span><br><span class="line"><span class="variable">$result</span> = <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">performSearch</span>(<span class="variable">$filterKeywords</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 缓存结果</span></span><br><span class="line"><span class="variable language_">$this</span>-&gt;cache-&gt;<span class="title function_ invoke__">set</span>(<span class="variable">$cacheKey</span>, <span class="variable">$result</span>, <span class="number">3600</span>); <span class="comment">// 缓存1小时</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="variable">$result</span>;</span><br></pre></td></tr></table></figure><h2 id="兼容性考虑"><a href="#兼容性考虑" class="headerlink" title="兼容性考虑"></a>兼容性考虑</h2><h3 id="1-版本兼容"><a href="#1-版本兼容" class="headerlink" title="1. 版本兼容"></a>1. 版本兼容</h3><p>确保修改后的代码与ongwu版本兼容：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 检查ongwu版本</span></span><br><span class="line"><span class="keyword">if</span> (<span class="title function_ invoke__">version_compare</span>(ongwu_<span class="title class_">Common</span>::<span class="variable constant_">VERSION</span>, <span class="string">&#x27;1.2.0&#x27;</span>, <span class="string">&#x27;&gt;=&#x27;</span>)) &#123;</span><br><span class="line">    <span class="comment">// 新版本代码</span></span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="comment">// 旧版本兼容代码</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2-插件兼容"><a href="#2-插件兼容" class="headerlink" title="2. 插件兼容"></a>2. 插件兼容</h3><p>如果使用了其他搜索相关插件，需要确保兼容性：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 检查是否有其他搜索插件</span></span><br><span class="line"><span class="keyword">if</span> (<span class="title function_ invoke__">class_exists</span>(<span class="string">&#x27;Widget_Archive_Search&#x27;</span>)) &#123;</span><br><span class="line">    <span class="comment">// 使用插件提供的搜索功能</span></span><br><span class="line">    <span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">pluginSearch</span>(<span class="variable">$filterKeywords</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>通过修改ongwu源码，我们可以实现符号搜索功能，但需要注意：</p><ol><li><strong>安全性</strong>：使用<code>addslashes</code>或预处理语句防止SQL注入</li><li><strong>性能</strong>：添加适当的数据库索引和缓存机制</li><li><strong>兼容性</strong>：确保与ongwu版本和其他插件的兼容性</li><li><strong>维护性</strong>：记录修改内容，便于后续升级</li></ol><p>这样修改后，ongwu就能支持包含符号的搜索了，满足更复杂的搜索需求。</p><hr><p><em>注意：修改源码后，在ongwu升级时需要重新应用这些修改。建议将修改内容记录在文档中，或者创建补丁文件。</em></p>]]></content>
      
      
      <categories>
          
          <category> tutorial </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ongwu </tag>
            
            <tag> 搜索功能 </tag>
            
            <tag> 源码修改 </tag>
            
            <tag> 符号搜索 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>让ongwu支持搜索符号</title>
      <link href="/2025/01/09/7%20-%20%E5%89%AF%E6%9C%AC%20(9)%20-%20%E5%89%AF%E6%9C%AC/"/>
      <url>/2025/01/09/7%20-%20%E5%89%AF%E6%9C%AC%20(9)%20-%20%E5%89%AF%E6%9C%AC/</url>
      
        <content type="html"><![CDATA[<h1 id="让ongwu支持搜索符号"><a href="#让ongwu支持搜索符号" class="headerlink" title="让ongwu支持搜索符号"></a>让ongwu支持搜索符号</h1><h2 id="问题背景"><a href="#问题背景" class="headerlink" title="问题背景"></a>问题背景</h2><p>用过ongwu的应该都清楚它本身搜索是不支持符号的，一般都会过滤掉，只会保留文字字母数字进行搜索。这种过滤应该是出于安全考虑的，但如果你的需求需要搜索符号之类的东西，则可以通过修改源码的方式实现。</p><h2 id="修改原理"><a href="#修改原理" class="headerlink" title="修改原理"></a>修改原理</h2><p>ongwu的搜索功能是在<code>var/Widget/Archive.php</code>中实现的，所以需要修改两处代码：</p><h3 id="第一处：关键词过滤逻辑"><a href="#第一处：关键词过滤逻辑" class="headerlink" title="第一处：关键词过滤逻辑"></a>第一处：关键词过滤逻辑</h3><p>在<code>var/Widget/Archive.php</code>文件中找到以下代码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 原始代码</span></span><br><span class="line"><span class="variable">$filterKeywords</span> = <span class="variable language_">$this</span>-&gt;request-&gt;<span class="title function_ invoke__">get</span>(<span class="string">&#x27;keywords&#x27;</span>);</span><br><span class="line"><span class="variable">$filterKeywords</span> = <span class="title function_ invoke__">trim</span>(<span class="variable">$filterKeywords</span>);</span><br><span class="line"><span class="variable">$filterKeywords</span> = <span class="title function_ invoke__">str_replace</span>(<span class="keyword">array</span>(<span class="string">&#x27;+&#x27;</span>, <span class="string">&#x27;-&#x27;</span>, <span class="string">&#x27;&amp;&#x27;</span>, <span class="string">&#x27;|&#x27;</span>, <span class="string">&#x27;!&#x27;</span>, <span class="string">&#x27;(&#x27;</span>, <span class="string">&#x27;)&#x27;</span>, <span class="string">&#x27;&#123;&#x27;</span>, <span class="string">&#x27;&#125;&#x27;</span>, <span class="string">&#x27;[&#x27;</span>, <span class="string">&#x27;]&#x27;</span>, <span class="string">&#x27;^&#x27;</span>, <span class="string">&#x27;&quot;&#x27;</span>, <span class="string">&#x27;~&#x27;</span>, <span class="string">&#x27;*&#x27;</span>, <span class="string">&#x27;?&#x27;</span>, <span class="string">&#x27;:&#x27;</span>, <span class="string">&#x27;\\&#x27;</span>), <span class="string">&#x27;&#x27;</span>, <span class="variable">$filterKeywords</span>);</span><br></pre></td></tr></table></figure><p>修改为：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 修改后的代码</span></span><br><span class="line"><span class="variable">$filterKeywords</span> = <span class="variable language_">$this</span>-&gt;request-&gt;<span class="title function_ invoke__">get</span>(<span class="string">&#x27;keywords&#x27;</span>);</span><br><span class="line"><span class="variable">$filterKeywords</span> = <span class="title function_ invoke__">trim</span>(<span class="variable">$filterKeywords</span>);</span><br><span class="line"><span class="comment">// 注释掉或删除符号过滤代码</span></span><br><span class="line"><span class="comment">// $filterKeywords = str_replace(array(&#x27;+&#x27;, &#x27;-&#x27;, &#x27;&amp;&#x27;, &#x27;|&#x27;, &#x27;!&#x27;, &#x27;(&#x27;, &#x27;)&#x27;, &#x27;&#123;&#x27;, &#x27;&#125;&#x27;, &#x27;[&#x27;, &#x27;]&#x27;, &#x27;^&#x27;, &#x27;&quot;&#x27;, &#x27;~&#x27;, &#x27;*&#x27;, &#x27;?&#x27;, &#x27;:&#x27;, &#x27;\\&#x27;), &#x27;&#x27;, $filterKeywords);</span></span><br></pre></td></tr></table></figure><h3 id="第二处：SQL查询构建"><a href="#第二处：SQL查询构建" class="headerlink" title="第二处：SQL查询构建"></a>第二处：SQL查询构建</h3><p>找到构建SQL查询的部分：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 原始代码</span></span><br><span class="line"><span class="keyword">if</span> (!<span class="keyword">empty</span>(<span class="variable">$filterKeywords</span>)) &#123;</span><br><span class="line">    <span class="variable">$filterKeywords</span> = <span class="string">&#x27;%&#x27;</span> . <span class="variable">$filterKeywords</span> . <span class="string">&#x27;%&#x27;</span>;</span><br><span class="line">    <span class="variable language_">$this</span>-&gt;db-&gt;<span class="title function_ invoke__">where</span>(<span class="string">&#x27;table.contents.title LIKE ? OR table.contents.text LIKE ?&#x27;</span>, <span class="variable">$filterKeywords</span>, <span class="variable">$filterKeywords</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>修改为：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 修改后的代码</span></span><br><span class="line"><span class="keyword">if</span> (!<span class="keyword">empty</span>(<span class="variable">$filterKeywords</span>)) &#123;</span><br><span class="line">    <span class="comment">// 支持特殊符号的搜索</span></span><br><span class="line">    <span class="variable">$filterKeywords</span> = <span class="string">&#x27;%&#x27;</span> . <span class="title function_ invoke__">addslashes</span>(<span class="variable">$filterKeywords</span>) . <span class="string">&#x27;%&#x27;</span>;</span><br><span class="line">    <span class="variable language_">$this</span>-&gt;db-&gt;<span class="title function_ invoke__">where</span>(<span class="string">&#x27;table.contents.title LIKE ? OR table.contents.text LIKE ?&#x27;</span>, <span class="variable">$filterKeywords</span>, <span class="variable">$filterKeywords</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="完整修改示例"><a href="#完整修改示例" class="headerlink" title="完整修改示例"></a>完整修改示例</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">// var/Widget/Archive.php 修改示例</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Widget_Archive</span> <span class="keyword">extends</span> <span class="title">Widget_Abstract_Contents</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="comment">// ... 其他代码 ...</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 执行搜索</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">search</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;db-&gt;<span class="title function_ invoke__">select</span>(<span class="string">&#x27;table.contents.cid&#x27;</span>, <span class="string">&#x27;table.contents.title&#x27;</span>, <span class="string">&#x27;table.contents.slug&#x27;</span>, <span class="string">&#x27;table.contents.created&#x27;</span>, <span class="string">&#x27;table.contents.authorId&#x27;</span>, <span class="string">&#x27;table.contents.modified&#x27;</span>, <span class="string">&#x27;table.contents.type&#x27;</span>, <span class="string">&#x27;table.contents.status&#x27;</span>, <span class="string">&#x27;table.contents.password&#x27;</span>, <span class="string">&#x27;table.contents.commentsNum&#x27;</span>, <span class="string">&#x27;table.contents.order&#x27;</span>, <span class="string">&#x27;table.contents.template&#x27;</span>, <span class="string">&#x27;table.contents.allowComment&#x27;</span>, <span class="string">&#x27;table.contents.allowPing&#x27;</span>, <span class="string">&#x27;table.contents.allowFeed&#x27;</span>);</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;db-&gt;<span class="keyword">from</span>(<span class="string">&#x27;table.contents&#x27;</span>);</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 获取搜索关键词</span></span><br><span class="line">        <span class="variable">$filterKeywords</span> = <span class="variable language_">$this</span>-&gt;request-&gt;<span class="title function_ invoke__">get</span>(<span class="string">&#x27;keywords&#x27;</span>);</span><br><span class="line">        <span class="variable">$filterKeywords</span> = <span class="title function_ invoke__">trim</span>(<span class="variable">$filterKeywords</span>);</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 注释掉符号过滤，支持符号搜索</span></span><br><span class="line">        <span class="comment">// $filterKeywords = str_replace(array(&#x27;+&#x27;, &#x27;-&#x27;, &#x27;&amp;&#x27;, &#x27;|&#x27;, &#x27;!&#x27;, &#x27;(&#x27;, &#x27;)&#x27;, &#x27;&#123;&#x27;, &#x27;&#125;&#x27;, &#x27;[&#x27;, &#x27;]&#x27;, &#x27;^&#x27;, &#x27;&quot;&#x27;, &#x27;~&#x27;, &#x27;*&#x27;, &#x27;?&#x27;, &#x27;:&#x27;, &#x27;\\&#x27;), &#x27;&#x27;, $filterKeywords);</span></span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> (!<span class="keyword">empty</span>(<span class="variable">$filterKeywords</span>)) &#123;</span><br><span class="line">            <span class="comment">// 使用addslashes防止SQL注入，同时支持符号搜索</span></span><br><span class="line">            <span class="variable">$filterKeywords</span> = <span class="string">&#x27;%&#x27;</span> . <span class="title function_ invoke__">addslashes</span>(<span class="variable">$filterKeywords</span>) . <span class="string">&#x27;%&#x27;</span>;</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;db-&gt;<span class="title function_ invoke__">where</span>(<span class="string">&#x27;table.contents.title LIKE ? OR table.contents.text LIKE ?&#x27;</span>, <span class="variable">$filterKeywords</span>, <span class="variable">$filterKeywords</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// ... 其他搜索逻辑 ...</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="安全注意事项"><a href="#安全注意事项" class="headerlink" title="安全注意事项"></a>安全注意事项</h2><h3 id="1-SQL注入防护"><a href="#1-SQL注入防护" class="headerlink" title="1. SQL注入防护"></a>1. SQL注入防护</h3><p>虽然我们允许符号搜索，但必须确保SQL安全：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 使用addslashes或更好的方法处理输入</span></span><br><span class="line"><span class="variable">$filterKeywords</span> = <span class="title function_ invoke__">addslashes</span>(<span class="variable">$filterKeywords</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 或者使用预处理语句</span></span><br><span class="line"><span class="variable">$stmt</span> = <span class="variable language_">$this</span>-&gt;db-&gt;<span class="title function_ invoke__">prepare</span>(<span class="string">&#x27;SELECT * FROM table.contents WHERE title LIKE ? OR text LIKE ?&#x27;</span>);</span><br><span class="line"><span class="variable">$stmt</span>-&gt;<span class="title function_ invoke__">execute</span>(<span class="keyword">array</span>(<span class="variable">$filterKeywords</span>, <span class="variable">$filterKeywords</span>));</span><br></pre></td></tr></table></figure><h3 id="2-输入验证"><a href="#2-输入验证" class="headerlink" title="2. 输入验证"></a>2. 输入验证</h3><p>添加输入长度和内容验证：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 验证搜索关键词长度</span></span><br><span class="line"><span class="keyword">if</span> (<span class="title function_ invoke__">strlen</span>(<span class="variable">$filterKeywords</span>) &gt; <span class="number">100</span>) &#123;</span><br><span class="line">    <span class="variable">$filterKeywords</span> = <span class="title function_ invoke__">substr</span>(<span class="variable">$filterKeywords</span>, <span class="number">0</span>, <span class="number">100</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 验证是否包含恶意内容</span></span><br><span class="line"><span class="keyword">if</span> (<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/&lt;script|javascript|vbscript|onload|onerror/i&#x27;</span>, <span class="variable">$filterKeywords</span>)) &#123;</span><br><span class="line">    <span class="variable">$filterKeywords</span> = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="测试验证"><a href="#测试验证" class="headerlink" title="测试验证"></a>测试验证</h2><h3 id="1-基本符号测试"><a href="#1-基本符号测试" class="headerlink" title="1. 基本符号测试"></a>1. 基本符号测试</h3><p>测试以下符号是否能正常搜索：</p><ul><li><code>+</code> 加号</li><li><code>-</code> 减号</li><li><code>&amp;</code> 与号</li><li><code>|</code> 或号</li><li><code>!</code> 感叹号</li><li><code>()</code> 括号</li><li><code>[]</code> 方括号</li><li><code>&#123;&#125;</code> 花括号</li></ul><h3 id="2-复杂搜索测试"><a href="#2-复杂搜索测试" class="headerlink" title="2. 复杂搜索测试"></a>2. 复杂搜索测试</h3><p>测试复杂搜索表达式：</p><ul><li><code>PHP + MySQL</code></li><li><code>(前端|后端)开发</code></li><li><code>ongwu &amp; 插件</code></li><li><code>[重要] 更新</code></li></ul><h2 id="性能优化建议"><a href="#性能优化建议" class="headerlink" title="性能优化建议"></a>性能优化建议</h2><h3 id="1-索引优化"><a href="#1-索引优化" class="headerlink" title="1. 索引优化"></a>1. 索引优化</h3><p>为搜索字段添加数据库索引：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 为标题和内容字段添加全文索引</span></span><br><span class="line"><span class="keyword">ALTER TABLE</span> ongwu_contents <span class="keyword">ADD</span> FULLTEXT(title, text);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 或者添加普通索引</span></span><br><span class="line"><span class="keyword">CREATE</span> INDEX idx_contents_title <span class="keyword">ON</span> ongwu_contents(title);</span><br><span class="line"><span class="keyword">CREATE</span> INDEX idx_contents_text <span class="keyword">ON</span> ongwu_contents(text);</span><br></pre></td></tr></table></figure><h3 id="2-搜索结果缓存"><a href="#2-搜索结果缓存" class="headerlink" title="2. 搜索结果缓存"></a>2. 搜索结果缓存</h3><p>实现搜索结果缓存机制：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 缓存搜索结果</span></span><br><span class="line"><span class="variable">$cacheKey</span> = <span class="string">&#x27;search_&#x27;</span> . <span class="title function_ invoke__">md5</span>(<span class="variable">$filterKeywords</span>);</span><br><span class="line"><span class="variable">$cachedResult</span> = <span class="variable language_">$this</span>-&gt;cache-&gt;<span class="title function_ invoke__">get</span>(<span class="variable">$cacheKey</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="variable">$cachedResult</span> !== <span class="literal">false</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="variable">$cachedResult</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 执行搜索</span></span><br><span class="line"><span class="variable">$result</span> = <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">performSearch</span>(<span class="variable">$filterKeywords</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 缓存结果</span></span><br><span class="line"><span class="variable language_">$this</span>-&gt;cache-&gt;<span class="title function_ invoke__">set</span>(<span class="variable">$cacheKey</span>, <span class="variable">$result</span>, <span class="number">3600</span>); <span class="comment">// 缓存1小时</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="variable">$result</span>;</span><br></pre></td></tr></table></figure><h2 id="兼容性考虑"><a href="#兼容性考虑" class="headerlink" title="兼容性考虑"></a>兼容性考虑</h2><h3 id="1-版本兼容"><a href="#1-版本兼容" class="headerlink" title="1. 版本兼容"></a>1. 版本兼容</h3><p>确保修改后的代码与ongwu版本兼容：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 检查ongwu版本</span></span><br><span class="line"><span class="keyword">if</span> (<span class="title function_ invoke__">version_compare</span>(ongwu_<span class="title class_">Common</span>::<span class="variable constant_">VERSION</span>, <span class="string">&#x27;1.2.0&#x27;</span>, <span class="string">&#x27;&gt;=&#x27;</span>)) &#123;</span><br><span class="line">    <span class="comment">// 新版本代码</span></span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="comment">// 旧版本兼容代码</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2-插件兼容"><a href="#2-插件兼容" class="headerlink" title="2. 插件兼容"></a>2. 插件兼容</h3><p>如果使用了其他搜索相关插件，需要确保兼容性：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 检查是否有其他搜索插件</span></span><br><span class="line"><span class="keyword">if</span> (<span class="title function_ invoke__">class_exists</span>(<span class="string">&#x27;Widget_Archive_Search&#x27;</span>)) &#123;</span><br><span class="line">    <span class="comment">// 使用插件提供的搜索功能</span></span><br><span class="line">    <span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">pluginSearch</span>(<span class="variable">$filterKeywords</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>通过修改ongwu源码，我们可以实现符号搜索功能，但需要注意：</p><ol><li><strong>安全性</strong>：使用<code>addslashes</code>或预处理语句防止SQL注入</li><li><strong>性能</strong>：添加适当的数据库索引和缓存机制</li><li><strong>兼容性</strong>：确保与ongwu版本和其他插件的兼容性</li><li><strong>维护性</strong>：记录修改内容，便于后续升级</li></ol><p>这样修改后，ongwu就能支持包含符号的搜索了，满足更复杂的搜索需求。</p><hr><p><em>注意：修改源码后，在ongwu升级时需要重新应用这些修改。建议将修改内容记录在文档中，或者创建补丁文件。</em></p>]]></content>
      
      
      <categories>
          
          <category> tutorial </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ongwu </tag>
            
            <tag> 搜索功能 </tag>
            
            <tag> 源码修改 </tag>
            
            <tag> 符号搜索 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>让ongwu支持搜索符号</title>
      <link href="/2025/01/09/7%20-%20%E5%89%AF%E6%9C%AC%20(9)/"/>
      <url>/2025/01/09/7%20-%20%E5%89%AF%E6%9C%AC%20(9)/</url>
      
        <content type="html"><![CDATA[<h1 id="让ongwu支持搜索符号"><a href="#让ongwu支持搜索符号" class="headerlink" title="让ongwu支持搜索符号"></a>让ongwu支持搜索符号</h1><h2 id="问题背景"><a href="#问题背景" class="headerlink" title="问题背景"></a>问题背景</h2><p>用过ongwu的应该都清楚它本身搜索是不支持符号的，一般都会过滤掉，只会保留文字字母数字进行搜索。这种过滤应该是出于安全考虑的，但如果你的需求需要搜索符号之类的东西，则可以通过修改源码的方式实现。</p><h2 id="修改原理"><a href="#修改原理" class="headerlink" title="修改原理"></a>修改原理</h2><p>ongwu的搜索功能是在<code>var/Widget/Archive.php</code>中实现的，所以需要修改两处代码：</p><h3 id="第一处：关键词过滤逻辑"><a href="#第一处：关键词过滤逻辑" class="headerlink" title="第一处：关键词过滤逻辑"></a>第一处：关键词过滤逻辑</h3><p>在<code>var/Widget/Archive.php</code>文件中找到以下代码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 原始代码</span></span><br><span class="line"><span class="variable">$filterKeywords</span> = <span class="variable language_">$this</span>-&gt;request-&gt;<span class="title function_ invoke__">get</span>(<span class="string">&#x27;keywords&#x27;</span>);</span><br><span class="line"><span class="variable">$filterKeywords</span> = <span class="title function_ invoke__">trim</span>(<span class="variable">$filterKeywords</span>);</span><br><span class="line"><span class="variable">$filterKeywords</span> = <span class="title function_ invoke__">str_replace</span>(<span class="keyword">array</span>(<span class="string">&#x27;+&#x27;</span>, <span class="string">&#x27;-&#x27;</span>, <span class="string">&#x27;&amp;&#x27;</span>, <span class="string">&#x27;|&#x27;</span>, <span class="string">&#x27;!&#x27;</span>, <span class="string">&#x27;(&#x27;</span>, <span class="string">&#x27;)&#x27;</span>, <span class="string">&#x27;&#123;&#x27;</span>, <span class="string">&#x27;&#125;&#x27;</span>, <span class="string">&#x27;[&#x27;</span>, <span class="string">&#x27;]&#x27;</span>, <span class="string">&#x27;^&#x27;</span>, <span class="string">&#x27;&quot;&#x27;</span>, <span class="string">&#x27;~&#x27;</span>, <span class="string">&#x27;*&#x27;</span>, <span class="string">&#x27;?&#x27;</span>, <span class="string">&#x27;:&#x27;</span>, <span class="string">&#x27;\\&#x27;</span>), <span class="string">&#x27;&#x27;</span>, <span class="variable">$filterKeywords</span>);</span><br></pre></td></tr></table></figure><p>修改为：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 修改后的代码</span></span><br><span class="line"><span class="variable">$filterKeywords</span> = <span class="variable language_">$this</span>-&gt;request-&gt;<span class="title function_ invoke__">get</span>(<span class="string">&#x27;keywords&#x27;</span>);</span><br><span class="line"><span class="variable">$filterKeywords</span> = <span class="title function_ invoke__">trim</span>(<span class="variable">$filterKeywords</span>);</span><br><span class="line"><span class="comment">// 注释掉或删除符号过滤代码</span></span><br><span class="line"><span class="comment">// $filterKeywords = str_replace(array(&#x27;+&#x27;, &#x27;-&#x27;, &#x27;&amp;&#x27;, &#x27;|&#x27;, &#x27;!&#x27;, &#x27;(&#x27;, &#x27;)&#x27;, &#x27;&#123;&#x27;, &#x27;&#125;&#x27;, &#x27;[&#x27;, &#x27;]&#x27;, &#x27;^&#x27;, &#x27;&quot;&#x27;, &#x27;~&#x27;, &#x27;*&#x27;, &#x27;?&#x27;, &#x27;:&#x27;, &#x27;\\&#x27;), &#x27;&#x27;, $filterKeywords);</span></span><br></pre></td></tr></table></figure><h3 id="第二处：SQL查询构建"><a href="#第二处：SQL查询构建" class="headerlink" title="第二处：SQL查询构建"></a>第二处：SQL查询构建</h3><p>找到构建SQL查询的部分：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 原始代码</span></span><br><span class="line"><span class="keyword">if</span> (!<span class="keyword">empty</span>(<span class="variable">$filterKeywords</span>)) &#123;</span><br><span class="line">    <span class="variable">$filterKeywords</span> = <span class="string">&#x27;%&#x27;</span> . <span class="variable">$filterKeywords</span> . <span class="string">&#x27;%&#x27;</span>;</span><br><span class="line">    <span class="variable language_">$this</span>-&gt;db-&gt;<span class="title function_ invoke__">where</span>(<span class="string">&#x27;table.contents.title LIKE ? OR table.contents.text LIKE ?&#x27;</span>, <span class="variable">$filterKeywords</span>, <span class="variable">$filterKeywords</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>修改为：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 修改后的代码</span></span><br><span class="line"><span class="keyword">if</span> (!<span class="keyword">empty</span>(<span class="variable">$filterKeywords</span>)) &#123;</span><br><span class="line">    <span class="comment">// 支持特殊符号的搜索</span></span><br><span class="line">    <span class="variable">$filterKeywords</span> = <span class="string">&#x27;%&#x27;</span> . <span class="title function_ invoke__">addslashes</span>(<span class="variable">$filterKeywords</span>) . <span class="string">&#x27;%&#x27;</span>;</span><br><span class="line">    <span class="variable language_">$this</span>-&gt;db-&gt;<span class="title function_ invoke__">where</span>(<span class="string">&#x27;table.contents.title LIKE ? OR table.contents.text LIKE ?&#x27;</span>, <span class="variable">$filterKeywords</span>, <span class="variable">$filterKeywords</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="完整修改示例"><a href="#完整修改示例" class="headerlink" title="完整修改示例"></a>完整修改示例</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">// var/Widget/Archive.php 修改示例</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Widget_Archive</span> <span class="keyword">extends</span> <span class="title">Widget_Abstract_Contents</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="comment">// ... 其他代码 ...</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 执行搜索</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">search</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;db-&gt;<span class="title function_ invoke__">select</span>(<span class="string">&#x27;table.contents.cid&#x27;</span>, <span class="string">&#x27;table.contents.title&#x27;</span>, <span class="string">&#x27;table.contents.slug&#x27;</span>, <span class="string">&#x27;table.contents.created&#x27;</span>, <span class="string">&#x27;table.contents.authorId&#x27;</span>, <span class="string">&#x27;table.contents.modified&#x27;</span>, <span class="string">&#x27;table.contents.type&#x27;</span>, <span class="string">&#x27;table.contents.status&#x27;</span>, <span class="string">&#x27;table.contents.password&#x27;</span>, <span class="string">&#x27;table.contents.commentsNum&#x27;</span>, <span class="string">&#x27;table.contents.order&#x27;</span>, <span class="string">&#x27;table.contents.template&#x27;</span>, <span class="string">&#x27;table.contents.allowComment&#x27;</span>, <span class="string">&#x27;table.contents.allowPing&#x27;</span>, <span class="string">&#x27;table.contents.allowFeed&#x27;</span>);</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;db-&gt;<span class="keyword">from</span>(<span class="string">&#x27;table.contents&#x27;</span>);</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 获取搜索关键词</span></span><br><span class="line">        <span class="variable">$filterKeywords</span> = <span class="variable language_">$this</span>-&gt;request-&gt;<span class="title function_ invoke__">get</span>(<span class="string">&#x27;keywords&#x27;</span>);</span><br><span class="line">        <span class="variable">$filterKeywords</span> = <span class="title function_ invoke__">trim</span>(<span class="variable">$filterKeywords</span>);</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 注释掉符号过滤，支持符号搜索</span></span><br><span class="line">        <span class="comment">// $filterKeywords = str_replace(array(&#x27;+&#x27;, &#x27;-&#x27;, &#x27;&amp;&#x27;, &#x27;|&#x27;, &#x27;!&#x27;, &#x27;(&#x27;, &#x27;)&#x27;, &#x27;&#123;&#x27;, &#x27;&#125;&#x27;, &#x27;[&#x27;, &#x27;]&#x27;, &#x27;^&#x27;, &#x27;&quot;&#x27;, &#x27;~&#x27;, &#x27;*&#x27;, &#x27;?&#x27;, &#x27;:&#x27;, &#x27;\\&#x27;), &#x27;&#x27;, $filterKeywords);</span></span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> (!<span class="keyword">empty</span>(<span class="variable">$filterKeywords</span>)) &#123;</span><br><span class="line">            <span class="comment">// 使用addslashes防止SQL注入，同时支持符号搜索</span></span><br><span class="line">            <span class="variable">$filterKeywords</span> = <span class="string">&#x27;%&#x27;</span> . <span class="title function_ invoke__">addslashes</span>(<span class="variable">$filterKeywords</span>) . <span class="string">&#x27;%&#x27;</span>;</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;db-&gt;<span class="title function_ invoke__">where</span>(<span class="string">&#x27;table.contents.title LIKE ? OR table.contents.text LIKE ?&#x27;</span>, <span class="variable">$filterKeywords</span>, <span class="variable">$filterKeywords</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// ... 其他搜索逻辑 ...</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="安全注意事项"><a href="#安全注意事项" class="headerlink" title="安全注意事项"></a>安全注意事项</h2><h3 id="1-SQL注入防护"><a href="#1-SQL注入防护" class="headerlink" title="1. SQL注入防护"></a>1. SQL注入防护</h3><p>虽然我们允许符号搜索，但必须确保SQL安全：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 使用addslashes或更好的方法处理输入</span></span><br><span class="line"><span class="variable">$filterKeywords</span> = <span class="title function_ invoke__">addslashes</span>(<span class="variable">$filterKeywords</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 或者使用预处理语句</span></span><br><span class="line"><span class="variable">$stmt</span> = <span class="variable language_">$this</span>-&gt;db-&gt;<span class="title function_ invoke__">prepare</span>(<span class="string">&#x27;SELECT * FROM table.contents WHERE title LIKE ? OR text LIKE ?&#x27;</span>);</span><br><span class="line"><span class="variable">$stmt</span>-&gt;<span class="title function_ invoke__">execute</span>(<span class="keyword">array</span>(<span class="variable">$filterKeywords</span>, <span class="variable">$filterKeywords</span>));</span><br></pre></td></tr></table></figure><h3 id="2-输入验证"><a href="#2-输入验证" class="headerlink" title="2. 输入验证"></a>2. 输入验证</h3><p>添加输入长度和内容验证：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 验证搜索关键词长度</span></span><br><span class="line"><span class="keyword">if</span> (<span class="title function_ invoke__">strlen</span>(<span class="variable">$filterKeywords</span>) &gt; <span class="number">100</span>) &#123;</span><br><span class="line">    <span class="variable">$filterKeywords</span> = <span class="title function_ invoke__">substr</span>(<span class="variable">$filterKeywords</span>, <span class="number">0</span>, <span class="number">100</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 验证是否包含恶意内容</span></span><br><span class="line"><span class="keyword">if</span> (<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/&lt;script|javascript|vbscript|onload|onerror/i&#x27;</span>, <span class="variable">$filterKeywords</span>)) &#123;</span><br><span class="line">    <span class="variable">$filterKeywords</span> = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="测试验证"><a href="#测试验证" class="headerlink" title="测试验证"></a>测试验证</h2><h3 id="1-基本符号测试"><a href="#1-基本符号测试" class="headerlink" title="1. 基本符号测试"></a>1. 基本符号测试</h3><p>测试以下符号是否能正常搜索：</p><ul><li><code>+</code> 加号</li><li><code>-</code> 减号</li><li><code>&amp;</code> 与号</li><li><code>|</code> 或号</li><li><code>!</code> 感叹号</li><li><code>()</code> 括号</li><li><code>[]</code> 方括号</li><li><code>&#123;&#125;</code> 花括号</li></ul><h3 id="2-复杂搜索测试"><a href="#2-复杂搜索测试" class="headerlink" title="2. 复杂搜索测试"></a>2. 复杂搜索测试</h3><p>测试复杂搜索表达式：</p><ul><li><code>PHP + MySQL</code></li><li><code>(前端|后端)开发</code></li><li><code>ongwu &amp; 插件</code></li><li><code>[重要] 更新</code></li></ul><h2 id="性能优化建议"><a href="#性能优化建议" class="headerlink" title="性能优化建议"></a>性能优化建议</h2><h3 id="1-索引优化"><a href="#1-索引优化" class="headerlink" title="1. 索引优化"></a>1. 索引优化</h3><p>为搜索字段添加数据库索引：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 为标题和内容字段添加全文索引</span></span><br><span class="line"><span class="keyword">ALTER TABLE</span> ongwu_contents <span class="keyword">ADD</span> FULLTEXT(title, text);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 或者添加普通索引</span></span><br><span class="line"><span class="keyword">CREATE</span> INDEX idx_contents_title <span class="keyword">ON</span> ongwu_contents(title);</span><br><span class="line"><span class="keyword">CREATE</span> INDEX idx_contents_text <span class="keyword">ON</span> ongwu_contents(text);</span><br></pre></td></tr></table></figure><h3 id="2-搜索结果缓存"><a href="#2-搜索结果缓存" class="headerlink" title="2. 搜索结果缓存"></a>2. 搜索结果缓存</h3><p>实现搜索结果缓存机制：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 缓存搜索结果</span></span><br><span class="line"><span class="variable">$cacheKey</span> = <span class="string">&#x27;search_&#x27;</span> . <span class="title function_ invoke__">md5</span>(<span class="variable">$filterKeywords</span>);</span><br><span class="line"><span class="variable">$cachedResult</span> = <span class="variable language_">$this</span>-&gt;cache-&gt;<span class="title function_ invoke__">get</span>(<span class="variable">$cacheKey</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="variable">$cachedResult</span> !== <span class="literal">false</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="variable">$cachedResult</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 执行搜索</span></span><br><span class="line"><span class="variable">$result</span> = <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">performSearch</span>(<span class="variable">$filterKeywords</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 缓存结果</span></span><br><span class="line"><span class="variable language_">$this</span>-&gt;cache-&gt;<span class="title function_ invoke__">set</span>(<span class="variable">$cacheKey</span>, <span class="variable">$result</span>, <span class="number">3600</span>); <span class="comment">// 缓存1小时</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="variable">$result</span>;</span><br></pre></td></tr></table></figure><h2 id="兼容性考虑"><a href="#兼容性考虑" class="headerlink" title="兼容性考虑"></a>兼容性考虑</h2><h3 id="1-版本兼容"><a href="#1-版本兼容" class="headerlink" title="1. 版本兼容"></a>1. 版本兼容</h3><p>确保修改后的代码与ongwu版本兼容：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 检查ongwu版本</span></span><br><span class="line"><span class="keyword">if</span> (<span class="title function_ invoke__">version_compare</span>(ongwu_<span class="title class_">Common</span>::<span class="variable constant_">VERSION</span>, <span class="string">&#x27;1.2.0&#x27;</span>, <span class="string">&#x27;&gt;=&#x27;</span>)) &#123;</span><br><span class="line">    <span class="comment">// 新版本代码</span></span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="comment">// 旧版本兼容代码</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2-插件兼容"><a href="#2-插件兼容" class="headerlink" title="2. 插件兼容"></a>2. 插件兼容</h3><p>如果使用了其他搜索相关插件，需要确保兼容性：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 检查是否有其他搜索插件</span></span><br><span class="line"><span class="keyword">if</span> (<span class="title function_ invoke__">class_exists</span>(<span class="string">&#x27;Widget_Archive_Search&#x27;</span>)) &#123;</span><br><span class="line">    <span class="comment">// 使用插件提供的搜索功能</span></span><br><span class="line">    <span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">pluginSearch</span>(<span class="variable">$filterKeywords</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>通过修改ongwu源码，我们可以实现符号搜索功能，但需要注意：</p><ol><li><strong>安全性</strong>：使用<code>addslashes</code>或预处理语句防止SQL注入</li><li><strong>性能</strong>：添加适当的数据库索引和缓存机制</li><li><strong>兼容性</strong>：确保与ongwu版本和其他插件的兼容性</li><li><strong>维护性</strong>：记录修改内容，便于后续升级</li></ol><p>这样修改后，ongwu就能支持包含符号的搜索了，满足更复杂的搜索需求。</p><hr><p><em>注意：修改源码后，在ongwu升级时需要重新应用这些修改。建议将修改内容记录在文档中，或者创建补丁文件。</em></p>]]></content>
      
      
      <categories>
          
          <category> tutorial </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ongwu </tag>
            
            <tag> 搜索功能 </tag>
            
            <tag> 源码修改 </tag>
            
            <tag> 符号搜索 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>让ongwu支持搜索符号</title>
      <link href="/2025/01/09/7%20-%20%E5%89%AF%E6%9C%AC/"/>
      <url>/2025/01/09/7%20-%20%E5%89%AF%E6%9C%AC/</url>
      
        <content type="html"><![CDATA[<h1 id="让ongwu支持搜索符号"><a href="#让ongwu支持搜索符号" class="headerlink" title="让ongwu支持搜索符号"></a>让ongwu支持搜索符号</h1><h2 id="问题背景"><a href="#问题背景" class="headerlink" title="问题背景"></a>问题背景</h2><p>用过ongwu的应该都清楚它本身搜索是不支持符号的，一般都会过滤掉，只会保留文字字母数字进行搜索。这种过滤应该是出于安全考虑的，但如果你的需求需要搜索符号之类的东西，则可以通过修改源码的方式实现。</p><h2 id="修改原理"><a href="#修改原理" class="headerlink" title="修改原理"></a>修改原理</h2><p>ongwu的搜索功能是在<code>var/Widget/Archive.php</code>中实现的，所以需要修改两处代码：</p><h3 id="第一处：关键词过滤逻辑"><a href="#第一处：关键词过滤逻辑" class="headerlink" title="第一处：关键词过滤逻辑"></a>第一处：关键词过滤逻辑</h3><p>在<code>var/Widget/Archive.php</code>文件中找到以下代码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 原始代码</span></span><br><span class="line"><span class="variable">$filterKeywords</span> = <span class="variable language_">$this</span>-&gt;request-&gt;<span class="title function_ invoke__">get</span>(<span class="string">&#x27;keywords&#x27;</span>);</span><br><span class="line"><span class="variable">$filterKeywords</span> = <span class="title function_ invoke__">trim</span>(<span class="variable">$filterKeywords</span>);</span><br><span class="line"><span class="variable">$filterKeywords</span> = <span class="title function_ invoke__">str_replace</span>(<span class="keyword">array</span>(<span class="string">&#x27;+&#x27;</span>, <span class="string">&#x27;-&#x27;</span>, <span class="string">&#x27;&amp;&#x27;</span>, <span class="string">&#x27;|&#x27;</span>, <span class="string">&#x27;!&#x27;</span>, <span class="string">&#x27;(&#x27;</span>, <span class="string">&#x27;)&#x27;</span>, <span class="string">&#x27;&#123;&#x27;</span>, <span class="string">&#x27;&#125;&#x27;</span>, <span class="string">&#x27;[&#x27;</span>, <span class="string">&#x27;]&#x27;</span>, <span class="string">&#x27;^&#x27;</span>, <span class="string">&#x27;&quot;&#x27;</span>, <span class="string">&#x27;~&#x27;</span>, <span class="string">&#x27;*&#x27;</span>, <span class="string">&#x27;?&#x27;</span>, <span class="string">&#x27;:&#x27;</span>, <span class="string">&#x27;\\&#x27;</span>), <span class="string">&#x27;&#x27;</span>, <span class="variable">$filterKeywords</span>);</span><br></pre></td></tr></table></figure><p>修改为：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 修改后的代码</span></span><br><span class="line"><span class="variable">$filterKeywords</span> = <span class="variable language_">$this</span>-&gt;request-&gt;<span class="title function_ invoke__">get</span>(<span class="string">&#x27;keywords&#x27;</span>);</span><br><span class="line"><span class="variable">$filterKeywords</span> = <span class="title function_ invoke__">trim</span>(<span class="variable">$filterKeywords</span>);</span><br><span class="line"><span class="comment">// 注释掉或删除符号过滤代码</span></span><br><span class="line"><span class="comment">// $filterKeywords = str_replace(array(&#x27;+&#x27;, &#x27;-&#x27;, &#x27;&amp;&#x27;, &#x27;|&#x27;, &#x27;!&#x27;, &#x27;(&#x27;, &#x27;)&#x27;, &#x27;&#123;&#x27;, &#x27;&#125;&#x27;, &#x27;[&#x27;, &#x27;]&#x27;, &#x27;^&#x27;, &#x27;&quot;&#x27;, &#x27;~&#x27;, &#x27;*&#x27;, &#x27;?&#x27;, &#x27;:&#x27;, &#x27;\\&#x27;), &#x27;&#x27;, $filterKeywords);</span></span><br></pre></td></tr></table></figure><h3 id="第二处：SQL查询构建"><a href="#第二处：SQL查询构建" class="headerlink" title="第二处：SQL查询构建"></a>第二处：SQL查询构建</h3><p>找到构建SQL查询的部分：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 原始代码</span></span><br><span class="line"><span class="keyword">if</span> (!<span class="keyword">empty</span>(<span class="variable">$filterKeywords</span>)) &#123;</span><br><span class="line">    <span class="variable">$filterKeywords</span> = <span class="string">&#x27;%&#x27;</span> . <span class="variable">$filterKeywords</span> . <span class="string">&#x27;%&#x27;</span>;</span><br><span class="line">    <span class="variable language_">$this</span>-&gt;db-&gt;<span class="title function_ invoke__">where</span>(<span class="string">&#x27;table.contents.title LIKE ? OR table.contents.text LIKE ?&#x27;</span>, <span class="variable">$filterKeywords</span>, <span class="variable">$filterKeywords</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>修改为：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 修改后的代码</span></span><br><span class="line"><span class="keyword">if</span> (!<span class="keyword">empty</span>(<span class="variable">$filterKeywords</span>)) &#123;</span><br><span class="line">    <span class="comment">// 支持特殊符号的搜索</span></span><br><span class="line">    <span class="variable">$filterKeywords</span> = <span class="string">&#x27;%&#x27;</span> . <span class="title function_ invoke__">addslashes</span>(<span class="variable">$filterKeywords</span>) . <span class="string">&#x27;%&#x27;</span>;</span><br><span class="line">    <span class="variable language_">$this</span>-&gt;db-&gt;<span class="title function_ invoke__">where</span>(<span class="string">&#x27;table.contents.title LIKE ? OR table.contents.text LIKE ?&#x27;</span>, <span class="variable">$filterKeywords</span>, <span class="variable">$filterKeywords</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="完整修改示例"><a href="#完整修改示例" class="headerlink" title="完整修改示例"></a>完整修改示例</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">// var/Widget/Archive.php 修改示例</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Widget_Archive</span> <span class="keyword">extends</span> <span class="title">Widget_Abstract_Contents</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="comment">// ... 其他代码 ...</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 执行搜索</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">search</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;db-&gt;<span class="title function_ invoke__">select</span>(<span class="string">&#x27;table.contents.cid&#x27;</span>, <span class="string">&#x27;table.contents.title&#x27;</span>, <span class="string">&#x27;table.contents.slug&#x27;</span>, <span class="string">&#x27;table.contents.created&#x27;</span>, <span class="string">&#x27;table.contents.authorId&#x27;</span>, <span class="string">&#x27;table.contents.modified&#x27;</span>, <span class="string">&#x27;table.contents.type&#x27;</span>, <span class="string">&#x27;table.contents.status&#x27;</span>, <span class="string">&#x27;table.contents.password&#x27;</span>, <span class="string">&#x27;table.contents.commentsNum&#x27;</span>, <span class="string">&#x27;table.contents.order&#x27;</span>, <span class="string">&#x27;table.contents.template&#x27;</span>, <span class="string">&#x27;table.contents.allowComment&#x27;</span>, <span class="string">&#x27;table.contents.allowPing&#x27;</span>, <span class="string">&#x27;table.contents.allowFeed&#x27;</span>);</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;db-&gt;<span class="keyword">from</span>(<span class="string">&#x27;table.contents&#x27;</span>);</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 获取搜索关键词</span></span><br><span class="line">        <span class="variable">$filterKeywords</span> = <span class="variable language_">$this</span>-&gt;request-&gt;<span class="title function_ invoke__">get</span>(<span class="string">&#x27;keywords&#x27;</span>);</span><br><span class="line">        <span class="variable">$filterKeywords</span> = <span class="title function_ invoke__">trim</span>(<span class="variable">$filterKeywords</span>);</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 注释掉符号过滤，支持符号搜索</span></span><br><span class="line">        <span class="comment">// $filterKeywords = str_replace(array(&#x27;+&#x27;, &#x27;-&#x27;, &#x27;&amp;&#x27;, &#x27;|&#x27;, &#x27;!&#x27;, &#x27;(&#x27;, &#x27;)&#x27;, &#x27;&#123;&#x27;, &#x27;&#125;&#x27;, &#x27;[&#x27;, &#x27;]&#x27;, &#x27;^&#x27;, &#x27;&quot;&#x27;, &#x27;~&#x27;, &#x27;*&#x27;, &#x27;?&#x27;, &#x27;:&#x27;, &#x27;\\&#x27;), &#x27;&#x27;, $filterKeywords);</span></span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> (!<span class="keyword">empty</span>(<span class="variable">$filterKeywords</span>)) &#123;</span><br><span class="line">            <span class="comment">// 使用addslashes防止SQL注入，同时支持符号搜索</span></span><br><span class="line">            <span class="variable">$filterKeywords</span> = <span class="string">&#x27;%&#x27;</span> . <span class="title function_ invoke__">addslashes</span>(<span class="variable">$filterKeywords</span>) . <span class="string">&#x27;%&#x27;</span>;</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;db-&gt;<span class="title function_ invoke__">where</span>(<span class="string">&#x27;table.contents.title LIKE ? OR table.contents.text LIKE ?&#x27;</span>, <span class="variable">$filterKeywords</span>, <span class="variable">$filterKeywords</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// ... 其他搜索逻辑 ...</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="安全注意事项"><a href="#安全注意事项" class="headerlink" title="安全注意事项"></a>安全注意事项</h2><h3 id="1-SQL注入防护"><a href="#1-SQL注入防护" class="headerlink" title="1. SQL注入防护"></a>1. SQL注入防护</h3><p>虽然我们允许符号搜索，但必须确保SQL安全：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 使用addslashes或更好的方法处理输入</span></span><br><span class="line"><span class="variable">$filterKeywords</span> = <span class="title function_ invoke__">addslashes</span>(<span class="variable">$filterKeywords</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 或者使用预处理语句</span></span><br><span class="line"><span class="variable">$stmt</span> = <span class="variable language_">$this</span>-&gt;db-&gt;<span class="title function_ invoke__">prepare</span>(<span class="string">&#x27;SELECT * FROM table.contents WHERE title LIKE ? OR text LIKE ?&#x27;</span>);</span><br><span class="line"><span class="variable">$stmt</span>-&gt;<span class="title function_ invoke__">execute</span>(<span class="keyword">array</span>(<span class="variable">$filterKeywords</span>, <span class="variable">$filterKeywords</span>));</span><br></pre></td></tr></table></figure><h3 id="2-输入验证"><a href="#2-输入验证" class="headerlink" title="2. 输入验证"></a>2. 输入验证</h3><p>添加输入长度和内容验证：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 验证搜索关键词长度</span></span><br><span class="line"><span class="keyword">if</span> (<span class="title function_ invoke__">strlen</span>(<span class="variable">$filterKeywords</span>) &gt; <span class="number">100</span>) &#123;</span><br><span class="line">    <span class="variable">$filterKeywords</span> = <span class="title function_ invoke__">substr</span>(<span class="variable">$filterKeywords</span>, <span class="number">0</span>, <span class="number">100</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 验证是否包含恶意内容</span></span><br><span class="line"><span class="keyword">if</span> (<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/&lt;script|javascript|vbscript|onload|onerror/i&#x27;</span>, <span class="variable">$filterKeywords</span>)) &#123;</span><br><span class="line">    <span class="variable">$filterKeywords</span> = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="测试验证"><a href="#测试验证" class="headerlink" title="测试验证"></a>测试验证</h2><h3 id="1-基本符号测试"><a href="#1-基本符号测试" class="headerlink" title="1. 基本符号测试"></a>1. 基本符号测试</h3><p>测试以下符号是否能正常搜索：</p><ul><li><code>+</code> 加号</li><li><code>-</code> 减号</li><li><code>&amp;</code> 与号</li><li><code>|</code> 或号</li><li><code>!</code> 感叹号</li><li><code>()</code> 括号</li><li><code>[]</code> 方括号</li><li><code>&#123;&#125;</code> 花括号</li></ul><h3 id="2-复杂搜索测试"><a href="#2-复杂搜索测试" class="headerlink" title="2. 复杂搜索测试"></a>2. 复杂搜索测试</h3><p>测试复杂搜索表达式：</p><ul><li><code>PHP + MySQL</code></li><li><code>(前端|后端)开发</code></li><li><code>ongwu &amp; 插件</code></li><li><code>[重要] 更新</code></li></ul><h2 id="性能优化建议"><a href="#性能优化建议" class="headerlink" title="性能优化建议"></a>性能优化建议</h2><h3 id="1-索引优化"><a href="#1-索引优化" class="headerlink" title="1. 索引优化"></a>1. 索引优化</h3><p>为搜索字段添加数据库索引：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 为标题和内容字段添加全文索引</span></span><br><span class="line"><span class="keyword">ALTER TABLE</span> ongwu_contents <span class="keyword">ADD</span> FULLTEXT(title, text);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 或者添加普通索引</span></span><br><span class="line"><span class="keyword">CREATE</span> INDEX idx_contents_title <span class="keyword">ON</span> ongwu_contents(title);</span><br><span class="line"><span class="keyword">CREATE</span> INDEX idx_contents_text <span class="keyword">ON</span> ongwu_contents(text);</span><br></pre></td></tr></table></figure><h3 id="2-搜索结果缓存"><a href="#2-搜索结果缓存" class="headerlink" title="2. 搜索结果缓存"></a>2. 搜索结果缓存</h3><p>实现搜索结果缓存机制：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 缓存搜索结果</span></span><br><span class="line"><span class="variable">$cacheKey</span> = <span class="string">&#x27;search_&#x27;</span> . <span class="title function_ invoke__">md5</span>(<span class="variable">$filterKeywords</span>);</span><br><span class="line"><span class="variable">$cachedResult</span> = <span class="variable language_">$this</span>-&gt;cache-&gt;<span class="title function_ invoke__">get</span>(<span class="variable">$cacheKey</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="variable">$cachedResult</span> !== <span class="literal">false</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="variable">$cachedResult</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 执行搜索</span></span><br><span class="line"><span class="variable">$result</span> = <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">performSearch</span>(<span class="variable">$filterKeywords</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 缓存结果</span></span><br><span class="line"><span class="variable language_">$this</span>-&gt;cache-&gt;<span class="title function_ invoke__">set</span>(<span class="variable">$cacheKey</span>, <span class="variable">$result</span>, <span class="number">3600</span>); <span class="comment">// 缓存1小时</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="variable">$result</span>;</span><br></pre></td></tr></table></figure><h2 id="兼容性考虑"><a href="#兼容性考虑" class="headerlink" title="兼容性考虑"></a>兼容性考虑</h2><h3 id="1-版本兼容"><a href="#1-版本兼容" class="headerlink" title="1. 版本兼容"></a>1. 版本兼容</h3><p>确保修改后的代码与ongwu版本兼容：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 检查ongwu版本</span></span><br><span class="line"><span class="keyword">if</span> (<span class="title function_ invoke__">version_compare</span>(ongwu_<span class="title class_">Common</span>::<span class="variable constant_">VERSION</span>, <span class="string">&#x27;1.2.0&#x27;</span>, <span class="string">&#x27;&gt;=&#x27;</span>)) &#123;</span><br><span class="line">    <span class="comment">// 新版本代码</span></span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="comment">// 旧版本兼容代码</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2-插件兼容"><a href="#2-插件兼容" class="headerlink" title="2. 插件兼容"></a>2. 插件兼容</h3><p>如果使用了其他搜索相关插件，需要确保兼容性：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 检查是否有其他搜索插件</span></span><br><span class="line"><span class="keyword">if</span> (<span class="title function_ invoke__">class_exists</span>(<span class="string">&#x27;Widget_Archive_Search&#x27;</span>)) &#123;</span><br><span class="line">    <span class="comment">// 使用插件提供的搜索功能</span></span><br><span class="line">    <span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">pluginSearch</span>(<span class="variable">$filterKeywords</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>通过修改ongwu源码，我们可以实现符号搜索功能，但需要注意：</p><ol><li><strong>安全性</strong>：使用<code>addslashes</code>或预处理语句防止SQL注入</li><li><strong>性能</strong>：添加适当的数据库索引和缓存机制</li><li><strong>兼容性</strong>：确保与ongwu版本和其他插件的兼容性</li><li><strong>维护性</strong>：记录修改内容，便于后续升级</li></ol><p>这样修改后，ongwu就能支持包含符号的搜索了，满足更复杂的搜索需求。</p><hr><p><em>注意：修改源码后，在ongwu升级时需要重新应用这些修改。建议将修改内容记录在文档中，或者创建补丁文件。</em></p>]]></content>
      
      
      <categories>
          
          <category> tutorial </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ongwu </tag>
            
            <tag> 搜索功能 </tag>
            
            <tag> 源码修改 </tag>
            
            <tag> 符号搜索 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>让ongwu支持搜索符号</title>
      <link href="/2025/01/09/7/"/>
      <url>/2025/01/09/7/</url>
      
        <content type="html"><![CDATA[<h1 id="让ongwu支持搜索符号"><a href="#让ongwu支持搜索符号" class="headerlink" title="让ongwu支持搜索符号"></a>让ongwu支持搜索符号</h1><h2 id="问题背景"><a href="#问题背景" class="headerlink" title="问题背景"></a>问题背景</h2><p>用过ongwu的应该都清楚它本身搜索是不支持符号的，一般都会过滤掉，只会保留文字字母数字进行搜索。这种过滤应该是出于安全考虑的，但如果你的需求需要搜索符号之类的东西，则可以通过修改源码的方式实现。</p><h2 id="修改原理"><a href="#修改原理" class="headerlink" title="修改原理"></a>修改原理</h2><p>ongwu的搜索功能是在<code>var/Widget/Archive.php</code>中实现的，所以需要修改两处代码：</p><h3 id="第一处：关键词过滤逻辑"><a href="#第一处：关键词过滤逻辑" class="headerlink" title="第一处：关键词过滤逻辑"></a>第一处：关键词过滤逻辑</h3><p>在<code>var/Widget/Archive.php</code>文件中找到以下代码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 原始代码</span></span><br><span class="line"><span class="variable">$filterKeywords</span> = <span class="variable language_">$this</span>-&gt;request-&gt;<span class="title function_ invoke__">get</span>(<span class="string">&#x27;keywords&#x27;</span>);</span><br><span class="line"><span class="variable">$filterKeywords</span> = <span class="title function_ invoke__">trim</span>(<span class="variable">$filterKeywords</span>);</span><br><span class="line"><span class="variable">$filterKeywords</span> = <span class="title function_ invoke__">str_replace</span>(<span class="keyword">array</span>(<span class="string">&#x27;+&#x27;</span>, <span class="string">&#x27;-&#x27;</span>, <span class="string">&#x27;&amp;&#x27;</span>, <span class="string">&#x27;|&#x27;</span>, <span class="string">&#x27;!&#x27;</span>, <span class="string">&#x27;(&#x27;</span>, <span class="string">&#x27;)&#x27;</span>, <span class="string">&#x27;&#123;&#x27;</span>, <span class="string">&#x27;&#125;&#x27;</span>, <span class="string">&#x27;[&#x27;</span>, <span class="string">&#x27;]&#x27;</span>, <span class="string">&#x27;^&#x27;</span>, <span class="string">&#x27;&quot;&#x27;</span>, <span class="string">&#x27;~&#x27;</span>, <span class="string">&#x27;*&#x27;</span>, <span class="string">&#x27;?&#x27;</span>, <span class="string">&#x27;:&#x27;</span>, <span class="string">&#x27;\\&#x27;</span>), <span class="string">&#x27;&#x27;</span>, <span class="variable">$filterKeywords</span>);</span><br></pre></td></tr></table></figure><p>修改为：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 修改后的代码</span></span><br><span class="line"><span class="variable">$filterKeywords</span> = <span class="variable language_">$this</span>-&gt;request-&gt;<span class="title function_ invoke__">get</span>(<span class="string">&#x27;keywords&#x27;</span>);</span><br><span class="line"><span class="variable">$filterKeywords</span> = <span class="title function_ invoke__">trim</span>(<span class="variable">$filterKeywords</span>);</span><br><span class="line"><span class="comment">// 注释掉或删除符号过滤代码</span></span><br><span class="line"><span class="comment">// $filterKeywords = str_replace(array(&#x27;+&#x27;, &#x27;-&#x27;, &#x27;&amp;&#x27;, &#x27;|&#x27;, &#x27;!&#x27;, &#x27;(&#x27;, &#x27;)&#x27;, &#x27;&#123;&#x27;, &#x27;&#125;&#x27;, &#x27;[&#x27;, &#x27;]&#x27;, &#x27;^&#x27;, &#x27;&quot;&#x27;, &#x27;~&#x27;, &#x27;*&#x27;, &#x27;?&#x27;, &#x27;:&#x27;, &#x27;\\&#x27;), &#x27;&#x27;, $filterKeywords);</span></span><br></pre></td></tr></table></figure><h3 id="第二处：SQL查询构建"><a href="#第二处：SQL查询构建" class="headerlink" title="第二处：SQL查询构建"></a>第二处：SQL查询构建</h3><p>找到构建SQL查询的部分：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 原始代码</span></span><br><span class="line"><span class="keyword">if</span> (!<span class="keyword">empty</span>(<span class="variable">$filterKeywords</span>)) &#123;</span><br><span class="line">    <span class="variable">$filterKeywords</span> = <span class="string">&#x27;%&#x27;</span> . <span class="variable">$filterKeywords</span> . <span class="string">&#x27;%&#x27;</span>;</span><br><span class="line">    <span class="variable language_">$this</span>-&gt;db-&gt;<span class="title function_ invoke__">where</span>(<span class="string">&#x27;table.contents.title LIKE ? OR table.contents.text LIKE ?&#x27;</span>, <span class="variable">$filterKeywords</span>, <span class="variable">$filterKeywords</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>修改为：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 修改后的代码</span></span><br><span class="line"><span class="keyword">if</span> (!<span class="keyword">empty</span>(<span class="variable">$filterKeywords</span>)) &#123;</span><br><span class="line">    <span class="comment">// 支持特殊符号的搜索</span></span><br><span class="line">    <span class="variable">$filterKeywords</span> = <span class="string">&#x27;%&#x27;</span> . <span class="title function_ invoke__">addslashes</span>(<span class="variable">$filterKeywords</span>) . <span class="string">&#x27;%&#x27;</span>;</span><br><span class="line">    <span class="variable language_">$this</span>-&gt;db-&gt;<span class="title function_ invoke__">where</span>(<span class="string">&#x27;table.contents.title LIKE ? OR table.contents.text LIKE ?&#x27;</span>, <span class="variable">$filterKeywords</span>, <span class="variable">$filterKeywords</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="完整修改示例"><a href="#完整修改示例" class="headerlink" title="完整修改示例"></a>完整修改示例</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">// var/Widget/Archive.php 修改示例</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Widget_Archive</span> <span class="keyword">extends</span> <span class="title">Widget_Abstract_Contents</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="comment">// ... 其他代码 ...</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 执行搜索</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">search</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;db-&gt;<span class="title function_ invoke__">select</span>(<span class="string">&#x27;table.contents.cid&#x27;</span>, <span class="string">&#x27;table.contents.title&#x27;</span>, <span class="string">&#x27;table.contents.slug&#x27;</span>, <span class="string">&#x27;table.contents.created&#x27;</span>, <span class="string">&#x27;table.contents.authorId&#x27;</span>, <span class="string">&#x27;table.contents.modified&#x27;</span>, <span class="string">&#x27;table.contents.type&#x27;</span>, <span class="string">&#x27;table.contents.status&#x27;</span>, <span class="string">&#x27;table.contents.password&#x27;</span>, <span class="string">&#x27;table.contents.commentsNum&#x27;</span>, <span class="string">&#x27;table.contents.order&#x27;</span>, <span class="string">&#x27;table.contents.template&#x27;</span>, <span class="string">&#x27;table.contents.allowComment&#x27;</span>, <span class="string">&#x27;table.contents.allowPing&#x27;</span>, <span class="string">&#x27;table.contents.allowFeed&#x27;</span>);</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;db-&gt;<span class="keyword">from</span>(<span class="string">&#x27;table.contents&#x27;</span>);</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 获取搜索关键词</span></span><br><span class="line">        <span class="variable">$filterKeywords</span> = <span class="variable language_">$this</span>-&gt;request-&gt;<span class="title function_ invoke__">get</span>(<span class="string">&#x27;keywords&#x27;</span>);</span><br><span class="line">        <span class="variable">$filterKeywords</span> = <span class="title function_ invoke__">trim</span>(<span class="variable">$filterKeywords</span>);</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 注释掉符号过滤，支持符号搜索</span></span><br><span class="line">        <span class="comment">// $filterKeywords = str_replace(array(&#x27;+&#x27;, &#x27;-&#x27;, &#x27;&amp;&#x27;, &#x27;|&#x27;, &#x27;!&#x27;, &#x27;(&#x27;, &#x27;)&#x27;, &#x27;&#123;&#x27;, &#x27;&#125;&#x27;, &#x27;[&#x27;, &#x27;]&#x27;, &#x27;^&#x27;, &#x27;&quot;&#x27;, &#x27;~&#x27;, &#x27;*&#x27;, &#x27;?&#x27;, &#x27;:&#x27;, &#x27;\\&#x27;), &#x27;&#x27;, $filterKeywords);</span></span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> (!<span class="keyword">empty</span>(<span class="variable">$filterKeywords</span>)) &#123;</span><br><span class="line">            <span class="comment">// 使用addslashes防止SQL注入，同时支持符号搜索</span></span><br><span class="line">            <span class="variable">$filterKeywords</span> = <span class="string">&#x27;%&#x27;</span> . <span class="title function_ invoke__">addslashes</span>(<span class="variable">$filterKeywords</span>) . <span class="string">&#x27;%&#x27;</span>;</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;db-&gt;<span class="title function_ invoke__">where</span>(<span class="string">&#x27;table.contents.title LIKE ? OR table.contents.text LIKE ?&#x27;</span>, <span class="variable">$filterKeywords</span>, <span class="variable">$filterKeywords</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// ... 其他搜索逻辑 ...</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="安全注意事项"><a href="#安全注意事项" class="headerlink" title="安全注意事项"></a>安全注意事项</h2><h3 id="1-SQL注入防护"><a href="#1-SQL注入防护" class="headerlink" title="1. SQL注入防护"></a>1. SQL注入防护</h3><p>虽然我们允许符号搜索，但必须确保SQL安全：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 使用addslashes或更好的方法处理输入</span></span><br><span class="line"><span class="variable">$filterKeywords</span> = <span class="title function_ invoke__">addslashes</span>(<span class="variable">$filterKeywords</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 或者使用预处理语句</span></span><br><span class="line"><span class="variable">$stmt</span> = <span class="variable language_">$this</span>-&gt;db-&gt;<span class="title function_ invoke__">prepare</span>(<span class="string">&#x27;SELECT * FROM table.contents WHERE title LIKE ? OR text LIKE ?&#x27;</span>);</span><br><span class="line"><span class="variable">$stmt</span>-&gt;<span class="title function_ invoke__">execute</span>(<span class="keyword">array</span>(<span class="variable">$filterKeywords</span>, <span class="variable">$filterKeywords</span>));</span><br></pre></td></tr></table></figure><h3 id="2-输入验证"><a href="#2-输入验证" class="headerlink" title="2. 输入验证"></a>2. 输入验证</h3><p>添加输入长度和内容验证：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 验证搜索关键词长度</span></span><br><span class="line"><span class="keyword">if</span> (<span class="title function_ invoke__">strlen</span>(<span class="variable">$filterKeywords</span>) &gt; <span class="number">100</span>) &#123;</span><br><span class="line">    <span class="variable">$filterKeywords</span> = <span class="title function_ invoke__">substr</span>(<span class="variable">$filterKeywords</span>, <span class="number">0</span>, <span class="number">100</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 验证是否包含恶意内容</span></span><br><span class="line"><span class="keyword">if</span> (<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/&lt;script|javascript|vbscript|onload|onerror/i&#x27;</span>, <span class="variable">$filterKeywords</span>)) &#123;</span><br><span class="line">    <span class="variable">$filterKeywords</span> = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="测试验证"><a href="#测试验证" class="headerlink" title="测试验证"></a>测试验证</h2><h3 id="1-基本符号测试"><a href="#1-基本符号测试" class="headerlink" title="1. 基本符号测试"></a>1. 基本符号测试</h3><p>测试以下符号是否能正常搜索：</p><ul><li><code>+</code> 加号</li><li><code>-</code> 减号</li><li><code>&amp;</code> 与号</li><li><code>|</code> 或号</li><li><code>!</code> 感叹号</li><li><code>()</code> 括号</li><li><code>[]</code> 方括号</li><li><code>&#123;&#125;</code> 花括号</li></ul><h3 id="2-复杂搜索测试"><a href="#2-复杂搜索测试" class="headerlink" title="2. 复杂搜索测试"></a>2. 复杂搜索测试</h3><p>测试复杂搜索表达式：</p><ul><li><code>PHP + MySQL</code></li><li><code>(前端|后端)开发</code></li><li><code>ongwu &amp; 插件</code></li><li><code>[重要] 更新</code></li></ul><h2 id="性能优化建议"><a href="#性能优化建议" class="headerlink" title="性能优化建议"></a>性能优化建议</h2><h3 id="1-索引优化"><a href="#1-索引优化" class="headerlink" title="1. 索引优化"></a>1. 索引优化</h3><p>为搜索字段添加数据库索引：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 为标题和内容字段添加全文索引</span></span><br><span class="line"><span class="keyword">ALTER TABLE</span> ongwu_contents <span class="keyword">ADD</span> FULLTEXT(title, text);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 或者添加普通索引</span></span><br><span class="line"><span class="keyword">CREATE</span> INDEX idx_contents_title <span class="keyword">ON</span> ongwu_contents(title);</span><br><span class="line"><span class="keyword">CREATE</span> INDEX idx_contents_text <span class="keyword">ON</span> ongwu_contents(text);</span><br></pre></td></tr></table></figure><h3 id="2-搜索结果缓存"><a href="#2-搜索结果缓存" class="headerlink" title="2. 搜索结果缓存"></a>2. 搜索结果缓存</h3><p>实现搜索结果缓存机制：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 缓存搜索结果</span></span><br><span class="line"><span class="variable">$cacheKey</span> = <span class="string">&#x27;search_&#x27;</span> . <span class="title function_ invoke__">md5</span>(<span class="variable">$filterKeywords</span>);</span><br><span class="line"><span class="variable">$cachedResult</span> = <span class="variable language_">$this</span>-&gt;cache-&gt;<span class="title function_ invoke__">get</span>(<span class="variable">$cacheKey</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="variable">$cachedResult</span> !== <span class="literal">false</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="variable">$cachedResult</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 执行搜索</span></span><br><span class="line"><span class="variable">$result</span> = <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">performSearch</span>(<span class="variable">$filterKeywords</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 缓存结果</span></span><br><span class="line"><span class="variable language_">$this</span>-&gt;cache-&gt;<span class="title function_ invoke__">set</span>(<span class="variable">$cacheKey</span>, <span class="variable">$result</span>, <span class="number">3600</span>); <span class="comment">// 缓存1小时</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="variable">$result</span>;</span><br></pre></td></tr></table></figure><h2 id="兼容性考虑"><a href="#兼容性考虑" class="headerlink" title="兼容性考虑"></a>兼容性考虑</h2><h3 id="1-版本兼容"><a href="#1-版本兼容" class="headerlink" title="1. 版本兼容"></a>1. 版本兼容</h3><p>确保修改后的代码与ongwu版本兼容：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 检查ongwu版本</span></span><br><span class="line"><span class="keyword">if</span> (<span class="title function_ invoke__">version_compare</span>(ongwu_<span class="title class_">Common</span>::<span class="variable constant_">VERSION</span>, <span class="string">&#x27;1.2.0&#x27;</span>, <span class="string">&#x27;&gt;=&#x27;</span>)) &#123;</span><br><span class="line">    <span class="comment">// 新版本代码</span></span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="comment">// 旧版本兼容代码</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2-插件兼容"><a href="#2-插件兼容" class="headerlink" title="2. 插件兼容"></a>2. 插件兼容</h3><p>如果使用了其他搜索相关插件，需要确保兼容性：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 检查是否有其他搜索插件</span></span><br><span class="line"><span class="keyword">if</span> (<span class="title function_ invoke__">class_exists</span>(<span class="string">&#x27;Widget_Archive_Search&#x27;</span>)) &#123;</span><br><span class="line">    <span class="comment">// 使用插件提供的搜索功能</span></span><br><span class="line">    <span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">pluginSearch</span>(<span class="variable">$filterKeywords</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>通过修改ongwu源码，我们可以实现符号搜索功能，但需要注意：</p><ol><li><strong>安全性</strong>：使用<code>addslashes</code>或预处理语句防止SQL注入</li><li><strong>性能</strong>：添加适当的数据库索引和缓存机制</li><li><strong>兼容性</strong>：确保与ongwu版本和其他插件的兼容性</li><li><strong>维护性</strong>：记录修改内容，便于后续升级</li></ol><p>这样修改后，ongwu就能支持包含符号的搜索了，满足更复杂的搜索需求。</p><hr><p><em>注意：修改源码后，在ongwu升级时需要重新应用这些修改。建议将修改内容记录在文档中，或者创建补丁文件。</em></p>]]></content>
      
      
      <categories>
          
          <category> tutorial </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ongwu </tag>
            
            <tag> 搜索功能 </tag>
            
            <tag> 源码修改 </tag>
            
            <tag> 符号搜索 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
